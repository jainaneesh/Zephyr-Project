/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /workspace/apps/multiple_esp_comm/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /chosen
 *   3   /esp32_bt_hci
 *   4   /wifi
 *   5   /soc
 *   6   /soc/gpio
 *   7   /soc/interrupt-controller@600c2000
 *   8   /soc/gpio/gpio@60004000
 *   9   /buttons
 *   10  /buttons/button_0
 *   11  /cpus
 *   12  /cpus/power-states
 *   13  /cpus/power-states/deep_sleep
 *   14  /cpus/power-states/light_sleep
 *   15  /cpus/cpu@0
 *   16  /cpus/cpu@1
 *   17  /gpio14-output
 *   18  /gpio14-output/driver_gpio
 *   19  /gpio7_input
 *   20  /gpio7_input/detecting_gpio
 *   21  /pin-controller
 *   22  /pin-controller/led-0
 *   23  /pin-controller/led-1
 *   24  /pin-controller/led-2
 *   25  /soc/rtc@60021000
 *   26  /soc/ledc@60019000
 *   27  /my-pwm-leds
 *   28  /my-pwm-leds/pwm_led_0
 *   29  /my-pwm-leds/pwm_led_1
 *   30  /my-pwm-leds/pwm_led_2
 *   31  /pin-controller/i2c0_default
 *   32  /pin-controller/i2c0_default/group1
 *   33  /pin-controller/i2c1_default
 *   34  /pin-controller/i2c1_default/group1
 *   35  /pin-controller/i2s0_default
 *   36  /pin-controller/i2s0_default/group1
 *   37  /pin-controller/i2s0_default/group2
 *   38  /pin-controller/i2s1_default
 *   39  /pin-controller/i2s1_default/group1
 *   40  /pin-controller/i2s1_default/group2
 *   41  /pin-controller/led-0/group1
 *   42  /pin-controller/led-1/group1
 *   43  /pin-controller/led-2/group1
 *   44  /pin-controller/spim2_default
 *   45  /pin-controller/spim2_default/group1
 *   46  /pin-controller/spim2_default/group2
 *   47  /pin-controller/spim3_default
 *   48  /pin-controller/spim3_default/group1
 *   49  /pin-controller/spim3_default/group2
 *   50  /pin-controller/twai_default
 *   51  /pin-controller/twai_default/group1
 *   52  /pin-controller/uart0_default
 *   53  /pin-controller/uart0_default/group1
 *   54  /pin-controller/uart0_default/group2
 *   55  /soc/adc@60040004
 *   56  /soc/can@6002b000
 *   57  /soc/coretemp@60008800
 *   58  /soc/counter@6001f000
 *   59  /soc/counter@6001f024
 *   60  /soc/counter@60020000
 *   61  /soc/counter@60020024
 *   62  /soc/i2c@60013000
 *   63  /soc/i2c@60027000
 *   64  /soc/dma@6003f000
 *   65  /soc/i2s@6000f000
 *   66  /soc/i2s@6002d000
 *   67  /soc/memory@3fcbd000
 *   68  /soc/ipm@3fcc1400
 *   69  /soc/lcd_cam@60041000
 *   70  /soc/mbox@3fcc1408
 *   71  /soc/mcpwm@6001e000
 *   72  /soc/mcpwm@6002c000
 *   73  /soc/memory@3fc88000
 *   74  /soc/memory@3fcbd400
 *   75  /soc/pcnt@60017000
 *   76  /soc/psram@3c000000
 *   77  /soc/rtc_timer@60008004
 *   78  /soc/spi@60024000
 *   79  /soc/spi@60025000
 *   80  /soc/touch@6000885c
 *   81  /soc/trng@6003507c
 *   82  /soc/uart@60000000
 *   83  /soc/uart@60010000
 *   84  /soc/uart@6002e000
 *   85  /soc/uart@60038000
 *   86  /soc/watchdog@6001f048
 *   87  /soc/watchdog@60020048
 *   88  /soc/xt_wdt@60021004
 *   89  /soc/adc@60040000
 *   90  /soc/adc@60040000/channel@0
 *   91  /soc/flash-controller@60002000
 *   92  /soc/flash-controller@60002000/flash@0
 *   93  /soc/flash-controller@60002000/flash@0/partitions
 *   94  /soc/flash-controller@60002000/flash@0/partitions/partition@0
 *   95  /soc/flash-controller@60002000/flash@0/partitions/partition@20000
 *   96  /soc/flash-controller@60002000/flash@0/partitions/partition@170000
 *   97  /soc/flash-controller@60002000/flash@0/partitions/partition@1F0000
 *   98  /soc/flash-controller@60002000/flash@0/partitions/partition@340000
 *   99  /soc/flash-controller@60002000/flash@0/partitions/partition@3C0000
 *   100 /soc/flash-controller@60002000/flash@0/partitions/partition@3E0000
 *   101 /soc/flash-controller@60002000/flash@0/partitions/partition@3F0000
 *   102 /soc/gpio/gpio@60004800
 *   103 /soc/ledc@60019000/channel0@0
 *   104 /soc/ledc@60019000/channel1@1
 *   105 /soc/ledc@60019000/channel2@2
 *   106 /soc/sdhc@60028000
 *   107 /soc/sdhc@60028000/sdhc@0
 *   108 /soc/sdhc@60028000/sdhc@1
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 11
#define DT_N_CHILD_NUM_STATUS_OKAY 10
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_buttons) fn(DT_N_S_my_pwm_leds) fn(DT_N_S_gpio14_output) fn(DT_N_S_gpio7_input)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio14_output) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio7_input)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_my_pwm_leds, __VA_ARGS__) fn(DT_N_S_gpio14_output, __VA_ARGS__) fn(DT_N_S_gpio7_input, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_wifi, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio14_output, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio7_input, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_cpus) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_buttons) fn(DT_N_S_my_pwm_leds) fn(DT_N_S_gpio14_output) fn(DT_N_S_gpio7_input)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio14_output) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio7_input)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_my_pwm_leds, __VA_ARGS__) fn(DT_N_S_gpio14_output, __VA_ARGS__) fn(DT_N_S_gpio7_input, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio14_output, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_gpio7_input, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /chosen */ \
	3, /* /esp32_bt_hci */ \
	4, /* /wifi */ \
	5, /* /soc */ \
	9, /* /buttons */ \
	11, /* /cpus */ \
	17, /* /gpio14-output */ \
	19, /* /gpio7_input */ \
	21, /* /pin-controller */ \
	27, /* /my-pwm-leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_espressif_esp32s3 DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_espressif_esp32s3 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "esp32s3"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"espressif,esp32s3"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "espressif,esp32s3"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32s3
#define DT_N_P_compatible_IDX_0_STRING_TOKEN espressif_esp32s3
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32S3
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__)
#define DT_N_P_compatible_LEN 1
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 2
#define DT_N_S_chosen_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /esp32_bt_hci
 *
 * Node identifier: DT_N_S_esp32_bt_hci
 *
 * Binding (compatible = espressif,esp32-bt-hci):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/espressif,esp32-bt-hci.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_esp32_bt_hci_PATH "/esp32_bt_hci"

/* Node's name with unit-address: */
#define DT_N_S_esp32_bt_hci_FULL_NAME "esp32_bt_hci"
#define DT_N_S_esp32_bt_hci_FULL_NAME_UNQUOTED esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_TOKEN esp32_bt_hci
#define DT_N_S_esp32_bt_hci_FULL_NAME_UPPER_TOKEN ESP32_BT_HCI

/* Node parent (/) identifier: */
#define DT_N_S_esp32_bt_hci_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_esp32_bt_hci_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_esp32_bt_hci_NODELABEL_NUM 1
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL(fn) fn(esp32_bt_hci)
#define DT_N_S_esp32_bt_hci_FOREACH_NODELABEL_VARGS(fn, ...) fn(esp32_bt_hci, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_esp32_bt_hci_CHILD_NUM 0
#define DT_N_S_esp32_bt_hci_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_esp32_bt_hci_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_esp32_bt_hci_ORD 3
#define DT_N_S_esp32_bt_hci_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_esp32_bt_hci_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_esp32_bt_hci_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_esp32_bt_hci_EXISTS 1
#define DT_N_INST_0_espressif_esp32_bt_hci DT_N_S_esp32_bt_hci
#define DT_N_NODELABEL_esp32_bt_hci        DT_N_S_esp32_bt_hci

/* Macros for properties that are special in the specification: */
#define DT_N_S_esp32_bt_hci_REG_NUM 0
#define DT_N_S_esp32_bt_hci_RANGES_NUM 0
#define DT_N_S_esp32_bt_hci_FOREACH_RANGE(fn) 
#define DT_N_S_esp32_bt_hci_IRQ_NUM 0
#define DT_N_S_esp32_bt_hci_IRQ_LEVEL 0
#define DT_N_S_esp32_bt_hci_COMPAT_MATCHES_espressif_esp32_bt_hci 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_COMPAT_MODEL_IDX_0 "esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_esp32_bt_hci_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_esp32_bt_hci_P_wakeup_source 0
#define DT_N_S_esp32_bt_hci_P_wakeup_source_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_esp32_bt_hci_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status "okay"
#define DT_N_S_esp32_bt_hci_P_status_STRING_UNQUOTED okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_TOKEN okay
#define DT_N_S_esp32_bt_hci_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_esp32_bt_hci_P_status_IDX_0 "okay"
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_esp32_bt_hci_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, status, 0)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, status, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_status_LEN 1
#define DT_N_S_esp32_bt_hci_P_status_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible {"espressif,esp32-bt-hci"}
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0 "espressif,esp32-bt-hci"
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-bt-hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_bt_hci
#define DT_N_S_esp32_bt_hci_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_BT_HCI
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, compatible, 0)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, compatible, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_compatible_LEN 1
#define DT_N_S_esp32_bt_hci_P_compatible_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init 0
#define DT_N_S_esp32_bt_hci_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UNQUOTED BT ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_STRING_UPPER_TOKEN BT_ESP32
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0 "BT ESP32"
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_name_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus "ipm"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UNQUOTED ipm
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_TOKEN ipm
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_STRING_UPPER_TOKEN IPM
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0 "ipm"
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_IDX 9
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_VAL_ipm_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_TOKEN ipm
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_IDX_0_ENUM_UPPER_TOKEN IPM
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_bus_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks {"no-auto-dle"}
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_IDX 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_VAL_no_auto_dle_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_TOKEN no_auto_dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_ENUM_UPPER_TOKEN NO_AUTO_DLE
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0 "no-auto-dle"
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UNQUOTED no-auto-dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_TOKEN no_auto_dle
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_IDX_0_STRING_UPPER_TOKEN NO_AUTO_DLE
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_esp32_bt_hci, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_LEN 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_quirks_EXISTS 1
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext 0
#define DT_N_S_esp32_bt_hci_P_bt_hci_vs_ext_EXISTS 1

/*
 * Devicetree node: /wifi
 *
 * Node identifier: DT_N_S_wifi
 *
 * Binding (compatible = espressif,esp32-wifi):
 *   $ZEPHYR_BASE/dts/bindings/wifi/espressif,esp32-wifi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_wifi_PATH "/wifi"

/* Node's name with unit-address: */
#define DT_N_S_wifi_FULL_NAME "wifi"
#define DT_N_S_wifi_FULL_NAME_UNQUOTED wifi
#define DT_N_S_wifi_FULL_NAME_TOKEN wifi
#define DT_N_S_wifi_FULL_NAME_UPPER_TOKEN WIFI

/* Node parent (/) identifier: */
#define DT_N_S_wifi_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_wifi_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_wifi_NODELABEL_NUM 1
#define DT_N_S_wifi_FOREACH_NODELABEL(fn) fn(wifi)
#define DT_N_S_wifi_FOREACH_NODELABEL_VARGS(fn, ...) fn(wifi, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_wifi_CHILD_NUM 0
#define DT_N_S_wifi_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_wifi_FOREACH_CHILD(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_wifi_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_wifi_ORD 4
#define DT_N_S_wifi_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_wifi_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_wifi_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_wifi_EXISTS 1
#define DT_N_INST_0_espressif_esp32_wifi DT_N_S_wifi
#define DT_N_NODELABEL_wifi              DT_N_S_wifi

/* Macros for properties that are special in the specification: */
#define DT_N_S_wifi_REG_NUM 0
#define DT_N_S_wifi_RANGES_NUM 0
#define DT_N_S_wifi_FOREACH_RANGE(fn) 
#define DT_N_S_wifi_IRQ_NUM 0
#define DT_N_S_wifi_IRQ_LEVEL 0
#define DT_N_S_wifi_COMPAT_MATCHES_espressif_esp32_wifi 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_wifi_COMPAT_MODEL_IDX_0 "esp32-wifi"
#define DT_N_S_wifi_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_wifi_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_wifi_P_compatible {"espressif,esp32-wifi"}
#define DT_N_S_wifi_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_compatible_IDX_0 "espressif,esp32-wifi"
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_wifi
#define DT_N_S_wifi_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WIFI
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, compatible, 0)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, compatible, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_compatible_LEN 1
#define DT_N_S_wifi_P_compatible_EXISTS 1
#define DT_N_S_wifi_P_status "disabled"
#define DT_N_S_wifi_P_status_STRING_UNQUOTED disabled
#define DT_N_S_wifi_P_status_STRING_TOKEN disabled
#define DT_N_S_wifi_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_wifi_P_status_IDX_0 "disabled"
#define DT_N_S_wifi_P_status_IDX_0_EXISTS 1
#define DT_N_S_wifi_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_wifi_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_wifi_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_wifi_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_wifi, status, 0)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_wifi, status, 0, __VA_ARGS__)
#define DT_N_S_wifi_P_status_LEN 1
#define DT_N_S_wifi_P_status_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 41
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 15
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_memory_3fc88000) fn(DT_N_S_soc_S_memory_3fcbd000) fn(DT_N_S_soc_S_memory_3fcbd400) fn(DT_N_S_soc_S_interrupt_controller_600c2000) fn(DT_N_S_soc_S_rtc_60021000) fn(DT_N_S_soc_S_xt_wdt_60021004) fn(DT_N_S_soc_S_rtc_timer_60008004) fn(DT_N_S_soc_S_flash_controller_60002000) fn(DT_N_S_soc_S_psram_3c000000) fn(DT_N_S_soc_S_ipm_3fcc1400) fn(DT_N_S_soc_S_mbox_3fcc1408) fn(DT_N_S_soc_S_uart_60000000) fn(DT_N_S_soc_S_uart_60010000) fn(DT_N_S_soc_S_uart_6002e000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_touch_6000885c) fn(DT_N_S_soc_S_i2c_60013000) fn(DT_N_S_soc_S_i2c_60027000) fn(DT_N_S_soc_S_i2s_6000f000) fn(DT_N_S_soc_S_i2s_6002d000) fn(DT_N_S_soc_S_spi_60024000) fn(DT_N_S_soc_S_spi_60025000) fn(DT_N_S_soc_S_coretemp_60008800) fn(DT_N_S_soc_S_adc_60040000) fn(DT_N_S_soc_S_adc_60040004) fn(DT_N_S_soc_S_can_6002b000) fn(DT_N_S_soc_S_lcd_cam_60041000) fn(DT_N_S_soc_S_uart_60038000) fn(DT_N_S_soc_S_counter_6001f000) fn(DT_N_S_soc_S_counter_6001f024) fn(DT_N_S_soc_S_counter_60020000) fn(DT_N_S_soc_S_counter_60020024) fn(DT_N_S_soc_S_watchdog_6001f048) fn(DT_N_S_soc_S_watchdog_60020048) fn(DT_N_S_soc_S_trng_6003507c) fn(DT_N_S_soc_S_ledc_60019000) fn(DT_N_S_soc_S_mcpwm_6001e000) fn(DT_N_S_soc_S_mcpwm_6002c000) fn(DT_N_S_soc_S_pcnt_60017000) fn(DT_N_S_soc_S_dma_6003f000) fn(DT_N_S_soc_S_sdhc_60028000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3fc88000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_600c2000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_60021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xt_wdt_60021004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_60008004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_psram_3c000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3fcc1400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3fcc1408) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_6002e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_6000885c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_60013000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_60027000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_6000f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_6002d000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60025000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_coretemp_60008800) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040004) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_6002b000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lcd_cam_60041000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60038000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_6001f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_6001f024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_60020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_60020024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_6001f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_60020048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_6003507c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_6001e000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_6002c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_60017000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_6003f000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) fn(DT_N_S_soc_S_xt_wdt_60021004, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_60008004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) fn(DT_N_S_soc_S_psram_3c000000, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3fcc1400, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3fcc1408, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60010000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_6002e000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_touch_6000885c, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_60013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_60027000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_6000f000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_6002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) fn(DT_N_S_soc_S_coretemp_60008800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040004, __VA_ARGS__) fn(DT_N_S_soc_S_can_6002b000, __VA_ARGS__) fn(DT_N_S_soc_S_lcd_cam_60041000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60038000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_6001f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_6001f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_60020000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_60020024, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_60020048, __VA_ARGS__) fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_6001e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_6002c000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_60017000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_6003f000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_xt_wdt_60021004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_timer_60008004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_psram_3c000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ipm_3fcc1400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mbox_3fcc1408, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_6002e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_touch_6000885c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_60013000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_60027000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_6000f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2s_6002d000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_coretemp_60008800, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040004, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_can_6002b000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lcd_cam_60041000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60038000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_6001f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_6001f024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_60020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_counter_60020024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_60020048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_6001e000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_mcpwm_6002c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pcnt_60017000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_6003f000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_memory_3fc88000) fn(DT_N_S_soc_S_memory_3fcbd000) fn(DT_N_S_soc_S_memory_3fcbd400) fn(DT_N_S_soc_S_interrupt_controller_600c2000) fn(DT_N_S_soc_S_rtc_60021000) fn(DT_N_S_soc_S_flash_controller_60002000) fn(DT_N_S_soc_S_uart_60000000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_spi_60024000) fn(DT_N_S_soc_S_spi_60025000) fn(DT_N_S_soc_S_adc_60040000) fn(DT_N_S_soc_S_watchdog_6001f048) fn(DT_N_S_soc_S_trng_6003507c) fn(DT_N_S_soc_S_ledc_60019000) fn(DT_N_S_soc_S_sdhc_60028000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3fc88000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd400) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_600c2000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_60021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60025000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_6001f048) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_6003507c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 5
#define DT_N_S_soc_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	6, /* /soc/gpio */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	26, /* /soc/ledc@60019000 */ \
	55, /* /soc/adc@60040004 */ \
	56, /* /soc/can@6002b000 */ \
	57, /* /soc/coretemp@60008800 */ \
	58, /* /soc/counter@6001f000 */ \
	59, /* /soc/counter@6001f024 */ \
	60, /* /soc/counter@60020000 */ \
	61, /* /soc/counter@60020024 */ \
	62, /* /soc/i2c@60013000 */ \
	63, /* /soc/i2c@60027000 */ \
	64, /* /soc/dma@6003f000 */ \
	65, /* /soc/i2s@6000f000 */ \
	66, /* /soc/i2s@6002d000 */ \
	67, /* /soc/memory@3fcbd000 */ \
	68, /* /soc/ipm@3fcc1400 */ \
	69, /* /soc/lcd_cam@60041000 */ \
	70, /* /soc/mbox@3fcc1408 */ \
	71, /* /soc/mcpwm@6001e000 */ \
	72, /* /soc/mcpwm@6002c000 */ \
	73, /* /soc/memory@3fc88000 */ \
	74, /* /soc/memory@3fcbd400 */ \
	75, /* /soc/pcnt@60017000 */ \
	76, /* /soc/psram@3c000000 */ \
	77, /* /soc/rtc_timer@60008004 */ \
	78, /* /soc/spi@60024000 */ \
	79, /* /soc/spi@60025000 */ \
	80, /* /soc/touch@6000885c */ \
	81, /* /soc/trng@6003507c */ \
	82, /* /soc/uart@60000000 */ \
	83, /* /soc/uart@60010000 */ \
	84, /* /soc/uart@6002e000 */ \
	85, /* /soc/uart@60038000 */ \
	86, /* /soc/watchdog@6001f048 */ \
	87, /* /soc/watchdog@60020048 */ \
	88, /* /soc/xt_wdt@60021004 */ \
	89, /* /soc/adc@60040000 */ \
	91, /* /soc/flash-controller@60002000 */ \
	106, /* /soc/sdhc@60028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_simple_bus DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 1
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/gpio
 *
 * Node identifier: DT_N_S_soc_S_gpio
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_PATH "/soc/gpio"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_FULL_NAME "gpio"
#define DT_N_S_soc_S_gpio_FULL_NAME_UNQUOTED gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_TOKEN gpio
#define DT_N_S_soc_S_gpio_FULL_NAME_UPPER_TOKEN GPIO

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL(fn) fn(gpio)
#define DT_N_S_soc_S_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_CHILD_NUM 2
#define DT_N_S_soc_S_gpio_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_gpio_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) fn(DT_N_S_soc_S_gpio_S_gpio_60004800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_60004800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) fn(DT_N_S_soc_S_gpio_S_gpio_60004800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_60004800)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_ORD 6
#define DT_N_S_soc_S_gpio_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_SUPPORTS_ORDS \
	8, /* /soc/gpio/gpio@60004000 */ \
	102, /* /soc/gpio/gpio@60004800 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_EXISTS 1
#define DT_N_INST_1_simple_bus DT_N_S_soc_S_gpio
#define DT_N_NODELABEL_gpio    DT_N_S_soc_S_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_REG_NUM 0
#define DT_N_S_soc_S_gpio_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_S_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_P_compatible {"simple-bus"}
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0 "simple-bus"
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_TOKEN simple_bus
#define DT_N_S_soc_S_gpio_P_compatible_IDX_0_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio, compatible, 0)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@600c2000
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_600c2000
 *
 * Binding (compatible = espressif,esp32-intc):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/espressif,esp32-intc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_PATH "/soc/interrupt-controller@600c2000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_FULL_NAME "interrupt-controller@600c2000"
#define DT_N_S_soc_S_interrupt_controller_600c2000_FULL_NAME_UNQUOTED interrupt-controller@600c2000
#define DT_N_S_soc_S_interrupt_controller_600c2000_FULL_NAME_TOKEN interrupt_controller_600c2000
#define DT_N_S_soc_S_interrupt_controller_600c2000_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_600C2000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_NODELABEL(fn) fn(intc)
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_NODELABEL_VARGS(fn, ...) fn(intc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_600c2000_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_ORD 7
#define DT_N_S_soc_S_interrupt_controller_600c2000_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_SUPPORTS_ORDS \
	8, /* /soc/gpio/gpio@60004000 */ \
	56, /* /soc/can@6002b000 */ \
	58, /* /soc/counter@6001f000 */ \
	59, /* /soc/counter@6001f024 */ \
	60, /* /soc/counter@60020000 */ \
	61, /* /soc/counter@60020024 */ \
	62, /* /soc/i2c@60013000 */ \
	63, /* /soc/i2c@60027000 */ \
	64, /* /soc/dma@6003f000 */ \
	65, /* /soc/i2s@6000f000 */ \
	66, /* /soc/i2s@6002d000 */ \
	68, /* /soc/ipm@3fcc1400 */ \
	69, /* /soc/lcd_cam@60041000 */ \
	70, /* /soc/mbox@3fcc1408 */ \
	71, /* /soc/mcpwm@6001e000 */ \
	72, /* /soc/mcpwm@6002c000 */ \
	75, /* /soc/pcnt@60017000 */ \
	77, /* /soc/rtc_timer@60008004 */ \
	78, /* /soc/spi@60024000 */ \
	79, /* /soc/spi@60025000 */ \
	80, /* /soc/touch@6000885c */ \
	82, /* /soc/uart@60000000 */ \
	83, /* /soc/uart@60010000 */ \
	84, /* /soc/uart@6002e000 */ \
	85, /* /soc/uart@60038000 */ \
	86, /* /soc/watchdog@6001f048 */ \
	87, /* /soc/watchdog@60020048 */ \
	88, /* /soc/xt_wdt@60021004 */ \
	102, /* /soc/gpio/gpio@60004800 */ \
	106, /* /soc/sdhc@60028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_intc DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_NODELABEL_intc              DT_N_S_soc_S_interrupt_controller_600c2000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_REG_IDX_0_VAL_ADDRESS 1611407360 /* 0x600c2000 */
#define DT_N_S_soc_S_interrupt_controller_600c2000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_interrupt_controller_600c2000_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_600c2000_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_COMPAT_MATCHES_espressif_esp32_intc 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_interrupt_controller_600c2000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_COMPAT_MODEL_IDX_0 "esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_600c2000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status "okay"
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_600c2000, status, 0)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_600c2000, status, 0)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_600c2000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_600c2000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_LEN 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_status_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible {"espressif,esp32-intc"}
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_IDX_0 "espressif,esp32-intc"
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-intc
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_intc
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_INTC
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_600c2000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_600c2000, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_600c2000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_600c2000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg {1611407360 /* 0x600c2000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg_IDX_0 1611407360
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_600c2000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@60004000
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_60004000
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_PATH "/soc/gpio/gpio@60004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FULL_NAME "gpio@60004000"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FULL_NAME_UNQUOTED gpio@60004000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FULL_NAME_TOKEN gpio_60004000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FULL_NAME_UPPER_TOKEN GPIO_60004000

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_NODELABEL(fn) fn(gpio0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_ORD 8
#define DT_N_S_soc_S_gpio_S_gpio_60004000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_REQUIRES_ORDS \
	6, /* /soc/gpio */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_SUPPORTS_ORDS \
	9, /* /buttons */ \
	10, /* /buttons/button_0 */ \
	17, /* /gpio14-output */ \
	18, /* /gpio14-output/driver_gpio */ \
	19, /* /gpio7_input */ \
	20, /* /gpio7_input/detecting_gpio */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_60004000
#define DT_N_NODELABEL_gpio0             DT_N_S_soc_S_gpio_S_gpio_60004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_REG_IDX_0_VAL_ADDRESS 1610629120 /* 0x60004000 */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_ngpios 32
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg {1610629120 /* 0x60004000 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg_IDX_0 1610629120
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_60004000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"
#define DT_N_S_buttons_FULL_NAME_UNQUOTED buttons
#define DT_N_S_buttons_FULL_NAME_TOKEN buttons
#define DT_N_S_buttons_FULL_NAME_UPPER_TOKEN BUTTONS

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 1
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 9
#define DT_N_S_buttons_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/gpio/gpio@60004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	10, /* /buttons/button_0 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1
#define DT_N_S_buttons_P_no_disconnect 0
#define DT_N_S_buttons_P_no_disconnect_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"
#define DT_N_S_buttons_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_0_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_CHILD_NUM 0
#define DT_N_S_buttons_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 10
#define DT_N_S_buttons_S_button_0_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	8, /* /soc/gpio/gpio@60004000 */ \
	9, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_60004000
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 0
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 17
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "BOOT Button"
#define DT_N_S_buttons_S_button_0_P_label_STRING_UNQUOTED BOOT Button
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN BOOT_Button
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN BOOT_BUTTON
#define DT_N_S_buttons_S_button_0_P_label_IDX_0 "BOOT Button"
#define DT_N_S_buttons_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_LEN 1
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 11
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 3
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 11
#define DT_N_S_cpus_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	12, /* /cpus/power-states */ \
	15, /* /cpus/cpu@0 */ \
	16, /* /cpus/cpu@1 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"
#define DT_N_S_cpus_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_cpus_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_cpus_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 2
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 12
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	11, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	13, /* /cpus/power-states/deep_sleep */ \
	14, /* /cpus/power-states/light_sleep */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/deep_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_deep_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PATH "/cpus/power-states/deep_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME "deep_sleep"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UNQUOTED deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_TOKEN deep_sleep
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FULL_NAME_UPPER_TOKEN DEEP_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL(fn) fn(deep_sleep)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(deep_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD 13
#define DT_N_S_cpus_S_power_states_S_deep_sleep_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REQUIRES_ORDS \
	12, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_SUPPORTS_ORDS \
	15, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_NODELABEL_deep_sleep      DT_N_S_cpus_S_power_states_S_deep_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UNQUOTED soft-off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_TOKEN soft_off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_STRING_UPPER_TOKEN SOFT_OFF
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0 "soft-off"
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_IDX 6
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_VAL_soft_off_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_TOKEN soft_off
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_IDX_0_ENUM_UPPER_TOKEN SOFT_OFF
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us 2000
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us 382
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_deep_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/light_sleep
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_light_sleep
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PATH "/cpus/power-states/light_sleep"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME "light_sleep"
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UNQUOTED light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_TOKEN light_sleep
#define DT_N_S_cpus_S_power_states_S_light_sleep_FULL_NAME_UPPER_TOKEN LIGHT_SLEEP

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL(fn) fn(light_sleep)
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_NODELABEL_VARGS(fn, ...) fn(light_sleep, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD 14
#define DT_N_S_cpus_S_power_states_S_light_sleep_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REQUIRES_ORDS \
	12, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_SUPPORTS_ORDS \
	15, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_NODELABEL_light_sleep     DT_N_S_cpus_S_power_states_S_light_sleep

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_light_sleep_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_STRING_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0 "standby"
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_IDX 3
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_IDX_0_ENUM_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us 200
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us 133
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_light_sleep_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = espressif,xtensa-lx7):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx7.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 15
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	11, /* /cpus */ \
	13, /* /cpus/power-states/deep_sleep */ \
	14, /* /cpus/power-states/light_sleep */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_espressif_xtensa_lx7 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0              DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_espressif_xtensa_lx7 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "xtensa-lx7"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"espressif,xtensa-lx7"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "espressif,xtensa-lx7"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx7
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx7
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX7
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_light_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_deep_sleep
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_xtal_freq_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@1
 *
 * Node identifier: DT_N_S_cpus_S_cpu_1
 *
 * Binding (compatible = espressif,xtensa-lx7):
 *   $ZEPHYR_BASE/dts/bindings/cpu/espressif,xtensa-lx7.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_1_PATH "/cpus/cpu@1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_1_FULL_NAME "cpu@1"
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UNQUOTED cpu@1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_TOKEN cpu_1
#define DT_N_S_cpus_S_cpu_1_FULL_NAME_UPPER_TOKEN CPU_1

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_1_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL(fn) fn(cpu1)
#define DT_N_S_cpus_S_cpu_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_1_ORD 16
#define DT_N_S_cpus_S_cpu_1_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_1_REQUIRES_ORDS \
	11, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_1_EXISTS 1
#define DT_N_INST_1_espressif_xtensa_lx7 DT_N_S_cpus_S_cpu_1
#define DT_N_NODELABEL_cpu1              DT_N_S_cpus_S_cpu_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_1_REG_NUM 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_cpus_S_cpu_1_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_1_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_1_COMPAT_MATCHES_espressif_xtensa_lx7 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_COMPAT_MODEL_IDX_0 "xtensa-lx7"
#define DT_N_S_cpus_S_cpu_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_1_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible {"espressif,xtensa-lx7"}
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0 "espressif,xtensa-lx7"
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,xtensa-lx7
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_TOKEN espressif_xtensa_lx7
#define DT_N_S_cpus_S_cpu_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_XTENSA_LX7
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_1, compatible, 0)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_1_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_1_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg {1 /* 0x1 */}
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_reg_IDX_0 1
#define DT_N_S_cpus_S_cpu_1_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency 240000000
#define DT_N_S_cpus_S_cpu_1_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_clock_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq 40000000
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_IDX 0
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_IDX_0_ENUM_VAL_40000000_EXISTS 1
#define DT_N_S_cpus_S_cpu_1_P_xtal_freq_EXISTS 1

/*
 * Devicetree node: /gpio14-output
 *
 * Node identifier: DT_N_S_gpio14_output
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio14_output_PATH "/gpio14-output"

/* Node's name with unit-address: */
#define DT_N_S_gpio14_output_FULL_NAME "gpio14-output"
#define DT_N_S_gpio14_output_FULL_NAME_UNQUOTED gpio14-output
#define DT_N_S_gpio14_output_FULL_NAME_TOKEN gpio14_output
#define DT_N_S_gpio14_output_FULL_NAME_UPPER_TOKEN GPIO14_OUTPUT

/* Node parent (/) identifier: */
#define DT_N_S_gpio14_output_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio14_output_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio14_output_NODELABEL_NUM 0
#define DT_N_S_gpio14_output_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio14_output_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio14_output_CHILD_NUM 1
#define DT_N_S_gpio14_output_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio14_output_FOREACH_CHILD(fn) fn(DT_N_S_gpio14_output_S_driver_gpio)
#define DT_N_S_gpio14_output_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio14_output_S_driver_gpio)
#define DT_N_S_gpio14_output_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__)
#define DT_N_S_gpio14_output_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__)
#define DT_N_S_gpio14_output_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio14_output_S_driver_gpio)
#define DT_N_S_gpio14_output_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio14_output_S_driver_gpio)
#define DT_N_S_gpio14_output_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__)
#define DT_N_S_gpio14_output_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio14_output_ORD 17
#define DT_N_S_gpio14_output_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio14_output_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/gpio/gpio@60004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio14_output_SUPPORTS_ORDS \
	18, /* /gpio14-output/driver_gpio */

/* Existence and alternate IDs: */
#define DT_N_S_gpio14_output_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_gpio14_output

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio14_output_REG_NUM 0
#define DT_N_S_gpio14_output_RANGES_NUM 0
#define DT_N_S_gpio14_output_FOREACH_RANGE(fn) 
#define DT_N_S_gpio14_output_IRQ_NUM 0
#define DT_N_S_gpio14_output_IRQ_LEVEL 0
#define DT_N_S_gpio14_output_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_gpio14_output_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio14_output_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio14_output_P_compatible {"gpio-leds"}
#define DT_N_S_gpio14_output_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio14_output_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_gpio14_output_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_gpio14_output_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_gpio14_output_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_gpio14_output_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio14_output, compatible, 0)
#define DT_N_S_gpio14_output_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio14_output, compatible, 0)
#define DT_N_S_gpio14_output_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio14_output, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio14_output_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio14_output, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio14_output_P_compatible_LEN 1
#define DT_N_S_gpio14_output_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio14-output/driver_gpio
 *
 * Node identifier: DT_N_S_gpio14_output_S_driver_gpio
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio14_output_S_driver_gpio_PATH "/gpio14-output/driver_gpio"

/* Node's name with unit-address: */
#define DT_N_S_gpio14_output_S_driver_gpio_FULL_NAME "driver_gpio"
#define DT_N_S_gpio14_output_S_driver_gpio_FULL_NAME_UNQUOTED driver_gpio
#define DT_N_S_gpio14_output_S_driver_gpio_FULL_NAME_TOKEN driver_gpio
#define DT_N_S_gpio14_output_S_driver_gpio_FULL_NAME_UPPER_TOKEN DRIVER_GPIO

/* Node parent (/gpio14-output) identifier: */
#define DT_N_S_gpio14_output_S_driver_gpio_PARENT DT_N_S_gpio14_output

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio14_output_S_driver_gpio_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio14_output_S_driver_gpio_NODELABEL_NUM 1
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_NODELABEL(fn) fn(driver_gpio_node)
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(driver_gpio_node, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio14_output_S_driver_gpio_CHILD_NUM 0
#define DT_N_S_gpio14_output_S_driver_gpio_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD(fn) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio14_output_S_driver_gpio_ORD 18
#define DT_N_S_gpio14_output_S_driver_gpio_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio14_output_S_driver_gpio_REQUIRES_ORDS \
	8, /* /soc/gpio/gpio@60004000 */ \
	17, /* /gpio14-output */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio14_output_S_driver_gpio_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio14_output_S_driver_gpio_EXISTS 1
#define DT_N_ALIAS_flash_gpio           DT_N_S_gpio14_output_S_driver_gpio
#define DT_N_NODELABEL_driver_gpio_node DT_N_S_gpio14_output_S_driver_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio14_output_S_driver_gpio_REG_NUM 0
#define DT_N_S_gpio14_output_S_driver_gpio_RANGES_NUM 0
#define DT_N_S_gpio14_output_S_driver_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_gpio14_output_S_driver_gpio_IRQ_NUM 0
#define DT_N_S_gpio14_output_S_driver_gpio_IRQ_LEVEL 0
#define DT_N_S_gpio14_output_S_driver_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio14_output_S_driver_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_60004000
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_VAL_pin 14
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio14_output_S_driver_gpio, gpios, 0)
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio14_output_S_driver_gpio, gpios, 0)
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio14_output_S_driver_gpio, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_LEN 1
#define DT_N_S_gpio14_output_S_driver_gpio_P_gpios_EXISTS 1

/*
 * Devicetree node: /gpio7_input
 *
 * Node identifier: DT_N_S_gpio7_input
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio7_input_PATH "/gpio7_input"

/* Node's name with unit-address: */
#define DT_N_S_gpio7_input_FULL_NAME "gpio7_input"
#define DT_N_S_gpio7_input_FULL_NAME_UNQUOTED gpio7_input
#define DT_N_S_gpio7_input_FULL_NAME_TOKEN gpio7_input
#define DT_N_S_gpio7_input_FULL_NAME_UPPER_TOKEN GPIO7_INPUT

/* Node parent (/) identifier: */
#define DT_N_S_gpio7_input_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio7_input_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio7_input_NODELABEL_NUM 0
#define DT_N_S_gpio7_input_FOREACH_NODELABEL(fn) 
#define DT_N_S_gpio7_input_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio7_input_CHILD_NUM 1
#define DT_N_S_gpio7_input_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_gpio7_input_FOREACH_CHILD(fn) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_N_S_gpio7_input_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_N_S_gpio7_input_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)
#define DT_N_S_gpio7_input_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)
#define DT_N_S_gpio7_input_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_N_S_gpio7_input_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_N_S_gpio7_input_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)
#define DT_N_S_gpio7_input_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_gpio7_input_ORD 19
#define DT_N_S_gpio7_input_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio7_input_REQUIRES_ORDS \
	0, /* / */ \
	8, /* /soc/gpio/gpio@60004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio7_input_SUPPORTS_ORDS \
	20, /* /gpio7_input/detecting_gpio */

/* Existence and alternate IDs: */
#define DT_N_S_gpio7_input_EXISTS 1
#define DT_N_INST_1_gpio_leds DT_N_S_gpio7_input

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio7_input_REG_NUM 0
#define DT_N_S_gpio7_input_RANGES_NUM 0
#define DT_N_S_gpio7_input_FOREACH_RANGE(fn) 
#define DT_N_S_gpio7_input_IRQ_NUM 0
#define DT_N_S_gpio7_input_IRQ_LEVEL 0
#define DT_N_S_gpio7_input_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_gpio7_input_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio7_input_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio7_input_P_compatible {"gpio-leds"}
#define DT_N_S_gpio7_input_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_gpio7_input_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_gpio7_input_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_gpio7_input_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_gpio7_input_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_gpio7_input_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio7_input, compatible, 0)
#define DT_N_S_gpio7_input_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio7_input, compatible, 0)
#define DT_N_S_gpio7_input_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio7_input, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio7_input_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio7_input, compatible, 0, __VA_ARGS__)
#define DT_N_S_gpio7_input_P_compatible_LEN 1
#define DT_N_S_gpio7_input_P_compatible_EXISTS 1

/*
 * Devicetree node: /gpio7_input/detecting_gpio
 *
 * Node identifier: DT_N_S_gpio7_input_S_detecting_gpio
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_gpio7_input_S_detecting_gpio_PATH "/gpio7_input/detecting_gpio"

/* Node's name with unit-address: */
#define DT_N_S_gpio7_input_S_detecting_gpio_FULL_NAME "detecting_gpio"
#define DT_N_S_gpio7_input_S_detecting_gpio_FULL_NAME_UNQUOTED detecting_gpio
#define DT_N_S_gpio7_input_S_detecting_gpio_FULL_NAME_TOKEN detecting_gpio
#define DT_N_S_gpio7_input_S_detecting_gpio_FULL_NAME_UPPER_TOKEN DETECTING_GPIO

/* Node parent (/gpio7_input) identifier: */
#define DT_N_S_gpio7_input_S_detecting_gpio_PARENT DT_N_S_gpio7_input

/* Node's index in its parent's list of children: */
#define DT_N_S_gpio7_input_S_detecting_gpio_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_gpio7_input_S_detecting_gpio_NODELABEL_NUM 1
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_NODELABEL(fn) fn(detecting_gpio_node)
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_NODELABEL_VARGS(fn, ...) fn(detecting_gpio_node, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_gpio7_input_S_detecting_gpio_CHILD_NUM 0
#define DT_N_S_gpio7_input_S_detecting_gpio_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD(fn) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_gpio7_input_S_detecting_gpio_ORD 20
#define DT_N_S_gpio7_input_S_detecting_gpio_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_gpio7_input_S_detecting_gpio_REQUIRES_ORDS \
	8, /* /soc/gpio/gpio@60004000 */ \
	19, /* /gpio7_input */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_gpio7_input_S_detecting_gpio_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_gpio7_input_S_detecting_gpio_EXISTS 1
#define DT_N_ALIAS_detect_gpio             DT_N_S_gpio7_input_S_detecting_gpio
#define DT_N_NODELABEL_detecting_gpio_node DT_N_S_gpio7_input_S_detecting_gpio

/* Macros for properties that are special in the specification: */
#define DT_N_S_gpio7_input_S_detecting_gpio_REG_NUM 0
#define DT_N_S_gpio7_input_S_detecting_gpio_RANGES_NUM 0
#define DT_N_S_gpio7_input_S_detecting_gpio_FOREACH_RANGE(fn) 
#define DT_N_S_gpio7_input_S_detecting_gpio_IRQ_NUM 0
#define DT_N_S_gpio7_input_S_detecting_gpio_IRQ_LEVEL 0
#define DT_N_S_gpio7_input_S_detecting_gpio_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_gpio7_input_S_detecting_gpio_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_S_gpio_60004000
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_gpio7_input_S_detecting_gpio, gpios, 0)
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_gpio7_input_S_detecting_gpio, gpios, 0)
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_gpio7_input_S_detecting_gpio, gpios, 0, __VA_ARGS__)
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_LEN 1
#define DT_N_S_gpio7_input_S_detecting_gpio_P_gpios_EXISTS 1

/*
 * Devicetree node: /pin-controller
 *
 * Node identifier: DT_N_S_pin_controller
 *
 * Binding (compatible = espressif,esp32-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/espressif,esp32-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_PATH "/pin-controller"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_FULL_NAME "pin-controller"
#define DT_N_S_pin_controller_FULL_NAME_UNQUOTED pin-controller
#define DT_N_S_pin_controller_FULL_NAME_TOKEN pin_controller
#define DT_N_S_pin_controller_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER

/* Node parent (/) identifier: */
#define DT_N_S_pin_controller_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_NODELABEL_NUM 1
#define DT_N_S_pin_controller_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_pin_controller_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_CHILD_NUM 11
#define DT_N_S_pin_controller_CHILD_NUM_STATUS_OKAY 11
#define DT_N_S_pin_controller_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_twai_default) fn(DT_N_S_pin_controller_S_led_0) fn(DT_N_S_pin_controller_S_led_1) fn(DT_N_S_pin_controller_S_led_2)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_twai_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_2)
#define DT_N_S_pin_controller_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_twai_default) fn(DT_N_S_pin_controller_S_led_0) fn(DT_N_S_pin_controller_S_led_1) fn(DT_N_S_pin_controller_S_led_2)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_twai_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_2)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__)
#define DT_N_S_pin_controller_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_ORD 21
#define DT_N_S_pin_controller_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_SUPPORTS_ORDS \
	22, /* /pin-controller/led-0 */ \
	23, /* /pin-controller/led-1 */ \
	24, /* /pin-controller/led-2 */ \
	31, /* /pin-controller/i2c0_default */ \
	33, /* /pin-controller/i2c1_default */ \
	35, /* /pin-controller/i2s0_default */ \
	38, /* /pin-controller/i2s1_default */ \
	44, /* /pin-controller/spim2_default */ \
	47, /* /pin-controller/spim3_default */ \
	50, /* /pin-controller/twai_default */ \
	52, /* /pin-controller/uart0_default */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pinctrl DT_N_S_pin_controller
#define DT_N_NODELABEL_pinctrl              DT_N_S_pin_controller

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_REG_NUM 0
#define DT_N_S_pin_controller_RANGES_NUM 0
#define DT_N_S_pin_controller_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_IRQ_NUM 0
#define DT_N_S_pin_controller_IRQ_LEVEL 0
#define DT_N_S_pin_controller_COMPAT_MATCHES_espressif_esp32_pinctrl 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_COMPAT_MODEL_IDX_0 "esp32-pinctrl"
#define DT_N_S_pin_controller_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_P_wakeup_source 0
#define DT_N_S_pin_controller_P_wakeup_source_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_pin_controller_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_pin_controller_P_status "okay"
#define DT_N_S_pin_controller_P_status_STRING_UNQUOTED okay
#define DT_N_S_pin_controller_P_status_STRING_TOKEN okay
#define DT_N_S_pin_controller_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_pin_controller_P_status_IDX_0 "okay"
#define DT_N_S_pin_controller_P_status_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_pin_controller_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, status, 0)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, status, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_status_LEN 1
#define DT_N_S_pin_controller_P_status_EXISTS 1
#define DT_N_S_pin_controller_P_compatible {"espressif,esp32-pinctrl"}
#define DT_N_S_pin_controller_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_P_compatible_IDX_0 "espressif,esp32-pinctrl"
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pinctrl
#define DT_N_S_pin_controller_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PINCTRL
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller, compatible, 0)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller, compatible, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_P_compatible_LEN 1
#define DT_N_S_pin_controller_P_compatible_EXISTS 1
#define DT_N_S_pin_controller_P_zephyr_deferred_init 0
#define DT_N_S_pin_controller_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /pin-controller/led-0
 *
 * Node identifier: DT_N_S_pin_controller_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_0_PATH "/pin-controller/led-0"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_0_FULL_NAME "led-0"
#define DT_N_S_pin_controller_S_led_0_FULL_NAME_UNQUOTED led-0
#define DT_N_S_pin_controller_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_pin_controller_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_led_0_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_0_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_0_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_led_0_FOREACH_NODELABEL(fn) fn(ledctrl_0)
#define DT_N_S_pin_controller_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledctrl_0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_0_CHILD_NUM 1
#define DT_N_S_pin_controller_S_led_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_led_0_S_group1)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_0_S_group1)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_led_0_S_group1)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_0_S_group1)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_0_ORD 22
#define DT_N_S_pin_controller_S_led_0_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_0_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_0_SUPPORTS_ORDS \
	26, /* /soc/ledc@60019000 */ \
	41, /* /pin-controller/led-0/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_0_EXISTS 1
#define DT_N_NODELABEL_ledctrl_0 DT_N_S_pin_controller_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_0_REG_NUM 0
#define DT_N_S_pin_controller_S_led_0_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_0_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_0_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_0_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/led-1
 *
 * Node identifier: DT_N_S_pin_controller_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_1_PATH "/pin-controller/led-1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_1_FULL_NAME "led-1"
#define DT_N_S_pin_controller_S_led_1_FULL_NAME_UNQUOTED led-1
#define DT_N_S_pin_controller_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_pin_controller_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_led_1_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_1_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_1_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_led_1_FOREACH_NODELABEL(fn) fn(ledctrl_1)
#define DT_N_S_pin_controller_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledctrl_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_1_CHILD_NUM 1
#define DT_N_S_pin_controller_S_led_1_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_led_1_S_group1)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_1_S_group1)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_led_1_S_group1)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_1_S_group1)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_1_ORD 23
#define DT_N_S_pin_controller_S_led_1_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_1_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_1_SUPPORTS_ORDS \
	26, /* /soc/ledc@60019000 */ \
	42, /* /pin-controller/led-1/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_1_EXISTS 1
#define DT_N_NODELABEL_ledctrl_1 DT_N_S_pin_controller_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_1_REG_NUM 0
#define DT_N_S_pin_controller_S_led_1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_1_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/led-2
 *
 * Node identifier: DT_N_S_pin_controller_S_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_2_PATH "/pin-controller/led-2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_2_FULL_NAME "led-2"
#define DT_N_S_pin_controller_S_led_2_FULL_NAME_UNQUOTED led-2
#define DT_N_S_pin_controller_S_led_2_FULL_NAME_TOKEN led_2
#define DT_N_S_pin_controller_S_led_2_FULL_NAME_UPPER_TOKEN LED_2

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_led_2_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_2_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_2_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_led_2_FOREACH_NODELABEL(fn) fn(ledctrl_2)
#define DT_N_S_pin_controller_S_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledctrl_2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_2_CHILD_NUM 1
#define DT_N_S_pin_controller_S_led_2_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_led_2_S_group1)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_2_S_group1)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_led_2_S_group1)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_2_S_group1)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_2_ORD 24
#define DT_N_S_pin_controller_S_led_2_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_2_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_2_SUPPORTS_ORDS \
	26, /* /soc/ledc@60019000 */ \
	43, /* /pin-controller/led-2/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_2_EXISTS 1
#define DT_N_NODELABEL_ledctrl_2 DT_N_S_pin_controller_S_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_2_REG_NUM 0
#define DT_N_S_pin_controller_S_led_2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_2_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/rtc@60021000
 *
 * Node identifier: DT_N_S_soc_S_rtc_60021000
 *
 * Binding (compatible = espressif,esp32-rtc):
 *   $ZEPHYR_BASE/dts/bindings/clock/espressif,esp32-rtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_60021000_PATH "/soc/rtc@60021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_60021000_FULL_NAME "rtc@60021000"
#define DT_N_S_soc_S_rtc_60021000_FULL_NAME_UNQUOTED rtc@60021000
#define DT_N_S_soc_S_rtc_60021000_FULL_NAME_TOKEN rtc_60021000
#define DT_N_S_soc_S_rtc_60021000_FULL_NAME_UPPER_TOKEN RTC_60021000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_60021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_60021000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_60021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_60021000_FOREACH_NODELABEL(fn) fn(rtc)
#define DT_N_S_soc_S_rtc_60021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_60021000_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_60021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_60021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_60021000_ORD 25
#define DT_N_S_soc_S_rtc_60021000_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_60021000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_60021000_SUPPORTS_ORDS \
	26, /* /soc/ledc@60019000 */ \
	56, /* /soc/can@6002b000 */ \
	62, /* /soc/i2c@60013000 */ \
	63, /* /soc/i2c@60027000 */ \
	64, /* /soc/dma@6003f000 */ \
	65, /* /soc/i2s@6000f000 */ \
	66, /* /soc/i2s@6002d000 */ \
	69, /* /soc/lcd_cam@60041000 */ \
	71, /* /soc/mcpwm@6001e000 */ \
	72, /* /soc/mcpwm@6002c000 */ \
	75, /* /soc/pcnt@60017000 */ \
	77, /* /soc/rtc_timer@60008004 */ \
	78, /* /soc/spi@60024000 */ \
	79, /* /soc/spi@60025000 */ \
	82, /* /soc/uart@60000000 */ \
	83, /* /soc/uart@60010000 */ \
	84, /* /soc/uart@6002e000 */ \
	85, /* /soc/uart@60038000 */ \
	86, /* /soc/watchdog@6001f048 */ \
	87, /* /soc/watchdog@60020048 */ \
	88, /* /soc/xt_wdt@60021004 */ \
	106, /* /soc/sdhc@60028000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_60021000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc DT_N_S_soc_S_rtc_60021000
#define DT_N_NODELABEL_rtc              DT_N_S_soc_S_rtc_60021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_60021000_REG_NUM 1
#define DT_N_S_soc_S_rtc_60021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_REG_IDX_0_VAL_ADDRESS 1610747904 /* 0x60021000 */
#define DT_N_S_soc_S_rtc_60021000_REG_IDX_0_VAL_SIZE 8192 /* 0x2000 */
#define DT_N_S_soc_S_rtc_60021000_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_60021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_60021000_IRQ_NUM 0
#define DT_N_S_soc_S_rtc_60021000_IRQ_LEVEL 0
#define DT_N_S_soc_S_rtc_60021000_COMPAT_MATCHES_espressif_esp32_rtc 1
#define DT_N_S_soc_S_rtc_60021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_rtc_60021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_COMPAT_MODEL_IDX_0 "esp32-rtc"
#define DT_N_S_soc_S_rtc_60021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_60021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_60021000_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_60021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_60021000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_status "okay"
#define DT_N_S_soc_S_rtc_60021000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_rtc_60021000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_rtc_60021000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_rtc_60021000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_rtc_60021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_60021000, status, 0)
#define DT_N_S_soc_S_rtc_60021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_60021000, status, 0)
#define DT_N_S_soc_S_rtc_60021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_60021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_60021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_60021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_60021000_P_status_LEN 1
#define DT_N_S_soc_S_rtc_60021000_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_compatible {"espressif,esp32-rtc"}
#define DT_N_S_soc_S_rtc_60021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_compatible_IDX_0 "espressif,esp32-rtc"
#define DT_N_S_soc_S_rtc_60021000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-rtc
#define DT_N_S_soc_S_rtc_60021000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_rtc
#define DT_N_S_soc_S_rtc_60021000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_RTC
#define DT_N_S_soc_S_rtc_60021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_60021000, compatible, 0)
#define DT_N_S_soc_S_rtc_60021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_60021000, compatible, 0)
#define DT_N_S_soc_S_rtc_60021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_60021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_60021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_60021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_60021000_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_60021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_reg {1610747904 /* 0x60021000 */, 8192 /* 0x2000 */}
#define DT_N_S_soc_S_rtc_60021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_reg_IDX_0 1610747904
#define DT_N_S_soc_S_rtc_60021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_reg_IDX_1 8192
#define DT_N_S_soc_S_rtc_60021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_60021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_fast_clk_src 1
#define DT_N_S_soc_S_rtc_60021000_P_fast_clk_src_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_rtc_60021000_P_fast_clk_src_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_fast_clk_src_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_fast_clk_src_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_slow_clk_src 0
#define DT_N_S_soc_S_rtc_60021000_P_slow_clk_src_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_rtc_60021000_P_slow_clk_src_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_slow_clk_src_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_rtc_60021000_P_slow_clk_src_EXISTS 1

/*
 * Devicetree node: /soc/ledc@60019000
 *
 * Node identifier: DT_N_S_soc_S_ledc_60019000
 *
 * Binding (compatible = espressif,esp32-ledc):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-ledc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_60019000_PATH "/soc/ledc@60019000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_60019000_FULL_NAME "ledc@60019000"
#define DT_N_S_soc_S_ledc_60019000_FULL_NAME_UNQUOTED ledc@60019000
#define DT_N_S_soc_S_ledc_60019000_FULL_NAME_TOKEN ledc_60019000
#define DT_N_S_soc_S_ledc_60019000_FULL_NAME_UPPER_TOKEN LEDC_60019000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ledc_60019000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_60019000_CHILD_IDX 35

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_60019000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ledc_60019000_FOREACH_NODELABEL(fn) fn(ledc0)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ledc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_60019000_CHILD_NUM 3
#define DT_N_S_soc_S_ledc_60019000_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_60019000_ORD 26
#define DT_N_S_soc_S_ledc_60019000_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_60019000_REQUIRES_ORDS \
	5, /* /soc */ \
	22, /* /pin-controller/led-0 */ \
	23, /* /pin-controller/led-1 */ \
	24, /* /pin-controller/led-2 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_60019000_SUPPORTS_ORDS \
	27, /* /my-pwm-leds */ \
	28, /* /my-pwm-leds/pwm_led_0 */ \
	29, /* /my-pwm-leds/pwm_led_1 */ \
	30, /* /my-pwm-leds/pwm_led_2 */ \
	103, /* /soc/ledc@60019000/channel0@0 */ \
	104, /* /soc/ledc@60019000/channel1@1 */ \
	105, /* /soc/ledc@60019000/channel2@2 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_60019000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ledc DT_N_S_soc_S_ledc_60019000
#define DT_N_NODELABEL_ledc0             DT_N_S_soc_S_ledc_60019000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_60019000_REG_NUM 1
#define DT_N_S_soc_S_ledc_60019000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_REG_IDX_0_VAL_ADDRESS 1610715136 /* 0x60019000 */
#define DT_N_S_soc_S_ledc_60019000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_ledc_60019000_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_60019000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_60019000_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_60019000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_60019000_COMPAT_MATCHES_espressif_esp32_ledc 1
#define DT_N_S_soc_S_ledc_60019000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ledc_60019000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_COMPAT_MODEL_IDX_0 "esp32-ledc"
#define DT_N_S_soc_S_ledc_60019000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NUM 1
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_led_0
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NAME_default_IDX_1_PH DT_N_S_pin_controller_S_led_1
#define DT_N_S_soc_S_ledc_60019000_PINCTRL_NAME_default_IDX_2_PH DT_N_S_pin_controller_S_led_2

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_led_0
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_led_0
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_1 DT_N_S_pin_controller_S_led_1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_1_PH DT_N_S_pin_controller_S_led_1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_2 DT_N_S_pin_controller_S_led_2
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_2_PH DT_N_S_pin_controller_S_led_2
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 0) \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 1) \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 2)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 2)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_ledc_60019000, pinctrl_0, 2, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_LEN 3
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_names, 0)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_names, 0)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_ledc_60019000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_wakeup_source 0
#define DT_N_S_soc_S_ledc_60019000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ledc_60019000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_status "okay"
#define DT_N_S_soc_S_ledc_60019000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_ledc_60019000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_ledc_60019000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_ledc_60019000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_ledc_60019000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_60019000, status, 0)
#define DT_N_S_soc_S_ledc_60019000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000, status, 0)
#define DT_N_S_soc_S_ledc_60019000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_status_LEN 1
#define DT_N_S_soc_S_ledc_60019000_P_status_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_compatible {"espressif,esp32-ledc"}
#define DT_N_S_soc_S_ledc_60019000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_compatible_IDX_0 "espressif,esp32-ledc"
#define DT_N_S_soc_S_ledc_60019000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ledc
#define DT_N_S_soc_S_ledc_60019000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ledc
#define DT_N_S_soc_S_ledc_60019000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_LEDC
#define DT_N_S_soc_S_ledc_60019000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_60019000, compatible, 0)
#define DT_N_S_soc_S_ledc_60019000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000, compatible, 0)
#define DT_N_S_soc_S_ledc_60019000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_compatible_LEN 1
#define DT_N_S_soc_S_ledc_60019000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_reg {1610715136 /* 0x60019000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_ledc_60019000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_reg_IDX_0 1610715136
#define DT_N_S_soc_S_ledc_60019000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_ledc_60019000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_ledc_60019000_P_clocks_IDX_0_VAL_offset 0
#define DT_N_S_soc_S_ledc_60019000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ledc_60019000, clocks, 0)
#define DT_N_S_soc_S_ledc_60019000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ledc_60019000, clocks, 0)
#define DT_N_S_soc_S_ledc_60019000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ledc_60019000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ledc_60019000_P_clocks_LEN 1
#define DT_N_S_soc_S_ledc_60019000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ledc_60019000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /my-pwm-leds
 *
 * Node identifier: DT_N_S_my_pwm_leds
 *
 * Binding (compatible = pwm-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/pwm-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_my_pwm_leds_PATH "/my-pwm-leds"

/* Node's name with unit-address: */
#define DT_N_S_my_pwm_leds_FULL_NAME "my-pwm-leds"
#define DT_N_S_my_pwm_leds_FULL_NAME_UNQUOTED my-pwm-leds
#define DT_N_S_my_pwm_leds_FULL_NAME_TOKEN my_pwm_leds
#define DT_N_S_my_pwm_leds_FULL_NAME_UPPER_TOKEN MY_PWM_LEDS

/* Node parent (/) identifier: */
#define DT_N_S_my_pwm_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_my_pwm_leds_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_my_pwm_leds_NODELABEL_NUM 0
#define DT_N_S_my_pwm_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_my_pwm_leds_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_my_pwm_leds_CHILD_NUM 3
#define DT_N_S_my_pwm_leds_CHILD_NUM_STATUS_OKAY 3
#define DT_N_S_my_pwm_leds_FOREACH_CHILD(fn) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) fn(DT_N_S_my_pwm_leds_S_pwm_led_1) fn(DT_N_S_my_pwm_leds_S_pwm_led_2)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_2)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) fn(DT_N_S_my_pwm_leds_S_pwm_led_1) fn(DT_N_S_my_pwm_leds_S_pwm_led_2)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_2)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_my_pwm_leds_ORD 27
#define DT_N_S_my_pwm_leds_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_my_pwm_leds_REQUIRES_ORDS \
	0, /* / */ \
	26, /* /soc/ledc@60019000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_my_pwm_leds_SUPPORTS_ORDS \
	28, /* /my-pwm-leds/pwm_led_0 */ \
	29, /* /my-pwm-leds/pwm_led_1 */ \
	30, /* /my-pwm-leds/pwm_led_2 */

/* Existence and alternate IDs: */
#define DT_N_S_my_pwm_leds_EXISTS 1
#define DT_N_INST_0_pwm_leds DT_N_S_my_pwm_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_my_pwm_leds_REG_NUM 0
#define DT_N_S_my_pwm_leds_RANGES_NUM 0
#define DT_N_S_my_pwm_leds_FOREACH_RANGE(fn) 
#define DT_N_S_my_pwm_leds_IRQ_NUM 0
#define DT_N_S_my_pwm_leds_IRQ_LEVEL 0
#define DT_N_S_my_pwm_leds_COMPAT_MATCHES_pwm_leds 1
#define DT_N_S_my_pwm_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_my_pwm_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_my_pwm_leds_P_compatible {"pwm-leds"}
#define DT_N_S_my_pwm_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_my_pwm_leds_P_compatible_IDX_0 "pwm-leds"
#define DT_N_S_my_pwm_leds_P_compatible_IDX_0_STRING_UNQUOTED pwm-leds
#define DT_N_S_my_pwm_leds_P_compatible_IDX_0_STRING_TOKEN pwm_leds
#define DT_N_S_my_pwm_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN PWM_LEDS
#define DT_N_S_my_pwm_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_my_pwm_leds, compatible, 0)
#define DT_N_S_my_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_my_pwm_leds, compatible, 0)
#define DT_N_S_my_pwm_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_P_compatible_LEN 1
#define DT_N_S_my_pwm_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /my-pwm-leds/pwm_led_0
 *
 * Node identifier: DT_N_S_my_pwm_leds_S_pwm_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_PATH "/my-pwm-leds/pwm_led_0"

/* Node's name with unit-address: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FULL_NAME "pwm_led_0"
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FULL_NAME_UNQUOTED pwm_led_0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FULL_NAME_TOKEN pwm_led_0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FULL_NAME_UPPER_TOKEN PWM_LED_0

/* Node parent (/my-pwm-leds) identifier: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_PARENT DT_N_S_my_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_NODELABEL_NUM 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_NODELABEL(fn) fn(led_0)
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(led_0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_CHILD_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_ORD 28
#define DT_N_S_my_pwm_leds_S_pwm_led_0_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */ \
	27, /* /my-pwm-leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_EXISTS 1
#define DT_N_ALIAS_led_0     DT_N_S_my_pwm_leds_S_pwm_led_0
#define DT_N_NODELABEL_led_0 DT_N_S_my_pwm_leds_S_pwm_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_REG_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_RANGES_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_0_IRQ_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_IRQ_LEVEL 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_PH DT_N_S_soc_S_ledc_60019000
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_period 1000
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_LEN 1
#define DT_N_S_my_pwm_leds_S_pwm_led_0_P_pwms_EXISTS 1

/*
 * Devicetree node: /my-pwm-leds/pwm_led_1
 *
 * Node identifier: DT_N_S_my_pwm_leds_S_pwm_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_PATH "/my-pwm-leds/pwm_led_1"

/* Node's name with unit-address: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FULL_NAME "pwm_led_1"
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FULL_NAME_UNQUOTED pwm_led_1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FULL_NAME_TOKEN pwm_led_1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FULL_NAME_UPPER_TOKEN PWM_LED_1

/* Node parent (/my-pwm-leds) identifier: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_PARENT DT_N_S_my_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_NODELABEL_NUM 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_NODELABEL(fn) fn(led_1)
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(led_1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_CHILD_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_ORD 29
#define DT_N_S_my_pwm_leds_S_pwm_led_1_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */ \
	27, /* /my-pwm-leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_EXISTS 1
#define DT_N_ALIAS_led_1     DT_N_S_my_pwm_leds_S_pwm_led_1
#define DT_N_NODELABEL_led_1 DT_N_S_my_pwm_leds_S_pwm_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_REG_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_RANGES_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_1_IRQ_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_IRQ_LEVEL 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_PH DT_N_S_soc_S_ledc_60019000
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_channel 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_period 1000
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_LEN 1
#define DT_N_S_my_pwm_leds_S_pwm_led_1_P_pwms_EXISTS 1

/*
 * Devicetree node: /my-pwm-leds/pwm_led_2
 *
 * Node identifier: DT_N_S_my_pwm_leds_S_pwm_led_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_PATH "/my-pwm-leds/pwm_led_2"

/* Node's name with unit-address: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FULL_NAME "pwm_led_2"
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FULL_NAME_UNQUOTED pwm_led_2
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FULL_NAME_TOKEN pwm_led_2
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FULL_NAME_UPPER_TOKEN PWM_LED_2

/* Node parent (/my-pwm-leds) identifier: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_PARENT DT_N_S_my_pwm_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_NODELABEL_NUM 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_NODELABEL(fn) fn(led_2)
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_NODELABEL_VARGS(fn, ...) fn(led_2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_CHILD_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_ORD 30
#define DT_N_S_my_pwm_leds_S_pwm_led_2_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */ \
	27, /* /my-pwm-leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_EXISTS 1
#define DT_N_ALIAS_led_2     DT_N_S_my_pwm_leds_S_pwm_led_2
#define DT_N_NODELABEL_led_2 DT_N_S_my_pwm_leds_S_pwm_led_2

/* Macros for properties that are special in the specification: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_REG_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_RANGES_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_FOREACH_RANGE(fn) 
#define DT_N_S_my_pwm_leds_S_pwm_led_2_IRQ_NUM 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_IRQ_LEVEL 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_PH DT_N_S_soc_S_ledc_60019000
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_channel 2
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_period 1000
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_period_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_flags 0
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM(fn) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, pwms, 0)
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, pwms, 0, __VA_ARGS__)
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_LEN 1
#define DT_N_S_my_pwm_leds_S_pwm_led_2_P_pwms_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_PATH "/pin-controller/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME "i2c0_default"
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UNQUOTED i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_TOKEN i2c0_default
#define DT_N_S_pin_controller_S_i2c0_default_FULL_NAME_UPPER_TOKEN I2C0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL(fn) fn(i2c0_default)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_ORD 31
#define DT_N_S_pin_controller_S_i2c0_default_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_SUPPORTS_ORDS \
	32, /* /pin-controller/i2c0_default/group1 */ \
	62, /* /soc/i2c@60013000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_pin_controller_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PATH "/pin-controller/i2c0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c0_default) identifier: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD 32
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REQUIRES_ORDS \
	31, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux {2954881 /* 0x2d1681 */, 2922050 /* 0x2c9642 */}
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_0 2954881
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_IDX_1 2922050
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c0_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2c1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_PATH "/pin-controller/i2c1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME "i2c1_default"
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UNQUOTED i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_TOKEN i2c1_default
#define DT_N_S_pin_controller_S_i2c1_default_FULL_NAME_UPPER_TOKEN I2C1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL(fn) fn(i2c1_default)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_i2c1_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_ORD 33
#define DT_N_S_pin_controller_S_i2c1_default_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_SUPPORTS_ORDS \
	34, /* /pin-controller/i2c1_default/group1 */ \
	63, /* /soc/i2c@60027000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_EXISTS 1
#define DT_N_NODELABEL_i2c1_default DT_N_S_pin_controller_S_i2c1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2c1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2c1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PATH "/pin-controller/i2c1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2c1_default) identifier: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PARENT DT_N_S_pin_controller_S_i2c1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD 34
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REQUIRES_ORDS \
	33, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_open_drain 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux {3020548 /* 0x2e1704 */, 2987717 /* 0x2d96c5 */}
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_0 3020548
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_IDX_1 2987717
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_i2c1_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s0_default_PATH "/pin-controller/i2s0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME "i2s0_default"
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_UNQUOTED i2s0_default
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_TOKEN i2s0_default
#define DT_N_S_pin_controller_S_i2s0_default_FULL_NAME_UPPER_TOKEN I2S0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2s0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_NODELABEL(fn) fn(i2s0_default)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s0_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_i2s0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default_S_group2)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default_S_group2)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s0_default_ORD 35
#define DT_N_S_pin_controller_S_i2s0_default_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s0_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s0_default_SUPPORTS_ORDS \
	36, /* /pin-controller/i2s0_default/group1 */ \
	37, /* /pin-controller/i2s0_default/group2 */ \
	65, /* /soc/i2s@6000f000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s0_default_EXISTS 1
#define DT_N_NODELABEL_i2s0_default DT_N_S_pin_controller_S_i2s0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2s0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PATH "/pin-controller/i2s0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2s0_default) identifier: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PARENT DT_N_S_pin_controller_S_i2s0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_ORD 36
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_REQUIRES_ORDS \
	35, /* /pin-controller/i2s0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_enable 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux {786372 /* 0xbffc4 */, 787973 /* 0xc0605 */, 722310 /* 0xb0586 */, 851911 /* 0xcffc7 */, 886479 /* 0xd86cf */, 853648 /* 0xd0690 */}
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_0 786372
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_1 787973
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_2 722310
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_3 851911
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_4 886479
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_IDX_5 853648
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 4) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 5)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 5)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_LEN 6
#define DT_N_S_pin_controller_S_i2s0_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_PATH "/pin-controller/i2s0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/i2s0_default) identifier: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_PARENT DT_N_S_pin_controller_S_i2s0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_ORD 37
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_REQUIRES_ORDS \
	35, /* /pin-controller/i2s0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux {16746065 /* 0xff8651 */}
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_IDX_0 16746065
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_i2s0_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s1_default
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s1_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s1_default_PATH "/pin-controller/i2s1_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME "i2s1_default"
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_UNQUOTED i2s1_default
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_TOKEN i2s1_default
#define DT_N_S_pin_controller_S_i2s1_default_FULL_NAME_UPPER_TOKEN I2S1_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_i2s1_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s1_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_NODELABEL(fn) fn(i2s1_default)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s1_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_i2s1_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default_S_group2)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default_S_group2)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s1_default_ORD 38
#define DT_N_S_pin_controller_S_i2s1_default_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s1_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s1_default_SUPPORTS_ORDS \
	39, /* /pin-controller/i2s1_default/group1 */ \
	40, /* /pin-controller/i2s1_default/group2 */ \
	66, /* /soc/i2s@6002d000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s1_default_EXISTS 1
#define DT_N_NODELABEL_i2s1_default DT_N_S_pin_controller_S_i2s1_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s1_default_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s1_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s1_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/i2s1_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s1_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PATH "/pin-controller/i2s1_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/i2s1_default) identifier: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PARENT DT_N_S_pin_controller_S_i2s1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_ORD 39
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_REQUIRES_ORDS \
	38, /* /pin-controller/i2s1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_enable 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux {720850 /* 0xaffd2 */, 952136 /* 0xe8748 */, 919299 /* 0xe0703 */, 1015753 /* 0xf7fc9 */, 1050634 /* 0x10080a */, 1017803 /* 0xf87cb */}
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_0 720850
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_1 952136
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_2 919299
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_3_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_3 1015753
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_4_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_4 1050634
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_5_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_IDX_5 1017803
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 4) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 5)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 4) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 5)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 4, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 3, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 4, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, pinmux, 5, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_LEN 6
#define DT_N_S_pin_controller_S_i2s1_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/i2s1_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_i2s1_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_PATH "/pin-controller/i2s1_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/i2s1_default) identifier: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_PARENT DT_N_S_pin_controller_S_i2s1_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_ORD 40
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_REQUIRES_ORDS \
	38, /* /pin-controller/i2s1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_input_enable 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux {16746380 /* 0xff878c */}
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_IDX_0 16746380
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_i2s1_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/led-0/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_led_0_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_0_S_group1_PATH "/pin-controller/led-0/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_0_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_led_0_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_led_0_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_led_0_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/led-0) identifier: */
#define DT_N_S_pin_controller_S_led_0_S_group1_PARENT DT_N_S_pin_controller_S_led_0

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_0_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_0_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_0_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_led_0_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_0_S_group1_ORD 41
#define DT_N_S_pin_controller_S_led_0_S_group1_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_0_S_group1_REQUIRES_ORDS \
	22, /* /pin-controller/led-0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_0_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_0_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_0_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_led_0_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_0_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_0_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_0_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_0_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_0_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_enable 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_led_0_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux {2424781 /* 0x24ffcd */}
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_IDX_0 2424781
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_led_0_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_0_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_0_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_led_0_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/led-1/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_led_1_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_1_S_group1_PATH "/pin-controller/led-1/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_1_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_led_1_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_led_1_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_led_1_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/led-1) identifier: */
#define DT_N_S_pin_controller_S_led_1_S_group1_PARENT DT_N_S_pin_controller_S_led_1

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_1_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_1_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_1_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_led_1_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_1_S_group1_ORD 42
#define DT_N_S_pin_controller_S_led_1_S_group1_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_1_S_group1_REQUIRES_ORDS \
	23, /* /pin-controller/led-1 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_1_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_1_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_1_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_led_1_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_1_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_1_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_1_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_1_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_1_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_enable 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_led_1_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux {2457541 /* 0x257fc5 */}
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_IDX_0 2457541
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_led_1_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_1_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_1_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_led_1_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/led-2/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_led_2_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_led_2_S_group1_PATH "/pin-controller/led-2/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_led_2_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_led_2_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_led_2_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_led_2_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/led-2) identifier: */
#define DT_N_S_pin_controller_S_led_2_S_group1_PARENT DT_N_S_pin_controller_S_led_2

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_led_2_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_led_2_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_led_2_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_led_2_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_led_2_S_group1_ORD 43
#define DT_N_S_pin_controller_S_led_2_S_group1_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_led_2_S_group1_REQUIRES_ORDS \
	24, /* /pin-controller/led-2 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_led_2_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_led_2_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_led_2_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_led_2_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_led_2_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_led_2_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_led_2_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_led_2_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_led_2_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_enable 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_led_2_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux {2490310 /* 0x25ffc6 */}
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_IDX_0 2490310
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_led_2_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_led_2_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_led_2_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_led_2_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim2_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_PATH "/pin-controller/spim2_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME "spim2_default"
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_UNQUOTED spim2_default
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_TOKEN spim2_default
#define DT_N_S_pin_controller_S_spim2_default_FULL_NAME_UPPER_TOKEN SPIM2_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_NODELABEL(fn) fn(spim2_default)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spim2_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spim2_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_ORD 44
#define DT_N_S_pin_controller_S_spim2_default_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_SUPPORTS_ORDS \
	45, /* /pin-controller/spim2_default/group1 */ \
	46, /* /pin-controller/spim2_default/group2 */ \
	78, /* /soc/spi@60024000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_EXISTS 1
#define DT_N_NODELABEL_spim2_default DT_N_S_pin_controller_S_spim2_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spim2_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PATH "/pin-controller/spim2_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spim2_default) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PARENT DT_N_S_pin_controller_S_spim2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_ORD 45
#define DT_N_S_pin_controller_S_spim2_default_S_group1_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_REQUIRES_ORDS \
	44, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux {16750989 /* 0xff998d */, 3342284 /* 0x32ffcc */, 3637194 /* 0x377fca */}
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_0 16750989
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_1 3342284
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_IDX_2 3637194
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim2_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spim2_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim2_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spim2_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PATH "/pin-controller/spim2_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spim2_default) identifier: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PARENT DT_N_S_pin_controller_S_spim2_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_ORD 46
#define DT_N_S_pin_controller_S_spim2_default_S_group2_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_REQUIRES_ORDS \
	44, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim2_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_low 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux {3407819 /* 0x33ffcb */}
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_IDX_0 3407819
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spim2_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_PATH "/pin-controller/spim3_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME "spim3_default"
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UNQUOTED spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_TOKEN spim3_default
#define DT_N_S_pin_controller_S_spim3_default_FULL_NAME_UPPER_TOKEN SPIM3_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL(fn) fn(spim3_default)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(spim3_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_spim3_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_ORD 47
#define DT_N_S_pin_controller_S_spim3_default_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_SUPPORTS_ORDS \
	48, /* /pin-controller/spim3_default/group1 */ \
	49, /* /pin-controller/spim3_default/group2 */ \
	79, /* /soc/spi@60025000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_EXISTS 1
#define DT_N_NODELABEL_spim3_default DT_N_S_pin_controller_S_spim3_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/spim3_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PATH "/pin-controller/spim3_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD 48
#define DT_N_S_pin_controller_S_spim3_default_S_group1_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REQUIRES_ORDS \
	47, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux {16748773 /* 0xff90e5 */, 2195428 /* 0x217fe4 */, 2359270 /* 0x23ffe6 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_0 16748773
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_1 2195428
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_2_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_IDX_2 2359270
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_spim3_default_S_group1, pinmux, 2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_LEN 3
#define DT_N_S_pin_controller_S_spim3_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/spim3_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_spim3_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PATH "/pin-controller/spim3_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/spim3_default) identifier: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PARENT DT_N_S_pin_controller_S_spim3_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD 49
#define DT_N_S_pin_controller_S_spim3_default_S_group2_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REQUIRES_ORDS \
	47, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux {2260967 /* 0x227fe7 */}
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_IDX_0 2260967
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_spim3_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/twai_default
 *
 * Node identifier: DT_N_S_pin_controller_S_twai_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_twai_default_PATH "/pin-controller/twai_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_twai_default_FULL_NAME "twai_default"
#define DT_N_S_pin_controller_S_twai_default_FULL_NAME_UNQUOTED twai_default
#define DT_N_S_pin_controller_S_twai_default_FULL_NAME_TOKEN twai_default
#define DT_N_S_pin_controller_S_twai_default_FULL_NAME_UPPER_TOKEN TWAI_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_twai_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_twai_default_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_twai_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_twai_default_FOREACH_NODELABEL(fn) fn(twai_default)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(twai_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_twai_default_CHILD_NUM 1
#define DT_N_S_pin_controller_S_twai_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_twai_default_S_group1)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_twai_default_S_group1)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_twai_default_S_group1)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_twai_default_S_group1)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_twai_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_twai_default_ORD 50
#define DT_N_S_pin_controller_S_twai_default_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_twai_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_twai_default_SUPPORTS_ORDS \
	51, /* /pin-controller/twai_default/group1 */ \
	56, /* /soc/can@6002b000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_twai_default_EXISTS 1
#define DT_N_NODELABEL_twai_default DT_N_S_pin_controller_S_twai_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_twai_default_REG_NUM 0
#define DT_N_S_pin_controller_S_twai_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_twai_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_twai_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_twai_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_twai_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_twai_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/twai_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_twai_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_PATH "/pin-controller/twai_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_twai_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_twai_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_twai_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/twai_default) identifier: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_PARENT DT_N_S_pin_controller_S_twai_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_twai_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_ORD 51
#define DT_N_S_pin_controller_S_twai_default_S_group1_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_REQUIRES_ORDS \
	50, /* /pin-controller/twai_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_twai_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_high 0
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux {3833797 /* 0x3a7fc5 */, 16751878 /* 0xff9d06 */}
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_IDX_0 3833797
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_IDX_1_EXISTS 1
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_IDX_1 16751878
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 0) \
	fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 1)
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 0, __VA_ARGS__) \
	fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_pin_controller_S_twai_default_S_group1, pinmux, 1, __VA_ARGS__)
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_LEN 2
#define DT_N_S_pin_controller_S_twai_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_PATH "/pin-controller/uart0_default"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME "uart0_default"
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UNQUOTED uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_TOKEN uart0_default
#define DT_N_S_pin_controller_S_uart0_default_FULL_NAME_UPPER_TOKEN UART0_DEFAULT

/* Node parent (/pin-controller) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_PARENT DT_N_S_pin_controller

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_NODELABEL_NUM 1
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL(fn) fn(uart0_default)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0_default, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM 2
#define DT_N_S_pin_controller_S_uart0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_ORD 52
#define DT_N_S_pin_controller_S_uart0_default_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_REQUIRES_ORDS \
	21, /* /pin-controller */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_SUPPORTS_ORDS \
	53, /* /pin-controller/uart0_default/group1 */ \
	54, /* /pin-controller/uart0_default/group2 */ \
	82, /* /soc/uart@60000000 */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_EXISTS 1
#define DT_N_NODELABEL_uart0_default DT_N_S_pin_controller_S_uart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /pin-controller/uart0_default/group1
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PATH "/pin-controller/uart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD 53
#define DT_N_S_pin_controller_S_uart0_default_S_group1_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REQUIRES_ORDS \
	52, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_low 0
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_high 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux {425963 /* 0x67feb */}
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_IDX_0 425963
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group1_P_pinmux_EXISTS 1

/*
 * Devicetree node: /pin-controller/uart0_default/group2
 *
 * Node identifier: DT_N_S_pin_controller_S_uart0_default_S_group2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PATH "/pin-controller/uart0_default/group2"

/* Node's name with unit-address: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME "group2"
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UNQUOTED group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_TOKEN group2
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FULL_NAME_UPPER_TOKEN GROUP2

/* Node parent (/pin-controller/uart0_default) identifier: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PARENT DT_N_S_pin_controller_S_uart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_NODELABEL_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD 54
#define DT_N_S_pin_controller_S_uart0_default_S_group2_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REQUIRES_ORDS \
	52, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_REG_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_RANGES_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_FOREACH_RANGE(fn) 
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_NUM 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_IRQ_LEVEL 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_disable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_up_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_bias_pull_down_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_push_pull_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_drive_open_drain_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_input_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_enable 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_enable_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_low 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_low_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_high 0
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_output_high_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux {16745260 /* 0xff832c */}
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0_EXISTS 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_IDX_0 16745260
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM(fn) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, pinmux, 0, __VA_ARGS__)
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_LEN 1
#define DT_N_S_pin_controller_S_uart0_default_S_group2_P_pinmux_EXISTS 1

/*
 * Devicetree node: /soc/adc@60040004
 *
 * Node identifier: DT_N_S_soc_S_adc_60040004
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_60040004_PATH "/soc/adc@60040004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_60040004_FULL_NAME "adc@60040004"
#define DT_N_S_soc_S_adc_60040004_FULL_NAME_UNQUOTED adc@60040004
#define DT_N_S_soc_S_adc_60040004_FULL_NAME_TOKEN adc_60040004
#define DT_N_S_soc_S_adc_60040004_FULL_NAME_UPPER_TOKEN ADC_60040004

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_60040004_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_60040004_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_60040004_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_60040004_FOREACH_NODELABEL(fn) fn(adc1)
#define DT_N_S_soc_S_adc_60040004_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_60040004_CHILD_NUM 0
#define DT_N_S_soc_S_adc_60040004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_60040004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_60040004_ORD 55
#define DT_N_S_soc_S_adc_60040004_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_60040004_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_60040004_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_60040004_EXISTS 1
#define DT_N_INST_1_espressif_esp32_adc DT_N_S_soc_S_adc_60040004
#define DT_N_NODELABEL_adc1             DT_N_S_soc_S_adc_60040004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_60040004_REG_NUM 1
#define DT_N_S_soc_S_adc_60040004_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_REG_IDX_0_VAL_ADDRESS 1610874884 /* 0x60040004 */
#define DT_N_S_soc_S_adc_60040004_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_adc_60040004_RANGES_NUM 0
#define DT_N_S_soc_S_adc_60040004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_60040004_IRQ_NUM 0
#define DT_N_S_soc_S_adc_60040004_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_60040004_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_60040004_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_60040004_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_60040004_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_60040004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_60040004_P_wakeup_source 0
#define DT_N_S_soc_S_adc_60040004_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_60040004_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_status "disabled"
#define DT_N_S_soc_S_adc_60040004_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_60040004_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_60040004_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_adc_60040004_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_60040004_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040004, status, 0)
#define DT_N_S_soc_S_adc_60040004_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040004, status, 0)
#define DT_N_S_soc_S_adc_60040004_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040004_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040004_P_status_LEN 1
#define DT_N_S_soc_S_adc_60040004_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_60040004_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_60040004_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_60040004_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_60040004_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_60040004_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040004, compatible, 0)
#define DT_N_S_soc_S_adc_60040004_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040004, compatible, 0)
#define DT_N_S_soc_S_adc_60040004_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040004_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040004_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_60040004_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_reg {1610874884 /* 0x60040004 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_adc_60040004_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_reg_IDX_0 1610874884
#define DT_N_S_soc_S_adc_60040004_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_reg_IDX_1 4
#define DT_N_S_soc_S_adc_60040004_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_60040004_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_unit 2
#define DT_N_S_soc_S_adc_60040004_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_60040004_P_channel_count 10
#define DT_N_S_soc_S_adc_60040004_P_channel_count_EXISTS 1

/*
 * Devicetree node: /soc/can@6002b000
 *
 * Node identifier: DT_N_S_soc_S_can_6002b000
 *
 * Binding (compatible = espressif,esp32-twai):
 *   $ZEPHYR_BASE/dts/bindings/can/espressif,esp32-twai.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_can_6002b000_PATH "/soc/can@6002b000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_can_6002b000_FULL_NAME "can@6002b000"
#define DT_N_S_soc_S_can_6002b000_FULL_NAME_UNQUOTED can@6002b000
#define DT_N_S_soc_S_can_6002b000_FULL_NAME_TOKEN can_6002b000
#define DT_N_S_soc_S_can_6002b000_FULL_NAME_UPPER_TOKEN CAN_6002B000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_can_6002b000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_can_6002b000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_can_6002b000_NODELABEL_NUM 1
#define DT_N_S_soc_S_can_6002b000_FOREACH_NODELABEL(fn) fn(twai)
#define DT_N_S_soc_S_can_6002b000_FOREACH_NODELABEL_VARGS(fn, ...) fn(twai, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_can_6002b000_CHILD_NUM 0
#define DT_N_S_soc_S_can_6002b000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_can_6002b000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_can_6002b000_ORD 56
#define DT_N_S_soc_S_can_6002b000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_can_6002b000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	50, /* /pin-controller/twai_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_can_6002b000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_can_6002b000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_twai DT_N_S_soc_S_can_6002b000
#define DT_N_NODELABEL_twai              DT_N_S_soc_S_can_6002b000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_can_6002b000_REG_NUM 1
#define DT_N_S_soc_S_can_6002b000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_REG_IDX_0_VAL_ADDRESS 1610788864 /* 0x6002b000 */
#define DT_N_S_soc_S_can_6002b000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_can_6002b000_RANGES_NUM 0
#define DT_N_S_soc_S_can_6002b000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_can_6002b000_IRQ_NUM 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_irq 37
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_can_6002b000_IRQ_LEVEL 1
#define DT_N_S_soc_S_can_6002b000_COMPAT_MATCHES_espressif_esp32_twai 1
#define DT_N_S_soc_S_can_6002b000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_can_6002b000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_COMPAT_MODEL_IDX_0 "esp32-twai"
#define DT_N_S_soc_S_can_6002b000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_can_6002b000_PINCTRL_NUM 1
#define DT_N_S_soc_S_can_6002b000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_can_6002b000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_6002b000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_can_6002b000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_twai_default

/* Generic property macros: */
#define DT_N_S_soc_S_can_6002b000_P_wakeup_source 0
#define DT_N_S_soc_S_can_6002b000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_can_6002b000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_status "disabled"
#define DT_N_S_soc_S_can_6002b000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_can_6002b000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_can_6002b000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_can_6002b000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_can_6002b000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, status, 0)
#define DT_N_S_soc_S_can_6002b000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, status, 0)
#define DT_N_S_soc_S_can_6002b000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_status_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_status_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_compatible {"espressif,esp32-twai"}
#define DT_N_S_soc_S_can_6002b000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_compatible_IDX_0 "espressif,esp32-twai"
#define DT_N_S_soc_S_can_6002b000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-twai
#define DT_N_S_soc_S_can_6002b000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_twai
#define DT_N_S_soc_S_can_6002b000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TWAI
#define DT_N_S_soc_S_can_6002b000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, compatible, 0)
#define DT_N_S_soc_S_can_6002b000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, compatible, 0)
#define DT_N_S_soc_S_can_6002b000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_compatible_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_reg {1610788864 /* 0x6002b000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_can_6002b000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_reg_IDX_0 1610788864
#define DT_N_S_soc_S_can_6002b000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_can_6002b000_P_reg_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupts {37 /* 0x25 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_0 37
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_can_6002b000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, interrupt_parent, 0)
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_can_6002b000_P_clocks_IDX_0_VAL_offset 24
#define DT_N_S_soc_S_can_6002b000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, clocks, 0)
#define DT_N_S_soc_S_can_6002b000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, clocks, 0)
#define DT_N_S_soc_S_can_6002b000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_clocks_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_can_6002b000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_twai_default
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_twai_default
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, pinctrl_0, 0)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, pinctrl_0, 0)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_can_6002b000, pinctrl_names, 0)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_can_6002b000, pinctrl_names, 0)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_can_6002b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_can_6002b000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_can_6002b000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/coretemp@60008800
 *
 * Node identifier: DT_N_S_soc_S_coretemp_60008800
 *
 * Binding (compatible = espressif,esp32-temp):
 *   $ZEPHYR_BASE/dts/bindings/sensor/espressif,esp32-temp.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_coretemp_60008800_PATH "/soc/coretemp@60008800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_coretemp_60008800_FULL_NAME "coretemp@60008800"
#define DT_N_S_soc_S_coretemp_60008800_FULL_NAME_UNQUOTED coretemp@60008800
#define DT_N_S_soc_S_coretemp_60008800_FULL_NAME_TOKEN coretemp_60008800
#define DT_N_S_soc_S_coretemp_60008800_FULL_NAME_UPPER_TOKEN CORETEMP_60008800

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_coretemp_60008800_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_coretemp_60008800_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_coretemp_60008800_NODELABEL_NUM 1
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_NODELABEL(fn) fn(coretemp)
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_NODELABEL_VARGS(fn, ...) fn(coretemp, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_coretemp_60008800_CHILD_NUM 0
#define DT_N_S_soc_S_coretemp_60008800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_coretemp_60008800_ORD 57
#define DT_N_S_soc_S_coretemp_60008800_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_coretemp_60008800_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_coretemp_60008800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_coretemp_60008800_EXISTS 1
#define DT_N_ALIAS_die_temp0             DT_N_S_soc_S_coretemp_60008800
#define DT_N_INST_0_espressif_esp32_temp DT_N_S_soc_S_coretemp_60008800
#define DT_N_NODELABEL_coretemp          DT_N_S_soc_S_coretemp_60008800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_coretemp_60008800_REG_NUM 1
#define DT_N_S_soc_S_coretemp_60008800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_REG_IDX_0_VAL_ADDRESS 1610647552 /* 0x60008800 */
#define DT_N_S_soc_S_coretemp_60008800_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_coretemp_60008800_RANGES_NUM 0
#define DT_N_S_soc_S_coretemp_60008800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_coretemp_60008800_IRQ_NUM 0
#define DT_N_S_soc_S_coretemp_60008800_IRQ_LEVEL 0
#define DT_N_S_soc_S_coretemp_60008800_COMPAT_MATCHES_espressif_esp32_temp 1
#define DT_N_S_soc_S_coretemp_60008800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_coretemp_60008800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_COMPAT_MODEL_IDX_0 "esp32-temp"
#define DT_N_S_soc_S_coretemp_60008800_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_coretemp_60008800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_coretemp_60008800_P_wakeup_source 0
#define DT_N_S_soc_S_coretemp_60008800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_coretemp_60008800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_status "disabled"
#define DT_N_S_soc_S_coretemp_60008800_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_coretemp_60008800_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_coretemp_60008800_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_coretemp_60008800_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_coretemp_60008800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_coretemp_60008800, status, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_coretemp_60008800, status, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_coretemp_60008800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_coretemp_60008800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_status_LEN 1
#define DT_N_S_soc_S_coretemp_60008800_P_status_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_compatible {"espressif,esp32-temp"}
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_IDX_0 "espressif,esp32-temp"
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-temp
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_temp
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TEMP
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_coretemp_60008800, compatible, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_coretemp_60008800, compatible, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_coretemp_60008800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_coretemp_60008800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_LEN 1
#define DT_N_S_soc_S_coretemp_60008800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_reg {1610647552 /* 0x60008800 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_coretemp_60008800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_reg_IDX_0 1610647552
#define DT_N_S_soc_S_coretemp_60008800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_reg_IDX_1 4
#define DT_N_S_soc_S_coretemp_60008800_P_reg_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_coretemp_60008800_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name "coretemp"
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_STRING_UNQUOTED coretemp
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_STRING_TOKEN coretemp
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_STRING_UPPER_TOKEN CORETEMP
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_IDX_0 "coretemp"
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_coretemp_60008800, friendly_name, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_coretemp_60008800, friendly_name, 0)
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_coretemp_60008800, friendly_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_coretemp_60008800, friendly_name, 0, __VA_ARGS__)
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_LEN 1
#define DT_N_S_soc_S_coretemp_60008800_P_friendly_name_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_range 2
#define DT_N_S_soc_S_coretemp_60008800_P_range_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_coretemp_60008800_P_range_IDX_0_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_range_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_coretemp_60008800_P_range_EXISTS 1

/*
 * Devicetree node: /soc/counter@6001f000
 *
 * Node identifier: DT_N_S_soc_S_counter_6001f000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_6001f000_PATH "/soc/counter@6001f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_6001f000_FULL_NAME "counter@6001f000"
#define DT_N_S_soc_S_counter_6001f000_FULL_NAME_UNQUOTED counter@6001f000
#define DT_N_S_soc_S_counter_6001f000_FULL_NAME_TOKEN counter_6001f000
#define DT_N_S_soc_S_counter_6001f000_FULL_NAME_UPPER_TOKEN COUNTER_6001F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_6001f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_6001f000_CHILD_IDX 28

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_6001f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_6001f000_FOREACH_NODELABEL(fn) fn(timer0)
#define DT_N_S_soc_S_counter_6001f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_6001f000_CHILD_NUM 0
#define DT_N_S_soc_S_counter_6001f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_6001f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_6001f000_ORD 58
#define DT_N_S_soc_S_counter_6001f000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_6001f000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_6001f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_6001f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_timer DT_N_S_soc_S_counter_6001f000
#define DT_N_NODELABEL_timer0             DT_N_S_soc_S_counter_6001f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_6001f000_REG_NUM 1
#define DT_N_S_soc_S_counter_6001f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_REG_IDX_0_VAL_ADDRESS 1610739712 /* 0x6001f000 */
#define DT_N_S_soc_S_counter_6001f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_6001f000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_6001f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_6001f000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_6001f000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_6001f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_6001f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_6001f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_6001f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_6001f000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_6001f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_6001f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_status "disabled"
#define DT_N_S_soc_S_counter_6001f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_6001f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_6001f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_6001f000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_6001f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f000, status, 0)
#define DT_N_S_soc_S_counter_6001f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f000, status, 0)
#define DT_N_S_soc_S_counter_6001f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_status_LEN 1
#define DT_N_S_soc_S_counter_6001f000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_6001f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_6001f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_6001f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_6001f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_6001f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f000, compatible, 0)
#define DT_N_S_soc_S_counter_6001f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f000, compatible, 0)
#define DT_N_S_soc_S_counter_6001f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_6001f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_reg {1610739712 /* 0x6001f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_6001f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_reg_IDX_0 1610739712
#define DT_N_S_soc_S_counter_6001f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_6001f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_6001f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_6001f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_6001f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_group 0
#define DT_N_S_soc_S_counter_6001f000_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_6001f000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_index 0
#define DT_N_S_soc_S_counter_6001f000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_6001f000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_6001f000_P_prescaler 2
#define DT_N_S_soc_S_counter_6001f000_P_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/counter@6001f024
 *
 * Node identifier: DT_N_S_soc_S_counter_6001f024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_6001f024_PATH "/soc/counter@6001f024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_6001f024_FULL_NAME "counter@6001f024"
#define DT_N_S_soc_S_counter_6001f024_FULL_NAME_UNQUOTED counter@6001f024
#define DT_N_S_soc_S_counter_6001f024_FULL_NAME_TOKEN counter_6001f024
#define DT_N_S_soc_S_counter_6001f024_FULL_NAME_UPPER_TOKEN COUNTER_6001F024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_6001f024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_6001f024_CHILD_IDX 29

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_6001f024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_6001f024_FOREACH_NODELABEL(fn) fn(timer1)
#define DT_N_S_soc_S_counter_6001f024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_6001f024_CHILD_NUM 0
#define DT_N_S_soc_S_counter_6001f024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_6001f024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_6001f024_ORD 59
#define DT_N_S_soc_S_counter_6001f024_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_6001f024_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_6001f024_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_6001f024_EXISTS 1
#define DT_N_INST_1_espressif_esp32_timer DT_N_S_soc_S_counter_6001f024
#define DT_N_NODELABEL_timer1             DT_N_S_soc_S_counter_6001f024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_6001f024_REG_NUM 1
#define DT_N_S_soc_S_counter_6001f024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_REG_IDX_0_VAL_ADDRESS 1610739748 /* 0x6001f024 */
#define DT_N_S_soc_S_counter_6001f024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_6001f024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_6001f024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_6001f024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_irq 51
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_6001f024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_6001f024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_6001f024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_6001f024_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_6001f024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_6001f024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_6001f024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_6001f024_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_status "disabled"
#define DT_N_S_soc_S_counter_6001f024_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_6001f024_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_6001f024_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_6001f024_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_6001f024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f024, status, 0)
#define DT_N_S_soc_S_counter_6001f024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f024, status, 0)
#define DT_N_S_soc_S_counter_6001f024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_status_LEN 1
#define DT_N_S_soc_S_counter_6001f024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_6001f024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_6001f024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_6001f024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_6001f024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_6001f024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f024, compatible, 0)
#define DT_N_S_soc_S_counter_6001f024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f024, compatible, 0)
#define DT_N_S_soc_S_counter_6001f024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_6001f024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_reg {1610739748 /* 0x6001f024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_6001f024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_reg_IDX_0 1610739748
#define DT_N_S_soc_S_counter_6001f024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_6001f024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupts {51 /* 0x33 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_0 51
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_6001f024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_6001f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_6001f024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_6001f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_6001f024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_6001f024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_6001f024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_group 0
#define DT_N_S_soc_S_counter_6001f024_P_group_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_6001f024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_group_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_index 1
#define DT_N_S_soc_S_counter_6001f024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_6001f024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_6001f024_P_prescaler 2
#define DT_N_S_soc_S_counter_6001f024_P_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/counter@60020000
 *
 * Node identifier: DT_N_S_soc_S_counter_60020000
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_60020000_PATH "/soc/counter@60020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_60020000_FULL_NAME "counter@60020000"
#define DT_N_S_soc_S_counter_60020000_FULL_NAME_UNQUOTED counter@60020000
#define DT_N_S_soc_S_counter_60020000_FULL_NAME_TOKEN counter_60020000
#define DT_N_S_soc_S_counter_60020000_FULL_NAME_UPPER_TOKEN COUNTER_60020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_60020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_60020000_CHILD_IDX 30

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_60020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_60020000_FOREACH_NODELABEL(fn) fn(timer2)
#define DT_N_S_soc_S_counter_60020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_60020000_CHILD_NUM 0
#define DT_N_S_soc_S_counter_60020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_60020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_60020000_ORD 60
#define DT_N_S_soc_S_counter_60020000_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_60020000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_60020000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_60020000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_timer DT_N_S_soc_S_counter_60020000
#define DT_N_NODELABEL_timer2             DT_N_S_soc_S_counter_60020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_60020000_REG_NUM 1
#define DT_N_S_soc_S_counter_60020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_REG_IDX_0_VAL_ADDRESS 1610743808 /* 0x60020000 */
#define DT_N_S_soc_S_counter_60020000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_60020000_RANGES_NUM 0
#define DT_N_S_soc_S_counter_60020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_60020000_IRQ_NUM 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020000_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_60020000_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_60020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_60020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_60020000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_60020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_60020000_P_wakeup_source 0
#define DT_N_S_soc_S_counter_60020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_60020000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_status "disabled"
#define DT_N_S_soc_S_counter_60020000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_60020000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_60020000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_60020000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_60020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020000, status, 0)
#define DT_N_S_soc_S_counter_60020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020000, status, 0)
#define DT_N_S_soc_S_counter_60020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_status_LEN 1
#define DT_N_S_soc_S_counter_60020000_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_60020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_60020000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_60020000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_60020000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_60020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020000, compatible, 0)
#define DT_N_S_soc_S_counter_60020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020000, compatible, 0)
#define DT_N_S_soc_S_counter_60020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_60020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_reg {1610743808 /* 0x60020000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_60020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_reg_IDX_0 1610743808
#define DT_N_S_soc_S_counter_60020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_60020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_60020000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020000, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_60020000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_60020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_group 1
#define DT_N_S_soc_S_counter_60020000_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_60020000_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_index 0
#define DT_N_S_soc_S_counter_60020000_P_index_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_counter_60020000_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_index_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_60020000_P_prescaler 2
#define DT_N_S_soc_S_counter_60020000_P_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/counter@60020024
 *
 * Node identifier: DT_N_S_soc_S_counter_60020024
 *
 * Binding (compatible = espressif,esp32-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_counter_60020024_PATH "/soc/counter@60020024"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_counter_60020024_FULL_NAME "counter@60020024"
#define DT_N_S_soc_S_counter_60020024_FULL_NAME_UNQUOTED counter@60020024
#define DT_N_S_soc_S_counter_60020024_FULL_NAME_TOKEN counter_60020024
#define DT_N_S_soc_S_counter_60020024_FULL_NAME_UPPER_TOKEN COUNTER_60020024

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_counter_60020024_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_counter_60020024_CHILD_IDX 31

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_counter_60020024_NODELABEL_NUM 1
#define DT_N_S_soc_S_counter_60020024_FOREACH_NODELABEL(fn) fn(timer3)
#define DT_N_S_soc_S_counter_60020024_FOREACH_NODELABEL_VARGS(fn, ...) fn(timer3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_counter_60020024_CHILD_NUM 0
#define DT_N_S_soc_S_counter_60020024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_counter_60020024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_counter_60020024_ORD 61
#define DT_N_S_soc_S_counter_60020024_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_counter_60020024_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_counter_60020024_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_counter_60020024_EXISTS 1
#define DT_N_INST_3_espressif_esp32_timer DT_N_S_soc_S_counter_60020024
#define DT_N_NODELABEL_timer3             DT_N_S_soc_S_counter_60020024

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_counter_60020024_REG_NUM 1
#define DT_N_S_soc_S_counter_60020024_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_REG_IDX_0_VAL_ADDRESS 1610743844 /* 0x60020024 */
#define DT_N_S_soc_S_counter_60020024_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_counter_60020024_RANGES_NUM 0
#define DT_N_S_soc_S_counter_60020024_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_counter_60020024_IRQ_NUM 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_irq 54
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020024_IRQ_LEVEL 1
#define DT_N_S_soc_S_counter_60020024_COMPAT_MATCHES_espressif_esp32_timer 1
#define DT_N_S_soc_S_counter_60020024_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_counter_60020024_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_COMPAT_MODEL_IDX_0 "esp32-timer"
#define DT_N_S_soc_S_counter_60020024_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_counter_60020024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_counter_60020024_P_wakeup_source 0
#define DT_N_S_soc_S_counter_60020024_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_counter_60020024_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_status "disabled"
#define DT_N_S_soc_S_counter_60020024_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_counter_60020024_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_counter_60020024_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_counter_60020024_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_counter_60020024_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020024, status, 0)
#define DT_N_S_soc_S_counter_60020024_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020024, status, 0)
#define DT_N_S_soc_S_counter_60020024_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020024, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_status_LEN 1
#define DT_N_S_soc_S_counter_60020024_P_status_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_compatible {"espressif,esp32-timer"}
#define DT_N_S_soc_S_counter_60020024_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_compatible_IDX_0 "espressif,esp32-timer"
#define DT_N_S_soc_S_counter_60020024_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-timer
#define DT_N_S_soc_S_counter_60020024_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_timer
#define DT_N_S_soc_S_counter_60020024_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TIMER
#define DT_N_S_soc_S_counter_60020024_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020024, compatible, 0)
#define DT_N_S_soc_S_counter_60020024_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020024, compatible, 0)
#define DT_N_S_soc_S_counter_60020024_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020024, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_compatible_LEN 1
#define DT_N_S_soc_S_counter_60020024_P_compatible_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_reg {1610743844 /* 0x60020024 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_counter_60020024_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_reg_IDX_0 1610743844
#define DT_N_S_soc_S_counter_60020024_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_reg_IDX_1 4096
#define DT_N_S_soc_S_counter_60020024_P_reg_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupts {54 /* 0x36 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_0 54
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_counter_60020024_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_counter_60020024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_counter_60020024, interrupt_parent, 0)
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_counter_60020024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_counter_60020024, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_counter_60020024_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_counter_60020024_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_group 1
#define DT_N_S_soc_S_counter_60020024_P_group_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_60020024_P_group_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_group_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_group_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_index 1
#define DT_N_S_soc_S_counter_60020024_P_index_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_counter_60020024_P_index_IDX_0_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_index_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_index_EXISTS 1
#define DT_N_S_soc_S_counter_60020024_P_prescaler 2
#define DT_N_S_soc_S_counter_60020024_P_prescaler_EXISTS 1

/*
 * Devicetree node: /soc/i2c@60013000
 *
 * Node identifier: DT_N_S_soc_S_i2c_60013000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_60013000_PATH "/soc/i2c@60013000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_60013000_FULL_NAME "i2c@60013000"
#define DT_N_S_soc_S_i2c_60013000_FULL_NAME_UNQUOTED i2c@60013000
#define DT_N_S_soc_S_i2c_60013000_FULL_NAME_TOKEN i2c_60013000
#define DT_N_S_soc_S_i2c_60013000_FULL_NAME_UPPER_TOKEN I2C_60013000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_60013000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_60013000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_60013000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_60013000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_60013000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_60013000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_60013000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_60013000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_60013000_ORD 62
#define DT_N_S_soc_S_i2c_60013000_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_60013000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	31, /* /pin-controller/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_60013000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_60013000_EXISTS 1
#define DT_N_ALIAS_i2c_0                DT_N_S_soc_S_i2c_60013000
#define DT_N_INST_0_espressif_esp32_i2c DT_N_S_soc_S_i2c_60013000
#define DT_N_NODELABEL_i2c0             DT_N_S_soc_S_i2c_60013000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_60013000_REG_NUM 1
#define DT_N_S_soc_S_i2c_60013000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_REG_IDX_0_VAL_ADDRESS 1610690560 /* 0x60013000 */
#define DT_N_S_soc_S_i2c_60013000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_60013000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_60013000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_60013000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60013000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_60013000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_60013000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_60013000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_60013000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_60013000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_60013000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_60013000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_60013000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_status "disabled"
#define DT_N_S_soc_S_i2c_60013000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_60013000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_60013000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_60013000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_60013000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, status, 0)
#define DT_N_S_soc_S_i2c_60013000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, status, 0)
#define DT_N_S_soc_S_i2c_60013000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_60013000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_60013000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_60013000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_60013000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_60013000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, compatible, 0)
#define DT_N_S_soc_S_i2c_60013000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, compatible, 0)
#define DT_N_S_soc_S_i2c_60013000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_reg {1610690560 /* 0x60013000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_60013000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_reg_IDX_0 1610690560
#define DT_N_S_soc_S_i2c_60013000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_60013000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupts {42 /* 0x2a */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_60013000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_i2c_60013000_P_clocks_IDX_0_VAL_offset 5
#define DT_N_S_soc_S_i2c_60013000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, clocks, 0)
#define DT_N_S_soc_S_i2c_60013000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, clocks, 0)
#define DT_N_S_soc_S_i2c_60013000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_60013000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_60013000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_sq_size 4
#define DT_N_S_soc_S_i2c_60013000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_cq_size 4
#define DT_N_S_soc_S_i2c_60013000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c0_default
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60013000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_60013000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_60013000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_60013000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_60013000_P_rx_lsb_EXISTS 1

/*
 * Devicetree node: /soc/i2c@60027000
 *
 * Node identifier: DT_N_S_soc_S_i2c_60027000
 *
 * Binding (compatible = espressif,esp32-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/espressif,esp32-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_60027000_PATH "/soc/i2c@60027000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_60027000_FULL_NAME "i2c@60027000"
#define DT_N_S_soc_S_i2c_60027000_FULL_NAME_UNQUOTED i2c@60027000
#define DT_N_S_soc_S_i2c_60027000_FULL_NAME_TOKEN i2c_60027000
#define DT_N_S_soc_S_i2c_60027000_FULL_NAME_UPPER_TOKEN I2C_60027000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_60027000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_60027000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_60027000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_60027000_FOREACH_NODELABEL(fn) fn(i2c1)
#define DT_N_S_soc_S_i2c_60027000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_60027000_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_60027000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_60027000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_60027000_ORD 63
#define DT_N_S_soc_S_i2c_60027000_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_60027000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	33, /* /pin-controller/i2c1_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_60027000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_60027000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_i2c DT_N_S_soc_S_i2c_60027000
#define DT_N_NODELABEL_i2c1             DT_N_S_soc_S_i2c_60027000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_60027000_REG_NUM 1
#define DT_N_S_soc_S_i2c_60027000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_REG_IDX_0_VAL_ADDRESS 1610772480 /* 0x60027000 */
#define DT_N_S_soc_S_i2c_60027000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2c_60027000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_60027000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_60027000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60027000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_60027000_COMPAT_MATCHES_espressif_esp32_i2c 1
#define DT_N_S_soc_S_i2c_60027000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2c_60027000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_COMPAT_MODEL_IDX_0 "esp32-i2c"
#define DT_N_S_soc_S_i2c_60027000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_60027000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_60027000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_60027000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_60027000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_status "disabled"
#define DT_N_S_soc_S_i2c_60027000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2c_60027000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2c_60027000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2c_60027000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2c_60027000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, status, 0)
#define DT_N_S_soc_S_i2c_60027000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, status, 0)
#define DT_N_S_soc_S_i2c_60027000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_compatible {"espressif,esp32-i2c"}
#define DT_N_S_soc_S_i2c_60027000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_compatible_IDX_0 "espressif,esp32-i2c"
#define DT_N_S_soc_S_i2c_60027000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2c
#define DT_N_S_soc_S_i2c_60027000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2c
#define DT_N_S_soc_S_i2c_60027000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2C
#define DT_N_S_soc_S_i2c_60027000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, compatible, 0)
#define DT_N_S_soc_S_i2c_60027000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, compatible, 0)
#define DT_N_S_soc_S_i2c_60027000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_reg {1610772480 /* 0x60027000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2c_60027000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_reg_IDX_0 1610772480
#define DT_N_S_soc_S_i2c_60027000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2c_60027000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2c_60027000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_i2c_60027000_P_clocks_IDX_0_VAL_offset 6
#define DT_N_S_soc_S_i2c_60027000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, clocks, 0)
#define DT_N_S_soc_S_i2c_60027000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, clocks, 0)
#define DT_N_S_soc_S_i2c_60027000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_60027000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_60027000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_sq_size 4
#define DT_N_S_soc_S_i2c_60027000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_cq_size 4
#define DT_N_S_soc_S_i2c_60027000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2c1_default
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_60027000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_60027000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_tx_lsb 0
#define DT_N_S_soc_S_i2c_60027000_P_tx_lsb_EXISTS 1
#define DT_N_S_soc_S_i2c_60027000_P_rx_lsb 0
#define DT_N_S_soc_S_i2c_60027000_P_rx_lsb_EXISTS 1

/*
 * Devicetree node: /soc/dma@6003f000
 *
 * Node identifier: DT_N_S_soc_S_dma_6003f000
 *
 * Binding (compatible = espressif,esp32-gdma):
 *   $ZEPHYR_BASE/dts/bindings/dma/espressif,esp32-gdma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_6003f000_PATH "/soc/dma@6003f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_6003f000_FULL_NAME "dma@6003f000"
#define DT_N_S_soc_S_dma_6003f000_FULL_NAME_UNQUOTED dma@6003f000
#define DT_N_S_soc_S_dma_6003f000_FULL_NAME_TOKEN dma_6003f000
#define DT_N_S_soc_S_dma_6003f000_FULL_NAME_UPPER_TOKEN DMA_6003F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_6003f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_6003f000_CHILD_IDX 39

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_6003f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_6003f000_FOREACH_NODELABEL(fn) fn(dma)
#define DT_N_S_soc_S_dma_6003f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_6003f000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_6003f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_6003f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_6003f000_ORD 64
#define DT_N_S_soc_S_dma_6003f000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_6003f000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_6003f000_SUPPORTS_ORDS \
	65, /* /soc/i2s@6000f000 */ \
	66, /* /soc/i2s@6002d000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_6003f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_gdma DT_N_S_soc_S_dma_6003f000
#define DT_N_NODELABEL_dma               DT_N_S_soc_S_dma_6003f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_6003f000_REG_NUM 1
#define DT_N_S_soc_S_dma_6003f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_REG_IDX_0_VAL_ADDRESS 1610870784 /* 0x6003f000 */
#define DT_N_S_soc_S_dma_6003f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_dma_6003f000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_6003f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_6003f000_IRQ_NUM 10
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_irq 66
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_irq 71
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_irq 67
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_irq 72
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_3_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_irq 68
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_4_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_irq 73
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_5_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_irq 69
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_6_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_irq 74
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_7_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_irq 70
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_8_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_irq 75
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_priority 0
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_flags 256
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_IRQ_IDX_9_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_6003f000_COMPAT_MATCHES_espressif_esp32_gdma 1
#define DT_N_S_soc_S_dma_6003f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_dma_6003f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_COMPAT_MODEL_IDX_0 "esp32-gdma"
#define DT_N_S_soc_S_dma_6003f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_6003f000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_6003f000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_6003f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_6003f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_status "disabled"
#define DT_N_S_soc_S_dma_6003f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_6003f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_6003f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_dma_6003f000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_6003f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_6003f000, status, 0)
#define DT_N_S_soc_S_dma_6003f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_6003f000, status, 0)
#define DT_N_S_soc_S_dma_6003f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_6003f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_6003f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_status_LEN 1
#define DT_N_S_soc_S_dma_6003f000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_compatible {"espressif,esp32-gdma"}
#define DT_N_S_soc_S_dma_6003f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_compatible_IDX_0 "espressif,esp32-gdma"
#define DT_N_S_soc_S_dma_6003f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gdma
#define DT_N_S_soc_S_dma_6003f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gdma
#define DT_N_S_soc_S_dma_6003f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GDMA
#define DT_N_S_soc_S_dma_6003f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_6003f000, compatible, 0)
#define DT_N_S_soc_S_dma_6003f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_6003f000, compatible, 0)
#define DT_N_S_soc_S_dma_6003f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_6003f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_6003f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_6003f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_reg {1610870784 /* 0x6003f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_dma_6003f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_reg_IDX_0 1610870784
#define DT_N_S_soc_S_dma_6003f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_dma_6003f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts {66 /* 0x42 */, 0 /* 0x0 */, 256 /* 0x100 */, 71 /* 0x47 */, 0 /* 0x0 */, 256 /* 0x100 */, 67 /* 0x43 */, 0 /* 0x0 */, 256 /* 0x100 */, 72 /* 0x48 */, 0 /* 0x0 */, 256 /* 0x100 */, 68 /* 0x44 */, 0 /* 0x0 */, 256 /* 0x100 */, 73 /* 0x49 */, 0 /* 0x0 */, 256 /* 0x100 */, 69 /* 0x45 */, 0 /* 0x0 */, 256 /* 0x100 */, 74 /* 0x4a */, 0 /* 0x0 */, 256 /* 0x100 */, 70 /* 0x46 */, 0 /* 0x0 */, 256 /* 0x100 */, 75 /* 0x4b */, 0 /* 0x0 */, 256 /* 0x100 */}
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_0 66
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_2 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_3 71
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_5 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_6_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_6 67
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_7_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_7 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_8_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_8 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_9_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_9 72
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_10_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_10 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_11_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_11 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_12_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_12 68
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_13_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_13 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_14_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_14 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_15_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_15 73
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_16_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_16 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_17_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_17 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_18_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_18 69
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_19_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_19 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_20_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_20 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_21_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_21 74
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_22_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_22 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_23_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_23 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_24_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_24 70
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_25_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_25 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_26_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_26 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_27_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_27 75
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_28_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_28 0
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_29_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_IDX_29 256
#define DT_N_S_soc_S_dma_6003f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_6003f000, interrupt_parent, 0)
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_6003f000, interrupt_parent, 0)
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_6003f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_6003f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_dma_6003f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_dma_6003f000_P_clocks_IDX_0_VAL_offset 37
#define DT_N_S_soc_S_dma_6003f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_6003f000, clocks, 0)
#define DT_N_S_soc_S_dma_6003f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_6003f000, clocks, 0)
#define DT_N_S_soc_S_dma_6003f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_6003f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_6003f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_6003f000_P_clocks_LEN 1
#define DT_N_S_soc_S_dma_6003f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_6003f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_dma_channels 10
#define DT_N_S_soc_S_dma_6003f000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_6003f000_P_dma_buf_addr_alignment 4
#define DT_N_S_soc_S_dma_6003f000_P_dma_buf_addr_alignment_EXISTS 1

/*
 * Devicetree node: /soc/i2s@6000f000
 *
 * Node identifier: DT_N_S_soc_S_i2s_6000f000
 *
 * Binding (compatible = espressif,esp32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/espressif,esp32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_6000f000_PATH "/soc/i2s@6000f000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_6000f000_FULL_NAME "i2s@6000f000"
#define DT_N_S_soc_S_i2s_6000f000_FULL_NAME_UNQUOTED i2s@6000f000
#define DT_N_S_soc_S_i2s_6000f000_FULL_NAME_TOKEN i2s_6000f000
#define DT_N_S_soc_S_i2s_6000f000_FULL_NAME_UPPER_TOKEN I2S_6000F000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_6000f000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_6000f000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_6000f000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_NODELABEL(fn) fn(i2s0)
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_6000f000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_6000f000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_6000f000_ORD 65
#define DT_N_S_soc_S_i2s_6000f000_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_6000f000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	35, /* /pin-controller/i2s0_default */ \
	64, /* /soc/dma@6003f000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_6000f000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_6000f000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_i2s DT_N_S_soc_S_i2s_6000f000
#define DT_N_NODELABEL_i2s0             DT_N_S_soc_S_i2s_6000f000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_6000f000_REG_NUM 1
#define DT_N_S_soc_S_i2s_6000f000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_REG_IDX_0_VAL_ADDRESS 1610674176 /* 0x6000f000 */
#define DT_N_S_soc_S_i2s_6000f000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_6000f000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_6000f000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_6000f000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_irq 25
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6000f000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_6000f000_COMPAT_MATCHES_espressif_esp32_i2s 1
#define DT_N_S_soc_S_i2s_6000f000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2s_6000f000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_COMPAT_MODEL_IDX_0 "esp32-i2s"
#define DT_N_S_soc_S_i2s_6000f000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2s_6000f000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2s0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_6000f000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_6000f000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_6000f000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_status "disabled"
#define DT_N_S_soc_S_i2s_6000f000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_6000f000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_6000f000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_6000f000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_6000f000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, status, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, status, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_compatible {"espressif,esp32-i2s"}
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_IDX_0 "espressif,esp32-i2s"
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2s
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2s
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2S
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, compatible, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, compatible, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_reg {1610674176 /* 0x6000f000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_6000f000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_reg_IDX_0 1610674176
#define DT_N_S_soc_S_i2s_6000f000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_6000f000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts {25 /* 0x19 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_0 25
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2s_6000f000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_IDX_0_VAL_offset 7
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, clocks, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, clocks, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_VAL_channel 2
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_VAL_channel 3
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_6000f000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_6000f000, dmas, 1)
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6000f000, dmas, 1)
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_6000f000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6000f000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_6000f000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 1)
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 1)
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6000f000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_6000f000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_6000f000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2s0_default
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2s0_default
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6000f000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2s_6000f000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2s_6000f000_P_unit 0
#define DT_N_S_soc_S_i2s_6000f000_P_unit_EXISTS 1

/*
 * Devicetree node: /soc/i2s@6002d000
 *
 * Node identifier: DT_N_S_soc_S_i2s_6002d000
 *
 * Binding (compatible = espressif,esp32-i2s):
 *   $ZEPHYR_BASE/dts/bindings/i2s/espressif,esp32-i2s.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2s_6002d000_PATH "/soc/i2s@6002d000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2s_6002d000_FULL_NAME "i2s@6002d000"
#define DT_N_S_soc_S_i2s_6002d000_FULL_NAME_UNQUOTED i2s@6002d000
#define DT_N_S_soc_S_i2s_6002d000_FULL_NAME_TOKEN i2s_6002d000
#define DT_N_S_soc_S_i2s_6002d000_FULL_NAME_UPPER_TOKEN I2S_6002D000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2s_6002d000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2s_6002d000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2s_6002d000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_NODELABEL(fn) fn(i2s1)
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2s1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2s_6002d000_CHILD_NUM 0
#define DT_N_S_soc_S_i2s_6002d000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2s_6002d000_ORD 66
#define DT_N_S_soc_S_i2s_6002d000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2s_6002d000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	38, /* /pin-controller/i2s1_default */ \
	64, /* /soc/dma@6003f000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2s_6002d000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2s_6002d000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_i2s DT_N_S_soc_S_i2s_6002d000
#define DT_N_NODELABEL_i2s1             DT_N_S_soc_S_i2s_6002d000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2s_6002d000_REG_NUM 1
#define DT_N_S_soc_S_i2s_6002d000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_REG_IDX_0_VAL_ADDRESS 1610797056 /* 0x6002d000 */
#define DT_N_S_soc_S_i2s_6002d000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_i2s_6002d000_RANGES_NUM 0
#define DT_N_S_soc_S_i2s_6002d000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2s_6002d000_IRQ_NUM 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6002d000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2s_6002d000_COMPAT_MATCHES_espressif_esp32_i2s 1
#define DT_N_S_soc_S_i2s_6002d000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_i2s_6002d000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_COMPAT_MODEL_IDX_0 "esp32-i2s"
#define DT_N_S_soc_S_i2s_6002d000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2s_6002d000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_i2s1_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2s_6002d000_P_wakeup_source 0
#define DT_N_S_soc_S_i2s_6002d000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2s_6002d000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_status "disabled"
#define DT_N_S_soc_S_i2s_6002d000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_i2s_6002d000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_i2s_6002d000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_i2s_6002d000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_i2s_6002d000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, status, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, status, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_status_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_compatible {"espressif,esp32-i2s"}
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_IDX_0 "espressif,esp32-i2s"
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-i2s
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_i2s
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_I2S
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, compatible, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, compatible, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_reg {1610797056 /* 0x6002d000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_i2s_6002d000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_reg_IDX_0 1610797056
#define DT_N_S_soc_S_i2s_6002d000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_i2s_6002d000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts {26 /* 0x1a */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_i2s_6002d000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, interrupt_parent, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_IDX_0_VAL_offset 8
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, clocks, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, clocks, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_VAL_channel 4
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_NAME "rx"
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_rx_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_rx_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_rx_VAL_channel DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_0_VAL_channel
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_rx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_VAL_channel 5
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_NAME "tx"
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_tx_PH DT_N_S_soc_S_dma_6003f000
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_tx_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_tx_VAL_channel DT_N_S_soc_S_i2s_6002d000_P_dmas_IDX_1_VAL_channel
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_NAME_tx_VAL_channel_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, dmas, 0) \
	fn(DT_N_S_soc_S_i2s_6002d000, dmas, 1)
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, dmas, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6002d000, dmas, 1)
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, dmas, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_6002d000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, dmas, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6002d000, dmas, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_LEN 2
#define DT_N_S_soc_S_i2s_6002d000_P_dmas_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names {"rx", "tx"}
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_0 "rx"
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_1 "tx"
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 0) \
	fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 1)
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 1)
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_i2s_6002d000, dma_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_LEN 2
#define DT_N_S_soc_S_i2s_6002d000_P_dma_names_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2s_6002d000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_i2s1_default
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_i2s1_default
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2s_6002d000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2s_6002d000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2s_6002d000_P_unit 1
#define DT_N_S_soc_S_i2s_6002d000_P_unit_EXISTS 1

/*
 * Devicetree node: /soc/memory@3fcbd000
 *
 * Node identifier: DT_N_S_soc_S_memory_3fcbd000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3fcbd000_PATH "/soc/memory@3fcbd000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3fcbd000_FULL_NAME "memory@3fcbd000"
#define DT_N_S_soc_S_memory_3fcbd000_FULL_NAME_UNQUOTED memory@3fcbd000
#define DT_N_S_soc_S_memory_3fcbd000_FULL_NAME_TOKEN memory_3fcbd000
#define DT_N_S_soc_S_memory_3fcbd000_FULL_NAME_UPPER_TOKEN MEMORY_3FCBD000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3fcbd000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3fcbd000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3fcbd000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_NODELABEL(fn) fn(ipmmem0)
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipmmem0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3fcbd000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3fcbd000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3fcbd000_ORD 67
#define DT_N_S_soc_S_memory_3fcbd000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3fcbd000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3fcbd000_SUPPORTS_ORDS \
	68, /* /soc/ipm@3fcc1400 */ \
	70, /* /soc/mbox@3fcc1408 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3fcbd000_EXISTS 1
#define DT_N_INST_1_mmio_sram  DT_N_S_soc_S_memory_3fcbd000
#define DT_N_NODELABEL_ipmmem0 DT_N_S_soc_S_memory_3fcbd000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3fcbd000_REG_NUM 1
#define DT_N_S_soc_S_memory_3fcbd000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_REG_IDX_0_VAL_ADDRESS 1070321664 /* 0x3fcbd000 */
#define DT_N_S_soc_S_memory_3fcbd000_REG_IDX_0_VAL_SIZE 1024 /* 0x400 */
#define DT_N_S_soc_S_memory_3fcbd000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3fcbd000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3fcbd000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3fcbd000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3fcbd000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3fcbd000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3fcbd000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3fcbd000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3fcbd000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3fcbd000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3fcbd000, compatible, 0)
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3fcbd000, compatible, 0)
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3fcbd000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3fcbd000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3fcbd000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_reg {1070321664 /* 0x3fcbd000 */, 1024 /* 0x400 */}
#define DT_N_S_soc_S_memory_3fcbd000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_reg_IDX_0 1070321664
#define DT_N_S_soc_S_memory_3fcbd000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_reg_IDX_1 1024
#define DT_N_S_soc_S_memory_3fcbd000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3fcbd000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/ipm@3fcc1400
 *
 * Node identifier: DT_N_S_soc_S_ipm_3fcc1400
 *
 * Binding (compatible = espressif,esp32-ipm):
 *   $ZEPHYR_BASE/dts/bindings/ipm/espressif,esp32-ipm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ipm_3fcc1400_PATH "/soc/ipm@3fcc1400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ipm_3fcc1400_FULL_NAME "ipm@3fcc1400"
#define DT_N_S_soc_S_ipm_3fcc1400_FULL_NAME_UNQUOTED ipm@3fcc1400
#define DT_N_S_soc_S_ipm_3fcc1400_FULL_NAME_TOKEN ipm_3fcc1400
#define DT_N_S_soc_S_ipm_3fcc1400_FULL_NAME_UPPER_TOKEN IPM_3FCC1400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ipm_3fcc1400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ipm_3fcc1400_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ipm_3fcc1400_NODELABEL_NUM 1
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_NODELABEL(fn) fn(ipm0)
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_NODELABEL_VARGS(fn, ...) fn(ipm0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ipm_3fcc1400_CHILD_NUM 0
#define DT_N_S_soc_S_ipm_3fcc1400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ipm_3fcc1400_ORD 68
#define DT_N_S_soc_S_ipm_3fcc1400_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ipm_3fcc1400_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	67, /* /soc/memory@3fcbd000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ipm_3fcc1400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ipm_3fcc1400_EXISTS 1
#define DT_N_INST_0_espressif_esp32_ipm DT_N_S_soc_S_ipm_3fcc1400
#define DT_N_NODELABEL_ipm0             DT_N_S_soc_S_ipm_3fcc1400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ipm_3fcc1400_REG_NUM 1
#define DT_N_S_soc_S_ipm_3fcc1400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_REG_IDX_0_VAL_ADDRESS 1070339072 /* 0x3fcc1400 */
#define DT_N_S_soc_S_ipm_3fcc1400_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_ipm_3fcc1400_RANGES_NUM 0
#define DT_N_S_soc_S_ipm_3fcc1400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_NUM 2
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_irq 80
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_ipm_3fcc1400_IRQ_LEVEL 1
#define DT_N_S_soc_S_ipm_3fcc1400_COMPAT_MATCHES_espressif_esp32_ipm 1
#define DT_N_S_soc_S_ipm_3fcc1400_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_ipm_3fcc1400_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_COMPAT_MODEL_IDX_0 "esp32-ipm"
#define DT_N_S_soc_S_ipm_3fcc1400_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ipm_3fcc1400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ipm_3fcc1400_P_wakeup_source 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_status "disabled"
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3fcc1400, status, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3fcc1400, status, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_LEN 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_status_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible {"espressif,esp32-ipm"}
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_IDX_0 "espressif,esp32-ipm"
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-ipm
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_ipm
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_IPM
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3fcc1400, compatible, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3fcc1400, compatible, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_LEN 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg {1070339072 /* 0x3fcc1400 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg_IDX_0 1070339072
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg_IDX_1 8
#define DT_N_S_soc_S_ipm_3fcc1400_P_reg_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts {79 /* 0x4f */, 0 /* 0x0 */, 0 /* 0x0 */, 80 /* 0x50 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_0 79
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_3 80
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3fcc1400, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3fcc1400, interrupt_parent, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ipm_3fcc1400_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ipm_3fcc1400, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ipm_3fcc1400, shared_memory, 0)
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ipm_3fcc1400, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_LEN 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_size 1024
#define DT_N_S_soc_S_ipm_3fcc1400_P_shared_memory_size_EXISTS 1

/*
 * Devicetree node: /soc/lcd_cam@60041000
 *
 * Node identifier: DT_N_S_soc_S_lcd_cam_60041000
 *
 * Binding (compatible = espressif,esp32-lcd-cam):
 *   $ZEPHYR_BASE/dts/bindings/video/espressif,esp32-cam.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_lcd_cam_60041000_PATH "/soc/lcd_cam@60041000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_lcd_cam_60041000_FULL_NAME "lcd_cam@60041000"
#define DT_N_S_soc_S_lcd_cam_60041000_FULL_NAME_UNQUOTED lcd_cam@60041000
#define DT_N_S_soc_S_lcd_cam_60041000_FULL_NAME_TOKEN lcd_cam_60041000
#define DT_N_S_soc_S_lcd_cam_60041000_FULL_NAME_UPPER_TOKEN LCD_CAM_60041000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_lcd_cam_60041000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_lcd_cam_60041000_CHILD_IDX 26

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_lcd_cam_60041000_NODELABEL_NUM 1
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_NODELABEL(fn) fn(lcd_cam)
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lcd_cam, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_lcd_cam_60041000_CHILD_NUM 0
#define DT_N_S_soc_S_lcd_cam_60041000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_lcd_cam_60041000_ORD 69
#define DT_N_S_soc_S_lcd_cam_60041000_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_lcd_cam_60041000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_lcd_cam_60041000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_lcd_cam_60041000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_lcd_cam DT_N_S_soc_S_lcd_cam_60041000
#define DT_N_NODELABEL_lcd_cam              DT_N_S_soc_S_lcd_cam_60041000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_lcd_cam_60041000_REG_NUM 1
#define DT_N_S_soc_S_lcd_cam_60041000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_REG_IDX_0_VAL_ADDRESS 1610878976 /* 0x60041000 */
#define DT_N_S_soc_S_lcd_cam_60041000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_lcd_cam_60041000_RANGES_NUM 0
#define DT_N_S_soc_S_lcd_cam_60041000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_NUM 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_irq 24
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_lcd_cam_60041000_IRQ_LEVEL 1
#define DT_N_S_soc_S_lcd_cam_60041000_COMPAT_MATCHES_espressif_esp32_lcd_cam 1
#define DT_N_S_soc_S_lcd_cam_60041000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_lcd_cam_60041000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_COMPAT_MODEL_IDX_0 "esp32-lcd-cam"
#define DT_N_S_soc_S_lcd_cam_60041000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_lcd_cam_60041000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_lcd_cam_60041000_P_wakeup_source 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_status "disabled"
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lcd_cam_60041000, status, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lcd_cam_60041000, status, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_LEN 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_status_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible {"espressif,esp32-lcd-cam"}
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_IDX_0 "espressif,esp32-lcd-cam"
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-lcd-cam
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_lcd_cam
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_LCD_CAM
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lcd_cam_60041000, compatible, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lcd_cam_60041000, compatible, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_LEN 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg {1610878976 /* 0x60041000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg_IDX_0 1610878976
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_lcd_cam_60041000_P_reg_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts {24 /* 0x18 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_0 24
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lcd_cam_60041000, interrupt_parent, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lcd_cam_60041000, interrupt_parent, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_IDX_0_VAL_offset 9
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lcd_cam_60041000, clocks, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lcd_cam_60041000, clocks, 0)
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lcd_cam_60041000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_LEN 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_byte_order 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_byte_order_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_bit_order 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_bit_order_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_pclk 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_pclk_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_de 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_de_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_hsync 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_hsync_EXISTS 1
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_vsync 0
#define DT_N_S_soc_S_lcd_cam_60041000_P_invert_vsync_EXISTS 1

/*
 * Devicetree node: /soc/mbox@3fcc1408
 *
 * Node identifier: DT_N_S_soc_S_mbox_3fcc1408
 *
 * Binding (compatible = espressif,mbox-esp32):
 *   $ZEPHYR_BASE/dts/bindings/mbox/espressif,mbox-esp32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mbox_3fcc1408_PATH "/soc/mbox@3fcc1408"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mbox_3fcc1408_FULL_NAME "mbox@3fcc1408"
#define DT_N_S_soc_S_mbox_3fcc1408_FULL_NAME_UNQUOTED mbox@3fcc1408
#define DT_N_S_soc_S_mbox_3fcc1408_FULL_NAME_TOKEN mbox_3fcc1408
#define DT_N_S_soc_S_mbox_3fcc1408_FULL_NAME_UPPER_TOKEN MBOX_3FCC1408

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mbox_3fcc1408_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mbox_3fcc1408_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mbox_3fcc1408_NODELABEL_NUM 1
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_NODELABEL(fn) fn(mbox0)
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_NODELABEL_VARGS(fn, ...) fn(mbox0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mbox_3fcc1408_CHILD_NUM 0
#define DT_N_S_soc_S_mbox_3fcc1408_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mbox_3fcc1408_ORD 70
#define DT_N_S_soc_S_mbox_3fcc1408_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mbox_3fcc1408_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	67, /* /soc/memory@3fcbd000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mbox_3fcc1408_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mbox_3fcc1408_EXISTS 1
#define DT_N_INST_0_espressif_mbox_esp32 DT_N_S_soc_S_mbox_3fcc1408
#define DT_N_NODELABEL_mbox0             DT_N_S_soc_S_mbox_3fcc1408

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mbox_3fcc1408_REG_NUM 1
#define DT_N_S_soc_S_mbox_3fcc1408_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_REG_IDX_0_VAL_ADDRESS 1070339080 /* 0x3fcc1408 */
#define DT_N_S_soc_S_mbox_3fcc1408_REG_IDX_0_VAL_SIZE 8 /* 0x8 */
#define DT_N_S_soc_S_mbox_3fcc1408_RANGES_NUM 0
#define DT_N_S_soc_S_mbox_3fcc1408_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_NUM 2
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_irq 79
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_irq 80
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_flags 0
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mbox_3fcc1408_IRQ_LEVEL 1
#define DT_N_S_soc_S_mbox_3fcc1408_COMPAT_MATCHES_espressif_mbox_esp32 1
#define DT_N_S_soc_S_mbox_3fcc1408_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mbox_3fcc1408_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_COMPAT_MODEL_IDX_0 "mbox-esp32"
#define DT_N_S_soc_S_mbox_3fcc1408_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mbox_3fcc1408_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mbox_3fcc1408_P_wakeup_source 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_status "disabled"
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3fcc1408, status, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3fcc1408, status, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_LEN 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_status_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible {"espressif,mbox-esp32"}
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_IDX_0 "espressif,mbox-esp32"
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_IDX_0_STRING_UNQUOTED espressif,mbox-esp32
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_IDX_0_STRING_TOKEN espressif_mbox_esp32
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_MBOX_ESP32
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3fcc1408, compatible, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3fcc1408, compatible, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_LEN 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg {1070339080 /* 0x3fcc1408 */, 8 /* 0x8 */}
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg_IDX_0 1070339080
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg_IDX_1 8
#define DT_N_S_soc_S_mbox_3fcc1408_P_reg_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts {79 /* 0x4f */, 0 /* 0x0 */, 0 /* 0x0 */, 80 /* 0x50 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_0 79
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_3 80
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_4 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_IDX_5 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3fcc1408, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3fcc1408, interrupt_parent, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mbox_3fcc1408_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_IDX_0 DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_IDX_0_PH DT_N_S_soc_S_memory_3fcbd000
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mbox_3fcc1408, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mbox_3fcc1408, shared_memory, 0)
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mbox_3fcc1408, shared_memory, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_LEN 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_EXISTS 1
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_size 1024
#define DT_N_S_soc_S_mbox_3fcc1408_P_shared_memory_size_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@6001e000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_6001e000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_6001e000_PATH "/soc/mcpwm@6001e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_6001e000_FULL_NAME "mcpwm@6001e000"
#define DT_N_S_soc_S_mcpwm_6001e000_FULL_NAME_UNQUOTED mcpwm@6001e000
#define DT_N_S_soc_S_mcpwm_6001e000_FULL_NAME_TOKEN mcpwm_6001e000
#define DT_N_S_soc_S_mcpwm_6001e000_FULL_NAME_UPPER_TOKEN MCPWM_6001E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_6001e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_6001e000_CHILD_IDX 36

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_6001e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_NODELABEL(fn) fn(mcpwm0)
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_6001e000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_6001e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_6001e000_ORD 71
#define DT_N_S_soc_S_mcpwm_6001e000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_6001e000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_6001e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_6001e000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_6001e000
#define DT_N_NODELABEL_mcpwm0             DT_N_S_soc_S_mcpwm_6001e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_6001e000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_6001e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_REG_IDX_0_VAL_ADDRESS 1610735616 /* 0x6001e000 */
#define DT_N_S_soc_S_mcpwm_6001e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_6001e000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_6001e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_irq 31
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6001e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_6001e000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_6001e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_6001e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_6001e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_6001e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_6001e000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_6001e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_6001e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6001e000, status, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6001e000, status, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6001e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6001e000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg {1610735616 /* 0x6001e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg_IDX_0 1610735616
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_6001e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts {31 /* 0x1f */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_0 31
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6001e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6001e000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_IDX_0_VAL_offset 12
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6001e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6001e000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6001e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6001e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_6001e000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/mcpwm@6002c000
 *
 * Node identifier: DT_N_S_soc_S_mcpwm_6002c000
 *
 * Binding (compatible = espressif,esp32-mcpwm):
 *   $ZEPHYR_BASE/dts/bindings/pwm/espressif,esp32-mcpwm.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_mcpwm_6002c000_PATH "/soc/mcpwm@6002c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_mcpwm_6002c000_FULL_NAME "mcpwm@6002c000"
#define DT_N_S_soc_S_mcpwm_6002c000_FULL_NAME_UNQUOTED mcpwm@6002c000
#define DT_N_S_soc_S_mcpwm_6002c000_FULL_NAME_TOKEN mcpwm_6002c000
#define DT_N_S_soc_S_mcpwm_6002c000_FULL_NAME_UPPER_TOKEN MCPWM_6002C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_mcpwm_6002c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_mcpwm_6002c000_CHILD_IDX 37

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_mcpwm_6002c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_NODELABEL(fn) fn(mcpwm1)
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(mcpwm1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_mcpwm_6002c000_CHILD_NUM 0
#define DT_N_S_soc_S_mcpwm_6002c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_mcpwm_6002c000_ORD 72
#define DT_N_S_soc_S_mcpwm_6002c000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_mcpwm_6002c000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_mcpwm_6002c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_mcpwm_6002c000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_mcpwm DT_N_S_soc_S_mcpwm_6002c000
#define DT_N_NODELABEL_mcpwm1             DT_N_S_soc_S_mcpwm_6002c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_mcpwm_6002c000_REG_NUM 1
#define DT_N_S_soc_S_mcpwm_6002c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_REG_IDX_0_VAL_ADDRESS 1610792960 /* 0x6002c000 */
#define DT_N_S_soc_S_mcpwm_6002c000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_mcpwm_6002c000_RANGES_NUM 0
#define DT_N_S_soc_S_mcpwm_6002c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_NUM 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_irq 32
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6002c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_mcpwm_6002c000_COMPAT_MATCHES_espressif_esp32_mcpwm 1
#define DT_N_S_soc_S_mcpwm_6002c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_mcpwm_6002c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_COMPAT_MODEL_IDX_0 "esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_6002c000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_mcpwm_6002c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_mcpwm_6002c000_P_wakeup_source 0
#define DT_N_S_soc_S_mcpwm_6002c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_mcpwm_6002c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_status "disabled"
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6002c000, status, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6002c000, status, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_LEN 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_status_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible {"espressif,esp32-mcpwm"}
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_IDX_0 "espressif,esp32-mcpwm"
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-mcpwm
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_mcpwm
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_MCPWM
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6002c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6002c000, compatible, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_LEN 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg {1610792960 /* 0x6002c000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg_IDX_0 1610792960
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_mcpwm_6002c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts {32 /* 0x20 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_0 32
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6002c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6002c000, interrupt_parent, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_IDX_0_VAL_offset 13
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_mcpwm_6002c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_mcpwm_6002c000, clocks, 0)
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_mcpwm_6002c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_LEN 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_mcpwm_6002c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_mcpwm_6002c000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@3fc88000
 *
 * Node identifier: DT_N_S_soc_S_memory_3fc88000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3fc88000_PATH "/soc/memory@3fc88000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3fc88000_FULL_NAME "memory@3fc88000"
#define DT_N_S_soc_S_memory_3fc88000_FULL_NAME_UNQUOTED memory@3fc88000
#define DT_N_S_soc_S_memory_3fc88000_FULL_NAME_TOKEN memory_3fc88000
#define DT_N_S_soc_S_memory_3fc88000_FULL_NAME_UPPER_TOKEN MEMORY_3FC88000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3fc88000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3fc88000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3fc88000_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3fc88000_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3fc88000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3fc88000_ORD 73
#define DT_N_S_soc_S_memory_3fc88000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3fc88000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3fc88000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3fc88000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_soc_S_memory_3fc88000
#define DT_N_NODELABEL_sram0  DT_N_S_soc_S_memory_3fc88000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3fc88000_REG_NUM 1
#define DT_N_S_soc_S_memory_3fc88000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_REG_IDX_0_VAL_ADDRESS 1070104576 /* 0x3fc88000 */
#define DT_N_S_soc_S_memory_3fc88000_REG_IDX_0_VAL_SIZE 491519 /* 0x77fff */
#define DT_N_S_soc_S_memory_3fc88000_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3fc88000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3fc88000_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3fc88000_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3fc88000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3fc88000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3fc88000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3fc88000_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3fc88000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3fc88000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3fc88000, compatible, 0)
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3fc88000, compatible, 0)
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3fc88000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3fc88000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3fc88000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_reg {1070104576 /* 0x3fc88000 */, 491519 /* 0x77fff */}
#define DT_N_S_soc_S_memory_3fc88000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_reg_IDX_0 1070104576
#define DT_N_S_soc_S_memory_3fc88000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_reg_IDX_1 491519
#define DT_N_S_soc_S_memory_3fc88000_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3fc88000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3fc88000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/memory@3fcbd400
 *
 * Node identifier: DT_N_S_soc_S_memory_3fcbd400
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_memory_3fcbd400_PATH "/soc/memory@3fcbd400"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_memory_3fcbd400_FULL_NAME "memory@3fcbd400"
#define DT_N_S_soc_S_memory_3fcbd400_FULL_NAME_UNQUOTED memory@3fcbd400
#define DT_N_S_soc_S_memory_3fcbd400_FULL_NAME_TOKEN memory_3fcbd400
#define DT_N_S_soc_S_memory_3fcbd400_FULL_NAME_UPPER_TOKEN MEMORY_3FCBD400

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_memory_3fcbd400_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_memory_3fcbd400_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_memory_3fcbd400_NODELABEL_NUM 1
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_NODELABEL(fn) fn(shm0)
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_NODELABEL_VARGS(fn, ...) fn(shm0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_memory_3fcbd400_CHILD_NUM 0
#define DT_N_S_soc_S_memory_3fcbd400_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_memory_3fcbd400_ORD 74
#define DT_N_S_soc_S_memory_3fcbd400_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_memory_3fcbd400_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_memory_3fcbd400_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_memory_3fcbd400_EXISTS 1
#define DT_N_INST_2_mmio_sram DT_N_S_soc_S_memory_3fcbd400
#define DT_N_NODELABEL_shm0   DT_N_S_soc_S_memory_3fcbd400

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_memory_3fcbd400_REG_NUM 1
#define DT_N_S_soc_S_memory_3fcbd400_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_REG_IDX_0_VAL_ADDRESS 1070322688 /* 0x3fcbd400 */
#define DT_N_S_soc_S_memory_3fcbd400_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_memory_3fcbd400_RANGES_NUM 0
#define DT_N_S_soc_S_memory_3fcbd400_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_memory_3fcbd400_IRQ_NUM 0
#define DT_N_S_soc_S_memory_3fcbd400_IRQ_LEVEL 0
#define DT_N_S_soc_S_memory_3fcbd400_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_memory_3fcbd400_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_memory_3fcbd400_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_memory_3fcbd400_P_wakeup_source 0
#define DT_N_S_soc_S_memory_3fcbd400_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_memory_3fcbd400_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_memory_3fcbd400, compatible, 0)
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_memory_3fcbd400, compatible, 0)
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_memory_3fcbd400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_memory_3fcbd400, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_LEN 1
#define DT_N_S_soc_S_memory_3fcbd400_P_compatible_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_reg {1070322688 /* 0x3fcbd400 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_memory_3fcbd400_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_reg_IDX_0 1070322688
#define DT_N_S_soc_S_memory_3fcbd400_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_reg_IDX_1 16384
#define DT_N_S_soc_S_memory_3fcbd400_P_reg_EXISTS 1
#define DT_N_S_soc_S_memory_3fcbd400_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_memory_3fcbd400_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/pcnt@60017000
 *
 * Node identifier: DT_N_S_soc_S_pcnt_60017000
 *
 * Binding (compatible = espressif,esp32-pcnt):
 *   $ZEPHYR_BASE/dts/bindings/sensor/espressif,esp32-pcnt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pcnt_60017000_PATH "/soc/pcnt@60017000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pcnt_60017000_FULL_NAME "pcnt@60017000"
#define DT_N_S_soc_S_pcnt_60017000_FULL_NAME_UNQUOTED pcnt@60017000
#define DT_N_S_soc_S_pcnt_60017000_FULL_NAME_TOKEN pcnt_60017000
#define DT_N_S_soc_S_pcnt_60017000_FULL_NAME_UPPER_TOKEN PCNT_60017000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pcnt_60017000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pcnt_60017000_CHILD_IDX 38

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pcnt_60017000_NODELABEL_NUM 1
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_NODELABEL(fn) fn(pcnt)
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcnt, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pcnt_60017000_CHILD_NUM 0
#define DT_N_S_soc_S_pcnt_60017000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pcnt_60017000_ORD 75
#define DT_N_S_soc_S_pcnt_60017000_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pcnt_60017000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pcnt_60017000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pcnt_60017000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_pcnt DT_N_S_soc_S_pcnt_60017000
#define DT_N_NODELABEL_pcnt              DT_N_S_soc_S_pcnt_60017000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pcnt_60017000_REG_NUM 1
#define DT_N_S_soc_S_pcnt_60017000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_REG_IDX_0_VAL_ADDRESS 1610706944 /* 0x60017000 */
#define DT_N_S_soc_S_pcnt_60017000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_pcnt_60017000_RANGES_NUM 0
#define DT_N_S_soc_S_pcnt_60017000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pcnt_60017000_IRQ_NUM 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_irq 41
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_pcnt_60017000_IRQ_LEVEL 1
#define DT_N_S_soc_S_pcnt_60017000_COMPAT_MATCHES_espressif_esp32_pcnt 1
#define DT_N_S_soc_S_pcnt_60017000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_pcnt_60017000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_COMPAT_MODEL_IDX_0 "esp32-pcnt"
#define DT_N_S_soc_S_pcnt_60017000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pcnt_60017000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pcnt_60017000_P_wakeup_source 0
#define DT_N_S_soc_S_pcnt_60017000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pcnt_60017000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_status "disabled"
#define DT_N_S_soc_S_pcnt_60017000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_pcnt_60017000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_pcnt_60017000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_pcnt_60017000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_pcnt_60017000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_60017000, status, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_60017000, status, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_60017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_60017000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_status_LEN 1
#define DT_N_S_soc_S_pcnt_60017000_P_status_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_compatible {"espressif,esp32-pcnt"}
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_IDX_0 "espressif,esp32-pcnt"
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-pcnt
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_pcnt
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_PCNT
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_60017000, compatible, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_60017000, compatible, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_60017000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_60017000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_LEN 1
#define DT_N_S_soc_S_pcnt_60017000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_reg {1610706944 /* 0x60017000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_pcnt_60017000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_reg_IDX_0 1610706944
#define DT_N_S_soc_S_pcnt_60017000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_pcnt_60017000_P_reg_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts {41 /* 0x29 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_0 41
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_pcnt_60017000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_60017000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_60017000, interrupt_parent, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_60017000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_60017000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_pcnt_60017000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_IDX_0_VAL_offset 19
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pcnt_60017000, clocks, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pcnt_60017000, clocks, 0)
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pcnt_60017000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pcnt_60017000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_LEN 1
#define DT_N_S_soc_S_pcnt_60017000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_pcnt_60017000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pcnt_60017000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/psram@3c000000
 *
 * Node identifier: DT_N_S_soc_S_psram_3c000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_psram_3c000000_PATH "/soc/psram@3c000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_psram_3c000000_FULL_NAME "psram@3c000000"
#define DT_N_S_soc_S_psram_3c000000_FULL_NAME_UNQUOTED psram@3c000000
#define DT_N_S_soc_S_psram_3c000000_FULL_NAME_TOKEN psram_3c000000
#define DT_N_S_soc_S_psram_3c000000_FULL_NAME_UPPER_TOKEN PSRAM_3C000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_psram_3c000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_psram_3c000000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_psram_3c000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_psram_3c000000_FOREACH_NODELABEL(fn) fn(psram0)
#define DT_N_S_soc_S_psram_3c000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(psram0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_psram_3c000000_CHILD_NUM 0
#define DT_N_S_soc_S_psram_3c000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_psram_3c000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_psram_3c000000_ORD 76
#define DT_N_S_soc_S_psram_3c000000_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_psram_3c000000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_psram_3c000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_psram_3c000000_EXISTS 1
#define DT_N_INST_3_mmio_sram DT_N_S_soc_S_psram_3c000000
#define DT_N_NODELABEL_psram0 DT_N_S_soc_S_psram_3c000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_psram_3c000000_REG_NUM 1
#define DT_N_S_soc_S_psram_3c000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_REG_IDX_0_VAL_ADDRESS 1006632960 /* 0x3c000000 */
#define DT_N_S_soc_S_psram_3c000000_REG_IDX_0_VAL_SIZE 2097152 /* 0x200000 */
#define DT_N_S_soc_S_psram_3c000000_RANGES_NUM 0
#define DT_N_S_soc_S_psram_3c000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_psram_3c000000_IRQ_NUM 0
#define DT_N_S_soc_S_psram_3c000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_psram_3c000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_soc_S_psram_3c000000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_psram_3c000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_psram_3c000000_P_wakeup_source 0
#define DT_N_S_soc_S_psram_3c000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_psram_3c000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_status "disabled"
#define DT_N_S_soc_S_psram_3c000000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_psram_3c000000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_psram_3c000000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_psram_3c000000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_psram_3c000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_psram_3c000000, status, 0)
#define DT_N_S_soc_S_psram_3c000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_psram_3c000000, status, 0)
#define DT_N_S_soc_S_psram_3c000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_psram_3c000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_psram_3c000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_psram_3c000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_psram_3c000000_P_status_LEN 1
#define DT_N_S_soc_S_psram_3c000000_P_status_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_compatible {"mmio-sram"}
#define DT_N_S_soc_S_psram_3c000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_soc_S_psram_3c000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_soc_S_psram_3c000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_soc_S_psram_3c000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_soc_S_psram_3c000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_psram_3c000000, compatible, 0)
#define DT_N_S_soc_S_psram_3c000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_psram_3c000000, compatible, 0)
#define DT_N_S_soc_S_psram_3c000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_psram_3c000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_psram_3c000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_psram_3c000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_psram_3c000000_P_compatible_LEN 1
#define DT_N_S_soc_S_psram_3c000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_reg {1006632960 /* 0x3c000000 */, 2097152 /* 0x200000 */}
#define DT_N_S_soc_S_psram_3c000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_reg_IDX_0 1006632960
#define DT_N_S_soc_S_psram_3c000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_reg_IDX_1 2097152
#define DT_N_S_soc_S_psram_3c000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_psram_3c000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_psram_3c000000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/rtc_timer@60008004
 *
 * Node identifier: DT_N_S_soc_S_rtc_timer_60008004
 *
 * Binding (compatible = espressif,esp32-rtc-timer):
 *   $ZEPHYR_BASE/dts/bindings/counter/espressif,esp32-rtc-timer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_rtc_timer_60008004_PATH "/soc/rtc_timer@60008004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_rtc_timer_60008004_FULL_NAME "rtc_timer@60008004"
#define DT_N_S_soc_S_rtc_timer_60008004_FULL_NAME_UNQUOTED rtc_timer@60008004
#define DT_N_S_soc_S_rtc_timer_60008004_FULL_NAME_TOKEN rtc_timer_60008004
#define DT_N_S_soc_S_rtc_timer_60008004_FULL_NAME_UPPER_TOKEN RTC_TIMER_60008004

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_rtc_timer_60008004_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_rtc_timer_60008004_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_rtc_timer_60008004_NODELABEL_NUM 1
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_NODELABEL(fn) fn(rtc_timer)
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_NODELABEL_VARGS(fn, ...) fn(rtc_timer, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_rtc_timer_60008004_CHILD_NUM 0
#define DT_N_S_soc_S_rtc_timer_60008004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_rtc_timer_60008004_ORD 77
#define DT_N_S_soc_S_rtc_timer_60008004_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_rtc_timer_60008004_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_rtc_timer_60008004_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_rtc_timer_60008004_EXISTS 1
#define DT_N_INST_0_espressif_esp32_rtc_timer DT_N_S_soc_S_rtc_timer_60008004
#define DT_N_NODELABEL_rtc_timer              DT_N_S_soc_S_rtc_timer_60008004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_rtc_timer_60008004_REG_NUM 1
#define DT_N_S_soc_S_rtc_timer_60008004_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_REG_IDX_0_VAL_ADDRESS 1610645508 /* 0x60008004 */
#define DT_N_S_soc_S_rtc_timer_60008004_REG_IDX_0_VAL_SIZE 12 /* 0xc */
#define DT_N_S_soc_S_rtc_timer_60008004_RANGES_NUM 0
#define DT_N_S_soc_S_rtc_timer_60008004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_NUM 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_rtc_timer_60008004_IRQ_LEVEL 1
#define DT_N_S_soc_S_rtc_timer_60008004_COMPAT_MATCHES_espressif_esp32_rtc_timer 1
#define DT_N_S_soc_S_rtc_timer_60008004_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_rtc_timer_60008004_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_COMPAT_MODEL_IDX_0 "esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_60008004_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_rtc_timer_60008004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_rtc_timer_60008004_P_wakeup_source 0
#define DT_N_S_soc_S_rtc_timer_60008004_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_rtc_timer_60008004_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_status "disabled"
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_60008004, status, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_60008004, status, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_LEN 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_status_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible {"espressif,esp32-rtc-timer"}
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_IDX_0 "espressif,esp32-rtc-timer"
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-rtc-timer
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_rtc_timer
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_RTC_TIMER
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_60008004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_60008004, compatible, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_LEN 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_compatible_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg {1610645508 /* 0x60008004 */, 12 /* 0xc */}
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg_IDX_0 1610645508
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg_IDX_1 12
#define DT_N_S_soc_S_rtc_timer_60008004_P_reg_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_60008004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_60008004, interrupt_parent, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_IDX_0_VAL_offset 40
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_rtc_timer_60008004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_rtc_timer_60008004, clocks, 0)
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_rtc_timer_60008004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_LEN 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_clocks_EXISTS 1
#define DT_N_S_soc_S_rtc_timer_60008004_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_rtc_timer_60008004_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/spi@60024000
 *
 * Node identifier: DT_N_S_soc_S_spi_60024000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_60024000_PATH "/soc/spi@60024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_60024000_FULL_NAME "spi@60024000"
#define DT_N_S_soc_S_spi_60024000_FULL_NAME_UNQUOTED spi@60024000
#define DT_N_S_soc_S_spi_60024000_FULL_NAME_TOKEN spi_60024000
#define DT_N_S_soc_S_spi_60024000_FULL_NAME_UPPER_TOKEN SPI_60024000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_60024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_60024000_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_60024000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_60024000_FOREACH_NODELABEL(fn) fn(spi2)
#define DT_N_S_soc_S_spi_60024000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_60024000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_60024000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_60024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_60024000_ORD 78
#define DT_N_S_soc_S_spi_60024000_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_60024000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	44, /* /pin-controller/spim2_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_60024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_60024000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_spi DT_N_S_soc_S_spi_60024000
#define DT_N_NODELABEL_spi2             DT_N_S_soc_S_spi_60024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_60024000_REG_NUM 1
#define DT_N_S_soc_S_spi_60024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_REG_IDX_0_VAL_ADDRESS 1610760192 /* 0x60024000 */
#define DT_N_S_soc_S_spi_60024000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_60024000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_60024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_60024000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60024000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_60024000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_60024000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_60024000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_60024000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_60024000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_60024000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_60024000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_60024000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_60024000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spim2_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_60024000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_60024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_60024000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_status "okay"
#define DT_N_S_soc_S_spi_60024000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_60024000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_60024000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_60024000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_60024000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, status, 0)
#define DT_N_S_soc_S_spi_60024000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, status, 0)
#define DT_N_S_soc_S_spi_60024000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_status_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_60024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_60024000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_60024000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_60024000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_60024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, compatible, 0)
#define DT_N_S_soc_S_spi_60024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, compatible, 0)
#define DT_N_S_soc_S_spi_60024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_reg {1610760192 /* 0x60024000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_60024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_reg_IDX_0 1610760192
#define DT_N_S_soc_S_spi_60024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_60024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_60024000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_spi_60024000_P_clocks_IDX_0_VAL_offset 21
#define DT_N_S_soc_S_spi_60024000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, clocks, 0)
#define DT_N_S_soc_S_spi_60024000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, clocks, 0)
#define DT_N_S_soc_S_spi_60024000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_60024000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spim2_default
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spim2_default
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60024000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60024000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60024000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60024000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_60024000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_half_duplex 0
#define DT_N_S_soc_S_spi_60024000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_60024000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_sio 0
#define DT_N_S_soc_S_spi_60024000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_dma_enabled 0
#define DT_N_S_soc_S_spi_60024000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_dma_clk 37
#define DT_N_S_soc_S_spi_60024000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_dma_host 0
#define DT_N_S_soc_S_spi_60024000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_60024000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_positive_cs 0
#define DT_N_S_soc_S_spi_60024000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_use_iomux 0
#define DT_N_S_soc_S_spi_60024000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_60024000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_60024000_P_line_idle_low_EXISTS 1

/*
 * Devicetree node: /soc/spi@60025000
 *
 * Node identifier: DT_N_S_soc_S_spi_60025000
 *
 * Binding (compatible = espressif,esp32-spi):
 *   $ZEPHYR_BASE/dts/bindings/spi/espressif,esp32-spi.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_spi_60025000_PATH "/soc/spi@60025000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_spi_60025000_FULL_NAME "spi@60025000"
#define DT_N_S_soc_S_spi_60025000_FULL_NAME_UNQUOTED spi@60025000
#define DT_N_S_soc_S_spi_60025000_FULL_NAME_TOKEN spi_60025000
#define DT_N_S_soc_S_spi_60025000_FULL_NAME_UPPER_TOKEN SPI_60025000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_spi_60025000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_spi_60025000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_spi_60025000_NODELABEL_NUM 1
#define DT_N_S_soc_S_spi_60025000_FOREACH_NODELABEL(fn) fn(spi3)
#define DT_N_S_soc_S_spi_60025000_FOREACH_NODELABEL_VARGS(fn, ...) fn(spi3, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_spi_60025000_CHILD_NUM 0
#define DT_N_S_soc_S_spi_60025000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_spi_60025000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_spi_60025000_ORD 79
#define DT_N_S_soc_S_spi_60025000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_spi_60025000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	47, /* /pin-controller/spim3_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_spi_60025000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_spi_60025000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_spi DT_N_S_soc_S_spi_60025000
#define DT_N_NODELABEL_spi3             DT_N_S_soc_S_spi_60025000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_spi_60025000_REG_NUM 1
#define DT_N_S_soc_S_spi_60025000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_REG_IDX_0_VAL_ADDRESS 1610764288 /* 0x60025000 */
#define DT_N_S_soc_S_spi_60025000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_spi_60025000_RANGES_NUM 0
#define DT_N_S_soc_S_spi_60025000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_spi_60025000_IRQ_NUM 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_irq 22
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60025000_IRQ_LEVEL 1
#define DT_N_S_soc_S_spi_60025000_COMPAT_MATCHES_espressif_esp32_spi 1
#define DT_N_S_soc_S_spi_60025000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_spi_60025000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_COMPAT_MODEL_IDX_0 "esp32-spi"
#define DT_N_S_soc_S_spi_60025000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_spi_60025000_PINCTRL_NUM 1
#define DT_N_S_soc_S_spi_60025000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_spi_60025000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_60025000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_spi_60025000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_spim3_default

/* Generic property macros: */
#define DT_N_S_soc_S_spi_60025000_P_wakeup_source 0
#define DT_N_S_soc_S_spi_60025000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_spi_60025000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_status "okay"
#define DT_N_S_soc_S_spi_60025000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_spi_60025000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_spi_60025000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_spi_60025000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_spi_60025000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, status, 0)
#define DT_N_S_soc_S_spi_60025000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, status, 0)
#define DT_N_S_soc_S_spi_60025000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_status_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_status_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_compatible {"espressif,esp32-spi"}
#define DT_N_S_soc_S_spi_60025000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_compatible_IDX_0 "espressif,esp32-spi"
#define DT_N_S_soc_S_spi_60025000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-spi
#define DT_N_S_soc_S_spi_60025000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_spi
#define DT_N_S_soc_S_spi_60025000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SPI
#define DT_N_S_soc_S_spi_60025000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, compatible, 0)
#define DT_N_S_soc_S_spi_60025000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, compatible, 0)
#define DT_N_S_soc_S_spi_60025000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_compatible_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_reg {1610764288 /* 0x60025000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_spi_60025000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_reg_IDX_0 1610764288
#define DT_N_S_soc_S_spi_60025000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_spi_60025000_P_reg_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupts {22 /* 0x16 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_0 22
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_spi_60025000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, interrupt_parent, 0)
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_spi_60025000_P_clocks_IDX_0_VAL_offset 22
#define DT_N_S_soc_S_spi_60025000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, clocks, 0)
#define DT_N_S_soc_S_spi_60025000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, clocks, 0)
#define DT_N_S_soc_S_spi_60025000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_clocks_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_spi_60025000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_spim3_default
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, pinctrl_0, 0)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_spi_60025000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_spi_60025000, pinctrl_names, 0)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_spi_60025000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_spi_60025000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_spi_60025000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_half_duplex 0
#define DT_N_S_soc_S_spi_60025000_P_half_duplex_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_dummy_comp 0
#define DT_N_S_soc_S_spi_60025000_P_dummy_comp_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_sio 0
#define DT_N_S_soc_S_spi_60025000_P_sio_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_dma_enabled 0
#define DT_N_S_soc_S_spi_60025000_P_dma_enabled_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_dma_clk 37
#define DT_N_S_soc_S_spi_60025000_P_dma_clk_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_dma_host 1
#define DT_N_S_soc_S_spi_60025000_P_dma_host_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_clk_as_cs 0
#define DT_N_S_soc_S_spi_60025000_P_clk_as_cs_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_positive_cs 0
#define DT_N_S_soc_S_spi_60025000_P_positive_cs_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_use_iomux 0
#define DT_N_S_soc_S_spi_60025000_P_use_iomux_EXISTS 1
#define DT_N_S_soc_S_spi_60025000_P_line_idle_low 0
#define DT_N_S_soc_S_spi_60025000_P_line_idle_low_EXISTS 1

/*
 * Devicetree node: /soc/touch@6000885c
 *
 * Node identifier: DT_N_S_soc_S_touch_6000885c
 *
 * Binding (compatible = espressif,esp32-touch):
 *   $ZEPHYR_BASE/dts/bindings/input/espressif,esp32-touch-sensor.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_touch_6000885c_PATH "/soc/touch@6000885c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_touch_6000885c_FULL_NAME "touch@6000885c"
#define DT_N_S_soc_S_touch_6000885c_FULL_NAME_UNQUOTED touch@6000885c
#define DT_N_S_soc_S_touch_6000885c_FULL_NAME_TOKEN touch_6000885c
#define DT_N_S_soc_S_touch_6000885c_FULL_NAME_UPPER_TOKEN TOUCH_6000885C

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_touch_6000885c_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_touch_6000885c_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_touch_6000885c_NODELABEL_NUM 1
#define DT_N_S_soc_S_touch_6000885c_FOREACH_NODELABEL(fn) fn(touch)
#define DT_N_S_soc_S_touch_6000885c_FOREACH_NODELABEL_VARGS(fn, ...) fn(touch, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_touch_6000885c_CHILD_NUM 0
#define DT_N_S_soc_S_touch_6000885c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_touch_6000885c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_touch_6000885c_ORD 80
#define DT_N_S_soc_S_touch_6000885c_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_touch_6000885c_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_touch_6000885c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_touch_6000885c_EXISTS 1
#define DT_N_INST_0_espressif_esp32_touch DT_N_S_soc_S_touch_6000885c
#define DT_N_NODELABEL_touch              DT_N_S_soc_S_touch_6000885c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_touch_6000885c_REG_NUM 2
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_0_VAL_ADDRESS 1610647644 /* 0x6000885c */
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_0_VAL_SIZE 136 /* 0x88 */
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_1_VAL_ADDRESS 1610647816 /* 0x60008908 */
#define DT_N_S_soc_S_touch_6000885c_REG_IDX_1_VAL_SIZE 24 /* 0x18 */
#define DT_N_S_soc_S_touch_6000885c_RANGES_NUM 0
#define DT_N_S_soc_S_touch_6000885c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_touch_6000885c_IRQ_NUM 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_touch_6000885c_IRQ_LEVEL 1
#define DT_N_S_soc_S_touch_6000885c_COMPAT_MATCHES_espressif_esp32_touch 1
#define DT_N_S_soc_S_touch_6000885c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_touch_6000885c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_COMPAT_MODEL_IDX_0 "esp32-touch"
#define DT_N_S_soc_S_touch_6000885c_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_touch_6000885c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_touch_6000885c_P_wakeup_source 0
#define DT_N_S_soc_S_touch_6000885c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_touch_6000885c_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_status "disabled"
#define DT_N_S_soc_S_touch_6000885c_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_touch_6000885c_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_touch_6000885c_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_touch_6000885c_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_touch_6000885c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_6000885c, status, 0)
#define DT_N_S_soc_S_touch_6000885c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_6000885c, status, 0)
#define DT_N_S_soc_S_touch_6000885c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_6000885c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_6000885c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_status_LEN 1
#define DT_N_S_soc_S_touch_6000885c_P_status_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_compatible {"espressif,esp32-touch"}
#define DT_N_S_soc_S_touch_6000885c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_compatible_IDX_0 "espressif,esp32-touch"
#define DT_N_S_soc_S_touch_6000885c_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-touch
#define DT_N_S_soc_S_touch_6000885c_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_touch
#define DT_N_S_soc_S_touch_6000885c_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TOUCH
#define DT_N_S_soc_S_touch_6000885c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_6000885c, compatible, 0)
#define DT_N_S_soc_S_touch_6000885c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_6000885c, compatible, 0)
#define DT_N_S_soc_S_touch_6000885c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_6000885c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_6000885c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_compatible_LEN 1
#define DT_N_S_soc_S_touch_6000885c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_reg {1610647644 /* 0x6000885c */, 136 /* 0x88 */, 1610647816 /* 0x60008908 */, 24 /* 0x18 */}
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_0 1610647644
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_1 136
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_2_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_2 1610647816
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_3_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_reg_IDX_3 24
#define DT_N_S_soc_S_touch_6000885c_P_reg_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_touch_6000885c_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_touch_6000885c, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_touch_6000885c, interrupt_parent, 0)
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_touch_6000885c, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_touch_6000885c, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_touch_6000885c_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_touch_6000885c_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_debounce_interval_ms 30
#define DT_N_S_soc_S_touch_6000885c_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_microvolt 2700000
#define DT_N_S_soc_S_touch_6000885c_P_href_microvolt_IDX_0_ENUM_IDX 3
#define DT_N_S_soc_S_touch_6000885c_P_href_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_microvolt_IDX_0_ENUM_VAL_2700000_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_lref_microvolt 500000
#define DT_N_S_soc_S_touch_6000885c_P_lref_microvolt_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_touch_6000885c_P_lref_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_lref_microvolt_IDX_0_ENUM_VAL_500000_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_lref_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_atten_microvolt 1000000
#define DT_N_S_soc_S_touch_6000885c_P_href_atten_microvolt_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_touch_6000885c_P_href_atten_microvolt_IDX_0_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_atten_microvolt_IDX_0_ENUM_VAL_1000000_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_href_atten_microvolt_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_mode 2
#define DT_N_S_soc_S_touch_6000885c_P_filter_mode_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_debounce_cnt 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_debounce_cnt_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_noise_thr 0
#define DT_N_S_soc_S_touch_6000885c_P_filter_noise_thr_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_jitter_step 4
#define DT_N_S_soc_S_touch_6000885c_P_filter_jitter_step_EXISTS 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_smooth_level 1
#define DT_N_S_soc_S_touch_6000885c_P_filter_smooth_level_EXISTS 1

/*
 * Devicetree node: /soc/trng@6003507c
 *
 * Node identifier: DT_N_S_soc_S_trng_6003507c
 *
 * Binding (compatible = espressif,esp32-trng):
 *   $ZEPHYR_BASE/dts/bindings/rng/espressif,esp32-trng.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_trng_6003507c_PATH "/soc/trng@6003507c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_trng_6003507c_FULL_NAME "trng@6003507c"
#define DT_N_S_soc_S_trng_6003507c_FULL_NAME_UNQUOTED trng@6003507c
#define DT_N_S_soc_S_trng_6003507c_FULL_NAME_TOKEN trng_6003507c
#define DT_N_S_soc_S_trng_6003507c_FULL_NAME_UPPER_TOKEN TRNG_6003507C

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_trng_6003507c_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_trng_6003507c_CHILD_IDX 34

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_trng_6003507c_NODELABEL_NUM 1
#define DT_N_S_soc_S_trng_6003507c_FOREACH_NODELABEL(fn) fn(trng0)
#define DT_N_S_soc_S_trng_6003507c_FOREACH_NODELABEL_VARGS(fn, ...) fn(trng0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_trng_6003507c_CHILD_NUM 0
#define DT_N_S_soc_S_trng_6003507c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_trng_6003507c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_trng_6003507c_ORD 81
#define DT_N_S_soc_S_trng_6003507c_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_trng_6003507c_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_trng_6003507c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_trng_6003507c_EXISTS 1
#define DT_N_INST_0_espressif_esp32_trng DT_N_S_soc_S_trng_6003507c
#define DT_N_NODELABEL_trng0             DT_N_S_soc_S_trng_6003507c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_trng_6003507c_REG_NUM 1
#define DT_N_S_soc_S_trng_6003507c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_REG_IDX_0_VAL_ADDRESS 1610829948 /* 0x6003507c */
#define DT_N_S_soc_S_trng_6003507c_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_trng_6003507c_RANGES_NUM 0
#define DT_N_S_soc_S_trng_6003507c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_trng_6003507c_IRQ_NUM 0
#define DT_N_S_soc_S_trng_6003507c_IRQ_LEVEL 0
#define DT_N_S_soc_S_trng_6003507c_COMPAT_MATCHES_espressif_esp32_trng 1
#define DT_N_S_soc_S_trng_6003507c_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_trng_6003507c_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_COMPAT_MODEL_IDX_0 "esp32-trng"
#define DT_N_S_soc_S_trng_6003507c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_trng_6003507c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_trng_6003507c_P_wakeup_source 0
#define DT_N_S_soc_S_trng_6003507c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_trng_6003507c_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_status "okay"
#define DT_N_S_soc_S_trng_6003507c_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_trng_6003507c_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_trng_6003507c_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_trng_6003507c_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_trng_6003507c_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_6003507c, status, 0)
#define DT_N_S_soc_S_trng_6003507c_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_6003507c, status, 0)
#define DT_N_S_soc_S_trng_6003507c_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_6003507c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_6003507c_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_6003507c, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_6003507c_P_status_LEN 1
#define DT_N_S_soc_S_trng_6003507c_P_status_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_compatible {"espressif,esp32-trng"}
#define DT_N_S_soc_S_trng_6003507c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_compatible_IDX_0 "espressif,esp32-trng"
#define DT_N_S_soc_S_trng_6003507c_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-trng
#define DT_N_S_soc_S_trng_6003507c_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_trng
#define DT_N_S_soc_S_trng_6003507c_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_TRNG
#define DT_N_S_soc_S_trng_6003507c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_trng_6003507c, compatible, 0)
#define DT_N_S_soc_S_trng_6003507c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_trng_6003507c, compatible, 0)
#define DT_N_S_soc_S_trng_6003507c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_trng_6003507c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_6003507c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_trng_6003507c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_trng_6003507c_P_compatible_LEN 1
#define DT_N_S_soc_S_trng_6003507c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_reg {1610829948 /* 0x6003507c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_trng_6003507c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_reg_IDX_0 1610829948
#define DT_N_S_soc_S_trng_6003507c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_reg_IDX_1 4
#define DT_N_S_soc_S_trng_6003507c_P_reg_EXISTS 1
#define DT_N_S_soc_S_trng_6003507c_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_trng_6003507c_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/uart@60000000
 *
 * Node identifier: DT_N_S_soc_S_uart_60000000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_60000000_PATH "/soc/uart@60000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_60000000_FULL_NAME "uart@60000000"
#define DT_N_S_soc_S_uart_60000000_FULL_NAME_UNQUOTED uart@60000000
#define DT_N_S_soc_S_uart_60000000_FULL_NAME_TOKEN uart_60000000
#define DT_N_S_soc_S_uart_60000000_FULL_NAME_UPPER_TOKEN UART_60000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_60000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_60000000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_60000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_60000000_FOREACH_NODELABEL(fn) fn(uart0)
#define DT_N_S_soc_S_uart_60000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_60000000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_60000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_60000000_ORD 82
#define DT_N_S_soc_S_uart_60000000_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_60000000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */ \
	52, /* /pin-controller/uart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_60000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_60000000_EXISTS 1
#define DT_N_ALIAS_uart_0                DT_N_S_soc_S_uart_60000000
#define DT_N_INST_0_espressif_esp32_uart DT_N_S_soc_S_uart_60000000
#define DT_N_NODELABEL_uart0             DT_N_S_soc_S_uart_60000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_60000000_REG_NUM 1
#define DT_N_S_soc_S_uart_60000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_REG_IDX_0_VAL_ADDRESS 1610612736 /* 0x60000000 */
#define DT_N_S_soc_S_uart_60000000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_60000000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_60000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_60000000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_60000000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_60000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_60000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_60000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_60000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_uart_60000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_uart_60000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_60000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_uart_60000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_pin_controller_S_uart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_uart_60000000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_60000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_60000000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_status "okay"
#define DT_N_S_soc_S_uart_60000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_uart_60000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_uart_60000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_uart_60000000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_uart_60000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, status, 0)
#define DT_N_S_soc_S_uart_60000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, status, 0)
#define DT_N_S_soc_S_uart_60000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_status_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_60000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_60000000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_60000000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_60000000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_60000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, compatible, 0)
#define DT_N_S_soc_S_uart_60000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, compatible, 0)
#define DT_N_S_soc_S_uart_60000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_reg {1610612736 /* 0x60000000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_60000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_reg_IDX_0 1610612736
#define DT_N_S_soc_S_uart_60000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_60000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupts {27 /* 0x1b */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_60000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_uart_60000000_P_clocks_IDX_0_VAL_offset 1
#define DT_N_S_soc_S_uart_60000000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, clocks, 0)
#define DT_N_S_soc_S_uart_60000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, clocks, 0)
#define DT_N_S_soc_S_uart_60000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_60000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_current_speed 115200
#define DT_N_S_soc_S_uart_60000000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_60000000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_tx_invert 0
#define DT_N_S_soc_S_uart_60000000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_rx_invert 0
#define DT_N_S_soc_S_uart_60000000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_IDX_0 DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_IDX_0_PH DT_N_S_pin_controller_S_uart0_default
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, pinctrl_0, 0)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60000000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60000000, pinctrl_names, 0)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_uart_60000000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_uart_60000000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_60000000_P_hw_rs485_hd_mode_EXISTS 1

/*
 * Devicetree node: /soc/uart@60010000
 *
 * Node identifier: DT_N_S_soc_S_uart_60010000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_60010000_PATH "/soc/uart@60010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_60010000_FULL_NAME "uart@60010000"
#define DT_N_S_soc_S_uart_60010000_FULL_NAME_UNQUOTED uart@60010000
#define DT_N_S_soc_S_uart_60010000_FULL_NAME_TOKEN uart_60010000
#define DT_N_S_soc_S_uart_60010000_FULL_NAME_UPPER_TOKEN UART_60010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_60010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_60010000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_60010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_60010000_FOREACH_NODELABEL(fn) fn(uart1)
#define DT_N_S_soc_S_uart_60010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_60010000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_60010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_60010000_ORD 83
#define DT_N_S_soc_S_uart_60010000_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_60010000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_60010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_60010000_EXISTS 1
#define DT_N_INST_1_espressif_esp32_uart DT_N_S_soc_S_uart_60010000
#define DT_N_NODELABEL_uart1             DT_N_S_soc_S_uart_60010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_60010000_REG_NUM 1
#define DT_N_S_soc_S_uart_60010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_REG_IDX_0_VAL_ADDRESS 1610678272 /* 0x60010000 */
#define DT_N_S_soc_S_uart_60010000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_60010000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_60010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_60010000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_irq 28
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_60010000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_60010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_60010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_60010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_60010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_60010000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_60010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_60010000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_status "disabled"
#define DT_N_S_soc_S_uart_60010000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_60010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_60010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_60010000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_60010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60010000, status, 0)
#define DT_N_S_soc_S_uart_60010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60010000, status, 0)
#define DT_N_S_soc_S_uart_60010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_status_LEN 1
#define DT_N_S_soc_S_uart_60010000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_60010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_60010000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_60010000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_60010000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_60010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60010000, compatible, 0)
#define DT_N_S_soc_S_uart_60010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60010000, compatible, 0)
#define DT_N_S_soc_S_uart_60010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_60010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_reg {1610678272 /* 0x60010000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_60010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_reg_IDX_0 1610678272
#define DT_N_S_soc_S_uart_60010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_60010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupts {28 /* 0x1c */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_0 28
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_60010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60010000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60010000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60010000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60010000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_60010000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_uart_60010000_P_clocks_IDX_0_VAL_offset 2
#define DT_N_S_soc_S_uart_60010000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60010000, clocks, 0)
#define DT_N_S_soc_S_uart_60010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60010000, clocks, 0)
#define DT_N_S_soc_S_uart_60010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60010000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_60010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_60010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_60010000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_tx_invert 0
#define DT_N_S_soc_S_uart_60010000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_rx_invert 0
#define DT_N_S_soc_S_uart_60010000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_60010000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_60010000_P_hw_rs485_hd_mode_EXISTS 1

/*
 * Devicetree node: /soc/uart@6002e000
 *
 * Node identifier: DT_N_S_soc_S_uart_6002e000
 *
 * Binding (compatible = espressif,esp32-uart):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-uart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_6002e000_PATH "/soc/uart@6002e000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_6002e000_FULL_NAME "uart@6002e000"
#define DT_N_S_soc_S_uart_6002e000_FULL_NAME_UNQUOTED uart@6002e000
#define DT_N_S_soc_S_uart_6002e000_FULL_NAME_TOKEN uart_6002e000
#define DT_N_S_soc_S_uart_6002e000_FULL_NAME_UPPER_TOKEN UART_6002E000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_6002e000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_6002e000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_6002e000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_6002e000_FOREACH_NODELABEL(fn) fn(uart2)
#define DT_N_S_soc_S_uart_6002e000_FOREACH_NODELABEL_VARGS(fn, ...) fn(uart2, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_6002e000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_6002e000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_6002e000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_6002e000_ORD 84
#define DT_N_S_soc_S_uart_6002e000_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_6002e000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_6002e000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_6002e000_EXISTS 1
#define DT_N_INST_2_espressif_esp32_uart DT_N_S_soc_S_uart_6002e000
#define DT_N_NODELABEL_uart2             DT_N_S_soc_S_uart_6002e000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_6002e000_REG_NUM 1
#define DT_N_S_soc_S_uart_6002e000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_REG_IDX_0_VAL_ADDRESS 1610801152 /* 0x6002e000 */
#define DT_N_S_soc_S_uart_6002e000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_6002e000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_6002e000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_6002e000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_irq 29
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_6002e000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_6002e000_COMPAT_MATCHES_espressif_esp32_uart 1
#define DT_N_S_soc_S_uart_6002e000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_6002e000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_COMPAT_MODEL_IDX_0 "esp32-uart"
#define DT_N_S_soc_S_uart_6002e000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_6002e000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_6002e000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_6002e000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_6002e000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_status "disabled"
#define DT_N_S_soc_S_uart_6002e000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_6002e000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_6002e000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_6002e000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_6002e000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_6002e000, status, 0)
#define DT_N_S_soc_S_uart_6002e000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_6002e000, status, 0)
#define DT_N_S_soc_S_uart_6002e000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_6002e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_6002e000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_status_LEN 1
#define DT_N_S_soc_S_uart_6002e000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_compatible {"espressif,esp32-uart"}
#define DT_N_S_soc_S_uart_6002e000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_compatible_IDX_0 "espressif,esp32-uart"
#define DT_N_S_soc_S_uart_6002e000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-uart
#define DT_N_S_soc_S_uart_6002e000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_uart
#define DT_N_S_soc_S_uart_6002e000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_UART
#define DT_N_S_soc_S_uart_6002e000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_6002e000, compatible, 0)
#define DT_N_S_soc_S_uart_6002e000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_6002e000, compatible, 0)
#define DT_N_S_soc_S_uart_6002e000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_6002e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_6002e000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_6002e000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_reg {1610801152 /* 0x6002e000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_6002e000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_reg_IDX_0 1610801152
#define DT_N_S_soc_S_uart_6002e000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_6002e000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupts {29 /* 0x1d */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_0 29
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_6002e000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_6002e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_6002e000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_6002e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_6002e000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_6002e000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_uart_6002e000_P_clocks_IDX_0_VAL_offset 3
#define DT_N_S_soc_S_uart_6002e000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_6002e000, clocks, 0)
#define DT_N_S_soc_S_uart_6002e000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_6002e000, clocks, 0)
#define DT_N_S_soc_S_uart_6002e000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_6002e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_6002e000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_6002e000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_6002e000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_6002e000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_6002e000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_tx_invert 0
#define DT_N_S_soc_S_uart_6002e000_P_tx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_rx_invert 0
#define DT_N_S_soc_S_uart_6002e000_P_rx_invert_EXISTS 1
#define DT_N_S_soc_S_uart_6002e000_P_hw_rs485_hd_mode 0
#define DT_N_S_soc_S_uart_6002e000_P_hw_rs485_hd_mode_EXISTS 1

/*
 * Devicetree node: /soc/uart@60038000
 *
 * Node identifier: DT_N_S_soc_S_uart_60038000
 *
 * Binding (compatible = espressif,esp32-usb-serial):
 *   $ZEPHYR_BASE/dts/bindings/serial/espressif,esp32-usb-serial.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_uart_60038000_PATH "/soc/uart@60038000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_uart_60038000_FULL_NAME "uart@60038000"
#define DT_N_S_soc_S_uart_60038000_FULL_NAME_UNQUOTED uart@60038000
#define DT_N_S_soc_S_uart_60038000_FULL_NAME_TOKEN uart_60038000
#define DT_N_S_soc_S_uart_60038000_FULL_NAME_UPPER_TOKEN UART_60038000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_uart_60038000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_uart_60038000_CHILD_IDX 27

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_uart_60038000_NODELABEL_NUM 1
#define DT_N_S_soc_S_uart_60038000_FOREACH_NODELABEL(fn) fn(usb_serial)
#define DT_N_S_soc_S_uart_60038000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usb_serial, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_uart_60038000_CHILD_NUM 0
#define DT_N_S_soc_S_uart_60038000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_uart_60038000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_uart_60038000_ORD 85
#define DT_N_S_soc_S_uart_60038000_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_uart_60038000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_uart_60038000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_uart_60038000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_usb_serial DT_N_S_soc_S_uart_60038000
#define DT_N_NODELABEL_usb_serial              DT_N_S_soc_S_uart_60038000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_uart_60038000_REG_NUM 1
#define DT_N_S_soc_S_uart_60038000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_REG_IDX_0_VAL_ADDRESS 1610842112 /* 0x60038000 */
#define DT_N_S_soc_S_uart_60038000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_uart_60038000_RANGES_NUM 0
#define DT_N_S_soc_S_uart_60038000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_uart_60038000_IRQ_NUM 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_irq 96
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60038000_IRQ_LEVEL 1
#define DT_N_S_soc_S_uart_60038000_COMPAT_MATCHES_espressif_esp32_usb_serial 1
#define DT_N_S_soc_S_uart_60038000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_uart_60038000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_COMPAT_MODEL_IDX_0 "esp32-usb-serial"
#define DT_N_S_soc_S_uart_60038000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_uart_60038000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_uart_60038000_P_wakeup_source 0
#define DT_N_S_soc_S_uart_60038000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_uart_60038000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_status "disabled"
#define DT_N_S_soc_S_uart_60038000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_uart_60038000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_uart_60038000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_uart_60038000_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_uart_60038000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60038000, status, 0)
#define DT_N_S_soc_S_uart_60038000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60038000, status, 0)
#define DT_N_S_soc_S_uart_60038000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60038000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_status_LEN 1
#define DT_N_S_soc_S_uart_60038000_P_status_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_compatible {"espressif,esp32-usb-serial"}
#define DT_N_S_soc_S_uart_60038000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_compatible_IDX_0 "espressif,esp32-usb-serial"
#define DT_N_S_soc_S_uart_60038000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-usb-serial
#define DT_N_S_soc_S_uart_60038000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_usb_serial
#define DT_N_S_soc_S_uart_60038000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_USB_SERIAL
#define DT_N_S_soc_S_uart_60038000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60038000, compatible, 0)
#define DT_N_S_soc_S_uart_60038000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60038000, compatible, 0)
#define DT_N_S_soc_S_uart_60038000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60038000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_compatible_LEN 1
#define DT_N_S_soc_S_uart_60038000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_reg {1610842112 /* 0x60038000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_uart_60038000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_reg_IDX_0 1610842112
#define DT_N_S_soc_S_uart_60038000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_uart_60038000_P_reg_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupts {96 /* 0x60 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_0 96
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_uart_60038000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60038000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60038000, interrupt_parent, 0)
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60038000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60038000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_uart_60038000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_uart_60038000_P_clocks_IDX_0_VAL_offset 4
#define DT_N_S_soc_S_uart_60038000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_uart_60038000, clocks, 0)
#define DT_N_S_soc_S_uart_60038000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_uart_60038000, clocks, 0)
#define DT_N_S_soc_S_uart_60038000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_uart_60038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_uart_60038000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_uart_60038000_P_clocks_LEN 1
#define DT_N_S_soc_S_uart_60038000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_uart_60038000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_uart_60038000_P_hw_flow_control 0
#define DT_N_S_soc_S_uart_60038000_P_hw_flow_control_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@6001f048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_6001f048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_6001f048_PATH "/soc/watchdog@6001f048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_6001f048_FULL_NAME "watchdog@6001f048"
#define DT_N_S_soc_S_watchdog_6001f048_FULL_NAME_UNQUOTED watchdog@6001f048
#define DT_N_S_soc_S_watchdog_6001f048_FULL_NAME_TOKEN watchdog_6001f048
#define DT_N_S_soc_S_watchdog_6001f048_FULL_NAME_UPPER_TOKEN WATCHDOG_6001F048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_6001f048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_6001f048_CHILD_IDX 32

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_6001f048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_NODELABEL(fn) fn(wdt0)
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_6001f048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_6001f048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_6001f048_ORD 86
#define DT_N_S_soc_S_watchdog_6001f048_ORD_STR_SORTABLE 00086

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_6001f048_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_6001f048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_6001f048_EXISTS 1
#define DT_N_ALIAS_watchdog0                 DT_N_S_soc_S_watchdog_6001f048
#define DT_N_INST_0_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_6001f048
#define DT_N_NODELABEL_wdt0                  DT_N_S_soc_S_watchdog_6001f048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_6001f048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_6001f048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_REG_IDX_0_VAL_ADDRESS 1610739784 /* 0x6001f048 */
#define DT_N_S_soc_S_watchdog_6001f048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_6001f048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_6001f048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_irq 52
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_6001f048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_6001f048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_6001f048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_6001f048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_6001f048_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_6001f048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_6001f048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_6001f048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_6001f048_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_status "okay"
#define DT_N_S_soc_S_watchdog_6001f048_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_watchdog_6001f048_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_watchdog_6001f048_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_watchdog_6001f048_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_watchdog_6001f048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_6001f048, status, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_6001f048, status, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_6001f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_6001f048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_6001f048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_6001f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_6001f048, compatible, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_6001f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_6001f048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_6001f048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_reg {1610739784 /* 0x6001f048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_6001f048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_reg_IDX_0 1610739784
#define DT_N_S_soc_S_watchdog_6001f048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_6001f048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts {52 /* 0x34 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_0 52
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_6001f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_6001f048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_6001f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_6001f048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_6001f048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_IDX_0_VAL_offset 10
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_6001f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_6001f048, clocks, 0)
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_6001f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_6001f048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_6001f048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_6001f048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_6001f048_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/watchdog@60020048
 *
 * Node identifier: DT_N_S_soc_S_watchdog_60020048
 *
 * Binding (compatible = espressif,esp32-watchdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-watchdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_watchdog_60020048_PATH "/soc/watchdog@60020048"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_watchdog_60020048_FULL_NAME "watchdog@60020048"
#define DT_N_S_soc_S_watchdog_60020048_FULL_NAME_UNQUOTED watchdog@60020048
#define DT_N_S_soc_S_watchdog_60020048_FULL_NAME_TOKEN watchdog_60020048
#define DT_N_S_soc_S_watchdog_60020048_FULL_NAME_UPPER_TOKEN WATCHDOG_60020048

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_watchdog_60020048_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_watchdog_60020048_CHILD_IDX 33

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_watchdog_60020048_NODELABEL_NUM 1
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_NODELABEL(fn) fn(wdt1)
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdt1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_watchdog_60020048_CHILD_NUM 0
#define DT_N_S_soc_S_watchdog_60020048_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_watchdog_60020048_ORD 87
#define DT_N_S_soc_S_watchdog_60020048_ORD_STR_SORTABLE 00087

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_watchdog_60020048_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_watchdog_60020048_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_watchdog_60020048_EXISTS 1
#define DT_N_INST_1_espressif_esp32_watchdog DT_N_S_soc_S_watchdog_60020048
#define DT_N_NODELABEL_wdt1                  DT_N_S_soc_S_watchdog_60020048

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_watchdog_60020048_REG_NUM 1
#define DT_N_S_soc_S_watchdog_60020048_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_REG_IDX_0_VAL_ADDRESS 1610743880 /* 0x60020048 */
#define DT_N_S_soc_S_watchdog_60020048_REG_IDX_0_VAL_SIZE 32 /* 0x20 */
#define DT_N_S_soc_S_watchdog_60020048_RANGES_NUM 0
#define DT_N_S_soc_S_watchdog_60020048_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_watchdog_60020048_IRQ_NUM 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_irq 55
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_60020048_IRQ_LEVEL 1
#define DT_N_S_soc_S_watchdog_60020048_COMPAT_MATCHES_espressif_esp32_watchdog 1
#define DT_N_S_soc_S_watchdog_60020048_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_watchdog_60020048_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_COMPAT_MODEL_IDX_0 "esp32-watchdog"
#define DT_N_S_soc_S_watchdog_60020048_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_watchdog_60020048_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_watchdog_60020048_P_wakeup_source 0
#define DT_N_S_soc_S_watchdog_60020048_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_watchdog_60020048_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_status "disabled"
#define DT_N_S_soc_S_watchdog_60020048_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_watchdog_60020048_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_watchdog_60020048_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_watchdog_60020048_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_watchdog_60020048_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_60020048, status, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_60020048, status, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_60020048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_60020048, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_status_LEN 1
#define DT_N_S_soc_S_watchdog_60020048_P_status_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_compatible {"espressif,esp32-watchdog"}
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_IDX_0 "espressif,esp32-watchdog"
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-watchdog
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_watchdog
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_WATCHDOG
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_60020048, compatible, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_60020048, compatible, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_60020048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_60020048, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_LEN 1
#define DT_N_S_soc_S_watchdog_60020048_P_compatible_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_reg {1610743880 /* 0x60020048 */, 32 /* 0x20 */}
#define DT_N_S_soc_S_watchdog_60020048_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_reg_IDX_0 1610743880
#define DT_N_S_soc_S_watchdog_60020048_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_reg_IDX_1 32
#define DT_N_S_soc_S_watchdog_60020048_P_reg_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts {55 /* 0x37 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_0 55
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_watchdog_60020048_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_60020048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_60020048, interrupt_parent, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_60020048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_60020048, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_watchdog_60020048_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_IDX_0_VAL_offset 11
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_watchdog_60020048, clocks, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_watchdog_60020048, clocks, 0)
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_watchdog_60020048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_watchdog_60020048, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_LEN 1
#define DT_N_S_soc_S_watchdog_60020048_P_clocks_EXISTS 1
#define DT_N_S_soc_S_watchdog_60020048_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_watchdog_60020048_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/xt_wdt@60021004
 *
 * Node identifier: DT_N_S_soc_S_xt_wdt_60021004
 *
 * Binding (compatible = espressif,esp32-xt-wdt):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/espressif,esp32-xt-wdt.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_xt_wdt_60021004_PATH "/soc/xt_wdt@60021004"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_xt_wdt_60021004_FULL_NAME "xt_wdt@60021004"
#define DT_N_S_soc_S_xt_wdt_60021004_FULL_NAME_UNQUOTED xt_wdt@60021004
#define DT_N_S_soc_S_xt_wdt_60021004_FULL_NAME_TOKEN xt_wdt_60021004
#define DT_N_S_soc_S_xt_wdt_60021004_FULL_NAME_UPPER_TOKEN XT_WDT_60021004

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_xt_wdt_60021004_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_xt_wdt_60021004_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_xt_wdt_60021004_NODELABEL_NUM 1
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_NODELABEL(fn) fn(xt_wdt)
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_NODELABEL_VARGS(fn, ...) fn(xt_wdt, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_xt_wdt_60021004_CHILD_NUM 0
#define DT_N_S_soc_S_xt_wdt_60021004_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_xt_wdt_60021004_ORD 88
#define DT_N_S_soc_S_xt_wdt_60021004_ORD_STR_SORTABLE 00088

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_xt_wdt_60021004_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_xt_wdt_60021004_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_xt_wdt_60021004_EXISTS 1
#define DT_N_INST_0_espressif_esp32_xt_wdt DT_N_S_soc_S_xt_wdt_60021004
#define DT_N_NODELABEL_xt_wdt              DT_N_S_soc_S_xt_wdt_60021004

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_xt_wdt_60021004_REG_NUM 1
#define DT_N_S_soc_S_xt_wdt_60021004_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_REG_IDX_0_VAL_ADDRESS 1610747908 /* 0x60021004 */
#define DT_N_S_soc_S_xt_wdt_60021004_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_xt_wdt_60021004_RANGES_NUM 0
#define DT_N_S_soc_S_xt_wdt_60021004_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_NUM 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_irq 39
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_xt_wdt_60021004_IRQ_LEVEL 1
#define DT_N_S_soc_S_xt_wdt_60021004_COMPAT_MATCHES_espressif_esp32_xt_wdt 1
#define DT_N_S_soc_S_xt_wdt_60021004_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_xt_wdt_60021004_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_COMPAT_MODEL_IDX_0 "esp32-xt-wdt"
#define DT_N_S_soc_S_xt_wdt_60021004_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_xt_wdt_60021004_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_xt_wdt_60021004_P_wakeup_source 0
#define DT_N_S_soc_S_xt_wdt_60021004_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_xt_wdt_60021004_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_status "disabled"
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xt_wdt_60021004, status, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xt_wdt_60021004, status, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_LEN 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_status_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible {"espressif,esp32-xt-wdt"}
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_IDX_0 "espressif,esp32-xt-wdt"
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-xt-wdt
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_xt_wdt
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_XT_WDT
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xt_wdt_60021004, compatible, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xt_wdt_60021004, compatible, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_LEN 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_compatible_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg {1610747908 /* 0x60021004 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg_IDX_0 1610747908
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg_IDX_1 4
#define DT_N_S_soc_S_xt_wdt_60021004_P_reg_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts {39 /* 0x27 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_0 39
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xt_wdt_60021004, interrupt_parent, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xt_wdt_60021004, interrupt_parent, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_IDX_0_VAL_offset 40
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_xt_wdt_60021004, clocks, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_xt_wdt_60021004, clocks, 0)
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_xt_wdt_60021004, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_LEN 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_clocks_EXISTS 1
#define DT_N_S_soc_S_xt_wdt_60021004_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_xt_wdt_60021004_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/adc@60040000
 *
 * Node identifier: DT_N_S_soc_S_adc_60040000
 *
 * Binding (compatible = espressif,esp32-adc):
 *   $ZEPHYR_BASE/dts/bindings/adc/espressif,esp32-adc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_60040000_PATH "/soc/adc@60040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_60040000_FULL_NAME "adc@60040000"
#define DT_N_S_soc_S_adc_60040000_FULL_NAME_UNQUOTED adc@60040000
#define DT_N_S_soc_S_adc_60040000_FULL_NAME_TOKEN adc_60040000
#define DT_N_S_soc_S_adc_60040000_FULL_NAME_UPPER_TOKEN ADC_60040000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_60040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_60040000_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_60040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_60040000_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_60040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_60040000_CHILD_NUM 1
#define DT_N_S_soc_S_adc_60040000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_adc_60040000_S_channel_0)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000_S_channel_0)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_adc_60040000_S_channel_0)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000_S_channel_0)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_60040000_ORD 89
#define DT_N_S_soc_S_adc_60040000_ORD_STR_SORTABLE 00089

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_60040000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_60040000_SUPPORTS_ORDS \
	90, /* /soc/adc@60040000/channel@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_60040000_EXISTS 1
#define DT_N_ALIAS_my_adc               DT_N_S_soc_S_adc_60040000
#define DT_N_INST_0_espressif_esp32_adc DT_N_S_soc_S_adc_60040000
#define DT_N_NODELABEL_adc0             DT_N_S_soc_S_adc_60040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_60040000_REG_NUM 1
#define DT_N_S_soc_S_adc_60040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_REG_IDX_0_VAL_ADDRESS 1610874880 /* 0x60040000 */
#define DT_N_S_soc_S_adc_60040000_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_adc_60040000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_60040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_60040000_IRQ_NUM 0
#define DT_N_S_soc_S_adc_60040000_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_60040000_COMPAT_MATCHES_espressif_esp32_adc 1
#define DT_N_S_soc_S_adc_60040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_adc_60040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_COMPAT_MODEL_IDX_0 "esp32-adc"
#define DT_N_S_soc_S_adc_60040000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_60040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_60040000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_60040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_60040000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_status "okay"
#define DT_N_S_soc_S_adc_60040000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_adc_60040000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_adc_60040000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_adc_60040000_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_adc_60040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040000, status, 0)
#define DT_N_S_soc_S_adc_60040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000, status, 0)
#define DT_N_S_soc_S_adc_60040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_P_status_LEN 1
#define DT_N_S_soc_S_adc_60040000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_compatible {"espressif,esp32-adc"}
#define DT_N_S_soc_S_adc_60040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_compatible_IDX_0 "espressif,esp32-adc"
#define DT_N_S_soc_S_adc_60040000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-adc
#define DT_N_S_soc_S_adc_60040000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_adc
#define DT_N_S_soc_S_adc_60040000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_ADC
#define DT_N_S_soc_S_adc_60040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040000, compatible, 0)
#define DT_N_S_soc_S_adc_60040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000, compatible, 0)
#define DT_N_S_soc_S_adc_60040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_60040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_reg {1610874880 /* 0x60040000 */, 4 /* 0x4 */}
#define DT_N_S_soc_S_adc_60040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_reg_IDX_0 1610874880
#define DT_N_S_soc_S_adc_60040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_reg_IDX_1 4
#define DT_N_S_soc_S_adc_60040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_60040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_unit 1
#define DT_N_S_soc_S_adc_60040000_P_unit_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_P_channel_count 10
#define DT_N_S_soc_S_adc_60040000_P_channel_count_EXISTS 1

/*
 * Devicetree node: /soc/adc@60040000/channel@0
 *
 * Node identifier: DT_N_S_soc_S_adc_60040000_S_channel_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_PATH "/soc/adc@60040000/channel@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FULL_NAME "channel@0"
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FULL_NAME_UNQUOTED channel@0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FULL_NAME_TOKEN channel_0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FULL_NAME_UPPER_TOKEN CHANNEL_0

/* Node parent (/soc/adc@60040000) identifier: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_PARENT DT_N_S_soc_S_adc_60040000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_NODELABEL(fn) fn(adc0_ch0)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0_ch0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_CHILD_NUM 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_ORD 90
#define DT_N_S_soc_S_adc_60040000_S_channel_0_ORD_STR_SORTABLE 00090

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_REQUIRES_ORDS \
	89, /* /soc/adc@60040000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_EXISTS 1
#define DT_N_ALIAS_my_adc_channel DT_N_S_soc_S_adc_60040000_S_channel_0
#define DT_N_NODELABEL_adc0_ch0   DT_N_S_soc_S_adc_60040000_S_channel_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_REG_NUM 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_RANGES_NUM 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_60040000_S_channel_0_IRQ_NUM 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain "ADC_GAIN_1_4"
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_STRING_UNQUOTED ADC_GAIN_1_4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_STRING_TOKEN ADC_GAIN_1_4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_STRING_UPPER_TOKEN ADC_GAIN_1_4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0 "ADC_GAIN_1_4"
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0_ENUM_VAL_ADC_GAIN_1_4_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0_ENUM_TOKEN ADC_GAIN_1_4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_IDX_0_ENUM_UPPER_TOKEN ADC_GAIN_1_4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_gain, 0)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_gain, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_LEN 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_gain_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_STRING_UNQUOTED ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_STRING_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_STRING_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0 "ADC_REF_INTERNAL"
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0_ENUM_VAL_ADC_REF_INTERNAL_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0_ENUM_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_IDX_0_ENUM_UPPER_TOKEN ADC_REF_INTERNAL
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_reference, 0)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, zephyr_reference, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_LEN 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_reference_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_vref_mv 3900
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_vref_mv_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_acquisition_time 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_acquisition_time_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_differential 0
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_differential_EXISTS 1
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_resolution 12
#define DT_N_S_soc_S_adc_60040000_S_channel_0_P_zephyr_resolution_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000
 *
 * Binding (compatible = espressif,esp32-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/espressif,esp32-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_PATH "/soc/flash-controller@60002000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_FULL_NAME "flash-controller@60002000"
#define DT_N_S_soc_S_flash_controller_60002000_FULL_NAME_UNQUOTED flash-controller@60002000
#define DT_N_S_soc_S_flash_controller_60002000_FULL_NAME_TOKEN flash_controller_60002000
#define DT_N_S_soc_S_flash_controller_60002000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_60002000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_NODELABEL(fn) fn(flash)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_ORD 91
#define DT_N_S_soc_S_flash_controller_60002000_ORD_STR_SORTABLE 00091

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_REQUIRES_ORDS \
	5, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_SUPPORTS_ORDS \
	92, /* /soc/flash-controller@60002000/flash@0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_flash_controller DT_N_S_soc_S_flash_controller_60002000
#define DT_N_NODELABEL_flash                         DT_N_S_soc_S_flash_controller_60002000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_REG_IDX_0_VAL_ADDRESS 1610620928 /* 0x60002000 */
#define DT_N_S_soc_S_flash_controller_60002000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_60002000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_COMPAT_MATCHES_espressif_esp32_flash_controller 1
#define DT_N_S_soc_S_flash_controller_60002000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_flash_controller_60002000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_COMPAT_MODEL_IDX_0 "esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_60002000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_60002000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_60002000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible {"espressif,esp32-flash-controller"}
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_IDX_0 "espressif,esp32-flash-controller"
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-flash-controller
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_flash_controller
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_reg {1610620928 /* 0x60002000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_60002000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_reg_IDX_0 1610620928
#define DT_N_S_soc_S_flash_controller_60002000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_60002000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_60002000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_PATH "/soc/flash-controller@60002000/flash@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FULL_NAME "flash@0"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FULL_NAME_UNQUOTED flash@0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FULL_NAME_TOKEN flash_0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FULL_NAME_UPPER_TOKEN FLASH_0

/* Node parent (/soc/flash-controller@60002000) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_PARENT DT_N_S_soc_S_flash_controller_60002000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_ORD 92
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_ORD_STR_SORTABLE 00092

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_REQUIRES_ORDS \
	91, /* /soc/flash-controller@60002000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_SUPPORTS_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_60002000_S_flash_0
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_60002000_S_flash_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_REG_IDX_0_VAL_SIZE 8388608 /* 0x800000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, compatible, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg {0 /* 0x0 */, 8388608 /* 0x800000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg_IDX_1 8388608
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_erase_block_size 4096
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_P_write_block_size_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_PATH "/soc/flash-controller@60002000/flash@0/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@60002000/flash@0) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_CHILD_NUM 8
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_CHILD_NUM_STATUS_OKAY 8
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_ORD 93
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_ORD_STR_SORTABLE 00093

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_REQUIRES_ORDS \
	92, /* /soc/flash-controller@60002000/flash@0 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_SUPPORTS_ORDS \
	94, /* /soc/flash-controller@60002000/flash@0/partitions/partition@0 */ \
	95, /* /soc/flash-controller@60002000/flash@0/partitions/partition@20000 */ \
	96, /* /soc/flash-controller@60002000/flash@0/partitions/partition@170000 */ \
	97, /* /soc/flash-controller@60002000/flash@0/partitions/partition@1F0000 */ \
	98, /* /soc/flash-controller@60002000/flash@0/partitions/partition@340000 */ \
	99, /* /soc/flash-controller@60002000/flash@0/partitions/partition@3C0000 */ \
	100, /* /soc/flash-controller@60002000/flash@0/partitions/partition@3E0000 */ \
	101, /* /soc/flash-controller@60002000/flash@0/partitions/partition@3F0000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_ORD 94
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_ORD_STR_SORTABLE 00094

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@20000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@20000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME "partition@20000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UNQUOTED partition@20000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_TOKEN partition_20000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FULL_NAME_UPPER_TOKEN PARTITION_20000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_ORD 95
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_ORD_STR_SORTABLE 00095

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_ADDRESS 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg {131072 /* 0x20000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_0 131072
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@170000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@170000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME "partition@170000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UNQUOTED partition@170000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_TOKEN partition_170000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FULL_NAME_UPPER_TOKEN PARTITION_170000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL(fn) fn(slot0_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_appcpu_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_ORD 96
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_ORD_STR_SORTABLE 00096

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_EXISTS 1
#define DT_N_NODELABEL_slot0_appcpu_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_ADDRESS 1507328 /* 0x170000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UNQUOTED image-0-appcpu
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_TOKEN image_0_appcpu
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_STRING_UPPER_TOKEN IMAGE_0_APPCPU
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0 "image-0-appcpu"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg {1507328 /* 0x170000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_0 1507328
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@1F0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@1F0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FULL_NAME "partition@1F0000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FULL_NAME_UNQUOTED partition@1F0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FULL_NAME_TOKEN partition_1F0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FULL_NAME_UPPER_TOKEN PARTITION_1F0000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_ORD 97
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_ORD_STR_SORTABLE 00097

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_REG_IDX_0_VAL_ADDRESS 2031616 /* 0x1f0000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_REG_IDX_0_VAL_SIZE 1376256 /* 0x150000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg {2031616 /* 0x1f0000 */, 1376256 /* 0x150000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg_IDX_0 2031616
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg_IDX_1 1376256
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@340000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@340000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FULL_NAME "partition@340000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FULL_NAME_UNQUOTED partition@340000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FULL_NAME_TOKEN partition_340000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FULL_NAME_UPPER_TOKEN PARTITION_340000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_NODELABEL(fn) fn(slot1_appcpu_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_appcpu_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_ORD 98
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_ORD_STR_SORTABLE 00098

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_EXISTS 1
#define DT_N_NODELABEL_slot1_appcpu_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_REG_IDX_0_VAL_ADDRESS 3407872 /* 0x340000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_REG_IDX_0_VAL_SIZE 524288 /* 0x80000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_STRING_UNQUOTED image-1-appcpu
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_STRING_TOKEN image_1_appcpu
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_STRING_UPPER_TOKEN IMAGE_1_APPCPU
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_IDX_0 "image-1-appcpu"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg {3407872 /* 0x340000 */, 524288 /* 0x80000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg_IDX_0 3407872
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg_IDX_1 524288
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@3C0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@3C0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FULL_NAME "partition@3C0000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FULL_NAME_UNQUOTED partition@3C0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FULL_NAME_TOKEN partition_3C0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FULL_NAME_UPPER_TOKEN PARTITION_3C0000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_ORD 99
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_ORD_STR_SORTABLE 00099

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_REG_IDX_0_VAL_ADDRESS 3932160 /* 0x3c0000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_REG_IDX_0_VAL_SIZE 131072 /* 0x20000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_PARTITION_ID 5

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg {3932160 /* 0x3c0000 */, 131072 /* 0x20000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg_IDX_0 3932160
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg_IDX_1 131072
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@3E0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@3E0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME "partition@3E0000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UNQUOTED partition@3E0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_TOKEN partition_3E0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FULL_NAME_UPPER_TOKEN PARTITION_3E0000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL(fn) fn(scratch_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(scratch_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_ORD 100
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_ORD_STR_SORTABLE 00100

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_ADDRESS 4063232 /* 0x3e0000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_REG_IDX_0_VAL_SIZE 65536 /* 0x10000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_PARTITION_ID 6

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg {4063232 /* 0x3e0000 */, 65536 /* 0x10000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_0 4063232
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_IDX_1 65536
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@60002000/flash@0/partitions/partition@3F0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_PATH "/soc/flash-controller@60002000/flash@0/partitions/partition@3F0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FULL_NAME "partition@3F0000"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FULL_NAME_UNQUOTED partition@3F0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FULL_NAME_TOKEN partition_3F0000
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FULL_NAME_UPPER_TOKEN PARTITION_3F0000

/* Node parent (/soc/flash-controller@60002000/flash@0/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_PARENT DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_NODELABEL(fn) fn(coredump_partition)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(coredump_partition, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_ORD 101
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_ORD_STR_SORTABLE 00101

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_REQUIRES_ORDS \
	93, /* /soc/flash-controller@60002000/flash@0/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_EXISTS 1
#define DT_N_NODELABEL_coredump_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_REG_IDX_0_VAL_ADDRESS 4128768 /* 0x3f0000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_PARTITION_ID 7

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label "coredump-partition"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_STRING_UNQUOTED coredump-partition
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_STRING_TOKEN coredump_partition
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_STRING_UPPER_TOKEN COREDUMP_PARTITION
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_IDX_0 "coredump-partition"
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, label, 0)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg {4128768 /* 0x3f0000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg_IDX_0 4128768
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/gpio/gpio@60004800
 *
 * Node identifier: DT_N_S_soc_S_gpio_S_gpio_60004800
 *
 * Binding (compatible = espressif,esp32-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/espressif,esp32-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_PATH "/soc/gpio/gpio@60004800"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FULL_NAME "gpio@60004800"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FULL_NAME_UNQUOTED gpio@60004800
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FULL_NAME_TOKEN gpio_60004800
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FULL_NAME_UPPER_TOKEN GPIO_60004800

/* Node parent (/soc/gpio) identifier: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_PARENT DT_N_S_soc_S_gpio

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_NODELABEL(fn) fn(gpio1)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_ORD 102
#define DT_N_S_soc_S_gpio_S_gpio_60004800_ORD_STR_SORTABLE 00102

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_REQUIRES_ORDS \
	6, /* /soc/gpio */ \
	7, /* /soc/interrupt-controller@600c2000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_EXISTS 1
#define DT_N_INST_1_espressif_esp32_gpio DT_N_S_soc_S_gpio_S_gpio_60004800
#define DT_N_NODELABEL_gpio1             DT_N_S_soc_S_gpio_S_gpio_60004800

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_REG_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_REG_IDX_0_VAL_ADDRESS 1610631168 /* 0x60004800 */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_REG_IDX_0_VAL_SIZE 2048 /* 0x800 */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_NUM 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_irq 16
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004800_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_COMPAT_MATCHES_espressif_esp32_gpio 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_COMPAT_MODEL_IDX_0 "esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_ngpios 22
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status "okay"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0_ENUM_TOKEN okay
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_IDX_0_ENUM_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, status, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible {"espressif,esp32-gpio"}
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_IDX_0 "espressif,esp32-gpio"
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-gpio
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_gpio
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_GPIO
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, compatible, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg {1610631168 /* 0x60004800 */, 2048 /* 0x800 */}
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg_IDX_0 1610631168
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg_IDX_1 2048
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts {16 /* 0x10 */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_0 16
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, interrupt_parent, 0)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_S_gpio_60004800_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/ledc@60019000/channel0@0
 *
 * Node identifier: DT_N_S_soc_S_ledc_60019000_S_channel0_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_PATH "/soc/ledc@60019000/channel0@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FULL_NAME "channel0@0"
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FULL_NAME_UNQUOTED channel0@0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FULL_NAME_TOKEN channel0_0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FULL_NAME_UPPER_TOKEN CHANNEL0_0

/* Node parent (/soc/ledc@60019000) identifier: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_PARENT DT_N_S_soc_S_ledc_60019000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_NODELABEL_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_CHILD_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_ORD 103
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_ORD_STR_SORTABLE 00103

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_REG_NUM 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_reg 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_reg_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_reg_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_timer 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_timer_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_timer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_timer_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel0_0_P_timer_EXISTS 1

/*
 * Devicetree node: /soc/ledc@60019000/channel1@1
 *
 * Node identifier: DT_N_S_soc_S_ledc_60019000_S_channel1_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_PATH "/soc/ledc@60019000/channel1@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FULL_NAME "channel1@1"
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FULL_NAME_UNQUOTED channel1@1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FULL_NAME_TOKEN channel1_1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FULL_NAME_UPPER_TOKEN CHANNEL1_1

/* Node parent (/soc/ledc@60019000) identifier: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_PARENT DT_N_S_soc_S_ledc_60019000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_NODELABEL_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_CHILD_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_ORD 104
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_ORD_STR_SORTABLE 00104

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_REG_NUM 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_reg 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_reg_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_reg_IDX_0_ENUM_VAL_1_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_timer 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_timer_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_timer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_timer_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel1_1_P_timer_EXISTS 1

/*
 * Devicetree node: /soc/ledc@60019000/channel2@2
 *
 * Node identifier: DT_N_S_soc_S_ledc_60019000_S_channel2_2
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_PATH "/soc/ledc@60019000/channel2@2"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FULL_NAME "channel2@2"
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FULL_NAME_UNQUOTED channel2@2
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FULL_NAME_TOKEN channel2_2
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FULL_NAME_UPPER_TOKEN CHANNEL2_2

/* Node parent (/soc/ledc@60019000) identifier: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_PARENT DT_N_S_soc_S_ledc_60019000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_NODELABEL_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_NODELABEL_VARGS(fn, ...) 

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_CHILD_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_ORD 105
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_ORD_STR_SORTABLE 00105

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_REQUIRES_ORDS \
	26, /* /soc/ledc@60019000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_REG_NUM 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_REG_IDX_0_VAL_ADDRESS 2 /* 0x2 */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_RANGES_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_IRQ_NUM 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_IRQ_LEVEL 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_reg 2
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_reg_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_reg_IDX_0_ENUM_VAL_2_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_reg_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_timer 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_timer_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_timer_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_timer_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_ledc_60019000_S_channel2_2_P_timer_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@60028000
 *
 * Node identifier: DT_N_S_soc_S_sdhc_60028000
 *
 * Binding (compatible = espressif,esp32-sdhc):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_60028000_PATH "/soc/sdhc@60028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_60028000_FULL_NAME "sdhc@60028000"
#define DT_N_S_soc_S_sdhc_60028000_FULL_NAME_UNQUOTED sdhc@60028000
#define DT_N_S_soc_S_sdhc_60028000_FULL_NAME_TOKEN sdhc_60028000
#define DT_N_S_soc_S_sdhc_60028000_FULL_NAME_UPPER_TOKEN SDHC_60028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sdhc_60028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_60028000_CHILD_IDX 40

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_60028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_NODELABEL(fn) fn(sdhc)
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_60028000_CHILD_NUM 2
#define DT_N_S_soc_S_sdhc_60028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1)
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_60028000_ORD 106
#define DT_N_S_soc_S_sdhc_60028000_ORD_STR_SORTABLE 00106

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_60028000_REQUIRES_ORDS \
	5, /* /soc */ \
	7, /* /soc/interrupt-controller@600c2000 */ \
	25, /* /soc/rtc@60021000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_60028000_SUPPORTS_ORDS \
	107, /* /soc/sdhc@60028000/sdhc@0 */ \
	108, /* /soc/sdhc@60028000/sdhc@1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_60028000_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc DT_N_S_soc_S_sdhc_60028000
#define DT_N_NODELABEL_sdhc              DT_N_S_soc_S_sdhc_60028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_60028000_REG_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_REG_IDX_0_VAL_ADDRESS 1610776576 /* 0x60028000 */
#define DT_N_S_soc_S_sdhc_60028000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_sdhc_60028000_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_60028000_IRQ_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_irq 30
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_sdhc_60028000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sdhc_60028000_COMPAT_MATCHES_espressif_esp32_sdhc 1
#define DT_N_S_soc_S_sdhc_60028000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_60028000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_COMPAT_MODEL_IDX_0 "esp32-sdhc"
#define DT_N_S_soc_S_sdhc_60028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_60028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_60028000_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_60028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_60028000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_compatible {"espressif,esp32-sdhc"}
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_IDX_0 "espressif,esp32-sdhc"
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_reg {1610776576 /* 0x60028000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_sdhc_60028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_reg_IDX_0 1610776576
#define DT_N_S_soc_S_sdhc_60028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_sdhc_60028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts {30 /* 0x1e */, 0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_0 30
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_IDX_2 0
#define DT_N_S_soc_S_sdhc_60028000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_IDX_0 DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_IDX_0_PH DT_N_S_soc_S_interrupt_controller_600c2000
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000, interrupt_parent, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000, interrupt_parent, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_P_interrupt_parent_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_IDX_0_PH DT_N_S_soc_S_rtc_60021000
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_IDX_0_VAL_offset 23
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_IDX_0_VAL_offset_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000, clocks, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000, clocks, 0)
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_60028000_P_zephyr_deferred_init_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@60028000/sdhc@0
 *
 * Node identifier: DT_N_S_soc_S_sdhc_60028000_S_sdhc_0
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_PATH "/soc/sdhc@60028000/sdhc@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FULL_NAME "sdhc@0"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FULL_NAME_UNQUOTED sdhc@0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FULL_NAME_TOKEN sdhc_0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FULL_NAME_UPPER_TOKEN SDHC_0

/* Node parent (/soc/sdhc@60028000) identifier: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_PARENT DT_N_S_soc_S_sdhc_60028000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_NODELABEL(fn) fn(sdhc0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc0, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_ORD 107
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_ORD_STR_SORTABLE 00107

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_REQUIRES_ORDS \
	106, /* /soc/sdhc@60028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_EXISTS 1
#define DT_N_INST_0_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_60028000_S_sdhc_0
#define DT_N_NODELABEL_sdhc0                  DT_N_S_soc_S_sdhc_60028000_S_sdhc_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_REG_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status "disabled"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, status, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_reg {0 /* 0x0 */}
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_bus_width 4
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_0_P_bus_width_EXISTS 1

/*
 * Devicetree node: /soc/sdhc@60028000/sdhc@1
 *
 * Node identifier: DT_N_S_soc_S_sdhc_60028000_S_sdhc_1
 *
 * Binding (compatible = espressif,esp32-sdhc-slot):
 *   $ZEPHYR_BASE/dts/bindings/sdhc/espressif,esp32-sdhc-slot.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_PATH "/soc/sdhc@60028000/sdhc@1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FULL_NAME "sdhc@1"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FULL_NAME_UNQUOTED sdhc@1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FULL_NAME_TOKEN sdhc_1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FULL_NAME_UPPER_TOKEN SDHC_1

/* Node parent (/soc/sdhc@60028000) identifier: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_PARENT DT_N_S_soc_S_sdhc_60028000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_NODELABEL_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_NODELABEL(fn) fn(sdhc1)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(sdhc1, __VA_ARGS__)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_CHILD_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_ORD 108
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_ORD_STR_SORTABLE 00108

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_REQUIRES_ORDS \
	106, /* /soc/sdhc@60028000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_EXISTS 1
#define DT_N_INST_1_espressif_esp32_sdhc_slot DT_N_S_soc_S_sdhc_60028000_S_sdhc_1
#define DT_N_NODELABEL_sdhc1                  DT_N_S_soc_S_sdhc_60028000_S_sdhc_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_REG_NUM 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_REG_IDX_0_VAL_ADDRESS 1 /* 0x1 */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_RANGES_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_IRQ_NUM 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_IRQ_LEVEL 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_COMPAT_MATCHES_espressif_esp32_sdhc_slot 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_COMPAT_VENDOR_IDX_0 "Espressif Systems"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_COMPAT_MODEL_IDX_0 "esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_wakeup_source 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status "disabled"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0_ENUM_TOKEN disabled
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_IDX_0_ENUM_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, status, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_status_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible {"espressif,esp32-sdhc-slot"}
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_IDX_0 "espressif,esp32-sdhc-slot"
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_IDX_0_STRING_UNQUOTED espressif,esp32-sdhc-slot
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_IDX_0_STRING_TOKEN espressif_esp32_sdhc_slot
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_IDX_0_STRING_UPPER_TOKEN ESPRESSIF_ESP32_SDHC_SLOT
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, compatible, 0)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_LEN 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_reg {1 /* 0x1 */}
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_reg_IDX_0 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_reg_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_330 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_330_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_300 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_300_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_180 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_current_180_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_bus_freq 400000
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_max_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_min_bus_freq 400000
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_min_bus_freq_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_power_delay_ms 500
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_power_delay_ms_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_mmc_hs200_1_8v 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_mmc_hs200_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_mmc_hs400_1_8v 0
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_mmc_hs400_1_8v_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_bus_width 4
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_bus_width_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_bus_width_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_bus_width_IDX_0_ENUM_VAL_4_EXISTS 1
#define DT_N_S_soc_S_sdhc_60028000_S_sdhc_1_P_bus_width_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_canbus                  DT_N_S_soc_S_can_6002b000
#define DT_CHOSEN_zephyr_canbus_EXISTS           1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_trng_6003507c
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_60002000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_soc_S_memory_3fc88000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_uart_60000000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_uart_60000000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_60002000_S_flash_0
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_bt_hci                  DT_N_S_esp32_bt_hci
#define DT_CHOSEN_zephyr_bt_hci_EXISTS           1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_3fc88000) fn(DT_N_S_soc_S_memory_3fcbd000) fn(DT_N_S_soc_S_memory_3fcbd400) fn(DT_N_S_soc_S_interrupt_controller_600c2000) fn(DT_N_S_soc_S_rtc_60021000) fn(DT_N_S_soc_S_xt_wdt_60021004) fn(DT_N_S_soc_S_rtc_timer_60008004) fn(DT_N_S_soc_S_flash_controller_60002000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000) fn(DT_N_S_soc_S_psram_3c000000) fn(DT_N_S_soc_S_ipm_3fcc1400) fn(DT_N_S_soc_S_mbox_3fcc1408) fn(DT_N_S_soc_S_uart_60000000) fn(DT_N_S_soc_S_uart_60010000) fn(DT_N_S_soc_S_uart_6002e000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) fn(DT_N_S_soc_S_gpio_S_gpio_60004800) fn(DT_N_S_soc_S_touch_6000885c) fn(DT_N_S_soc_S_i2c_60013000) fn(DT_N_S_soc_S_i2c_60027000) fn(DT_N_S_soc_S_i2s_6000f000) fn(DT_N_S_soc_S_i2s_6002d000) fn(DT_N_S_soc_S_spi_60024000) fn(DT_N_S_soc_S_spi_60025000) fn(DT_N_S_soc_S_coretemp_60008800) fn(DT_N_S_soc_S_adc_60040000) fn(DT_N_S_soc_S_adc_60040000_S_channel_0) fn(DT_N_S_soc_S_adc_60040004) fn(DT_N_S_soc_S_can_6002b000) fn(DT_N_S_soc_S_lcd_cam_60041000) fn(DT_N_S_soc_S_uart_60038000) fn(DT_N_S_soc_S_counter_6001f000) fn(DT_N_S_soc_S_counter_6001f024) fn(DT_N_S_soc_S_counter_60020000) fn(DT_N_S_soc_S_counter_60020024) fn(DT_N_S_soc_S_watchdog_6001f048) fn(DT_N_S_soc_S_watchdog_60020048) fn(DT_N_S_soc_S_trng_6003507c) fn(DT_N_S_soc_S_ledc_60019000) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2) fn(DT_N_S_soc_S_mcpwm_6001e000) fn(DT_N_S_soc_S_mcpwm_6002c000) fn(DT_N_S_soc_S_pcnt_60017000) fn(DT_N_S_soc_S_dma_6003f000) fn(DT_N_S_soc_S_sdhc_60028000) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_wifi) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_twai_default) fn(DT_N_S_pin_controller_S_twai_default_S_group1) fn(DT_N_S_pin_controller_S_led_0) fn(DT_N_S_pin_controller_S_led_0_S_group1) fn(DT_N_S_pin_controller_S_led_1) fn(DT_N_S_pin_controller_S_led_1_S_group1) fn(DT_N_S_pin_controller_S_led_2) fn(DT_N_S_pin_controller_S_led_2_S_group1) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_my_pwm_leds) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) fn(DT_N_S_my_pwm_leds_S_pwm_led_1) fn(DT_N_S_my_pwm_leds_S_pwm_led_2) fn(DT_N_S_gpio14_output) fn(DT_N_S_gpio14_output_S_driver_gpio) fn(DT_N_S_gpio7_input) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_memory_3fc88000) fn(DT_N_S_soc_S_memory_3fcbd000) fn(DT_N_S_soc_S_memory_3fcbd400) fn(DT_N_S_soc_S_interrupt_controller_600c2000) fn(DT_N_S_soc_S_rtc_60021000) fn(DT_N_S_soc_S_flash_controller_60002000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000) fn(DT_N_S_soc_S_uart_60000000) fn(DT_N_S_soc_S_gpio) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) fn(DT_N_S_soc_S_gpio_S_gpio_60004800) fn(DT_N_S_soc_S_spi_60024000) fn(DT_N_S_soc_S_spi_60025000) fn(DT_N_S_soc_S_adc_60040000) fn(DT_N_S_soc_S_adc_60040000_S_channel_0) fn(DT_N_S_soc_S_watchdog_6001f048) fn(DT_N_S_soc_S_trng_6003507c) fn(DT_N_S_soc_S_ledc_60019000) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2) fn(DT_N_S_soc_S_sdhc_60028000) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep) fn(DT_N_S_esp32_bt_hci) fn(DT_N_S_pin_controller) fn(DT_N_S_pin_controller_S_uart0_default) fn(DT_N_S_pin_controller_S_uart0_default_S_group1) fn(DT_N_S_pin_controller_S_uart0_default_S_group2) fn(DT_N_S_pin_controller_S_i2c0_default) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1) fn(DT_N_S_pin_controller_S_i2c1_default) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2) fn(DT_N_S_pin_controller_S_i2s1_default) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2) fn(DT_N_S_pin_controller_S_spim2_default) fn(DT_N_S_pin_controller_S_spim2_default_S_group1) fn(DT_N_S_pin_controller_S_spim2_default_S_group2) fn(DT_N_S_pin_controller_S_spim3_default) fn(DT_N_S_pin_controller_S_spim3_default_S_group1) fn(DT_N_S_pin_controller_S_spim3_default_S_group2) fn(DT_N_S_pin_controller_S_twai_default) fn(DT_N_S_pin_controller_S_twai_default_S_group1) fn(DT_N_S_pin_controller_S_led_0) fn(DT_N_S_pin_controller_S_led_0_S_group1) fn(DT_N_S_pin_controller_S_led_1) fn(DT_N_S_pin_controller_S_led_1_S_group1) fn(DT_N_S_pin_controller_S_led_2) fn(DT_N_S_pin_controller_S_led_2_S_group1) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_my_pwm_leds) fn(DT_N_S_my_pwm_leds_S_pwm_led_0) fn(DT_N_S_my_pwm_leds_S_pwm_led_1) fn(DT_N_S_my_pwm_leds_S_pwm_led_2) fn(DT_N_S_gpio14_output) fn(DT_N_S_gpio14_output_S_driver_gpio) fn(DT_N_S_gpio7_input) fn(DT_N_S_gpio7_input_S_detecting_gpio)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) fn(DT_N_S_soc_S_xt_wdt_60021004, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_timer_60008004, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__) fn(DT_N_S_soc_S_psram_3c000000, __VA_ARGS__) fn(DT_N_S_soc_S_ipm_3fcc1400, __VA_ARGS__) fn(DT_N_S_soc_S_mbox_3fcc1408, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60010000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_6002e000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__) fn(DT_N_S_soc_S_touch_6000885c, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_60013000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_60027000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_6000f000, __VA_ARGS__) fn(DT_N_S_soc_S_i2s_6002d000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) fn(DT_N_S_soc_S_coretemp_60008800, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040004, __VA_ARGS__) fn(DT_N_S_soc_S_can_6002b000, __VA_ARGS__) fn(DT_N_S_soc_S_lcd_cam_60041000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60038000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_6001f000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_6001f024, __VA_ARGS__) fn(DT_N_S_soc_S_counter_60020000, __VA_ARGS__) fn(DT_N_S_soc_S_counter_60020024, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_60020048, __VA_ARGS__) fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_6001e000, __VA_ARGS__) fn(DT_N_S_soc_S_mcpwm_6002c000, __VA_ARGS__) fn(DT_N_S_soc_S_pcnt_60017000, __VA_ARGS__) fn(DT_N_S_soc_S_dma_6003f000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_0, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000_S_sdhc_1, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_wifi, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__) fn(DT_N_S_gpio14_output, __VA_ARGS__) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__) fn(DT_N_S_gpio7_input, __VA_ARGS__) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__) fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000, __VA_ARGS__) fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_60040000_S_channel_0, __VA_ARGS__) fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__) fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel0_0, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel1_1, __VA_ARGS__) fn(DT_N_S_soc_S_ledc_60019000_S_channel2_2, __VA_ARGS__) fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__) fn(DT_N_S_pin_controller, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_uart0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2c1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s0_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_i2s1_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim2_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_spim3_default_S_group2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default, __VA_ARGS__) fn(DT_N_S_pin_controller_S_twai_default_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_0_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_1_S_group1, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2, __VA_ARGS__) fn(DT_N_S_pin_controller_S_led_2_S_group1, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_0, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_1, __VA_ARGS__) fn(DT_N_S_my_pwm_leds_S_pwm_led_2, __VA_ARGS__) fn(DT_N_S_gpio14_output, __VA_ARGS__) fn(DT_N_S_gpio14_output_S_driver_gpio, __VA_ARGS__) fn(DT_N_S_gpio7_input, __VA_ARGS__) fn(DT_N_S_gpio7_input_S_detecting_gpio, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_20000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_170000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_1f0000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_340000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_appcpu_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3c0000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3e0000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_coredump_partition DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions_S_partition_3f0000
#define DT_COMPAT_fixed_partitions_LABEL_coredump_partition_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_espressif_esp32s3 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_intc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_rtc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_uart 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_gpio 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_spi 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_adc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_watchdog 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_trng 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_ledc 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_sdhc 1
#define DT_COMPAT_HAS_OKAY_espressif_xtensa_lx7 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_bt_hci 1
#define DT_COMPAT_HAS_OKAY_espressif_esp32_pinctrl 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1
#define DT_COMPAT_HAS_OKAY_pwm_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_espressif_esp32s3_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 3
#define DT_N_INST_espressif_esp32_intc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_rtc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_uart_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_gpio_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_spi_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_adc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_watchdog_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_trng_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_ledc_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_sdhc_NUM_OKAY 1
#define DT_N_INST_espressif_xtensa_lx7_NUM_OKAY 2
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_espressif_esp32_bt_hci_NUM_OKAY 1
#define DT_N_INST_espressif_esp32_pinctrl_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_N_INST_pwm_leds_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 2
#define DT_FOREACH_OKAY_espressif_esp32s3(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32s3(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32s3(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32s3(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc) fn(DT_N_S_soc_S_gpio)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_gpio, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_soc_S_memory_3fc88000) fn(DT_N_S_soc_S_memory_3fcbd000) fn(DT_N_S_soc_S_memory_3fcbd400)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_soc_S_memory_3fc88000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd000, __VA_ARGS__) fn(DT_N_S_soc_S_memory_3fcbd400, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_intc(fn) fn(DT_N_S_soc_S_interrupt_controller_600c2000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_intc(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_600c2000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_intc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_intc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_rtc(fn) fn(DT_N_S_soc_S_rtc_60021000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_rtc(fn, ...) fn(DT_N_S_soc_S_rtc_60021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_rtc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_rtc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_60002000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_60002000_S_flash_0_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_uart(fn) fn(DT_N_S_soc_S_uart_60000000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_uart(fn, ...) fn(DT_N_S_soc_S_uart_60000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_uart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_uart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_gpio(fn) fn(DT_N_S_soc_S_gpio_S_gpio_60004000) fn(DT_N_S_soc_S_gpio_S_gpio_60004800)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_S_gpio_60004000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_S_gpio_60004800, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_gpio(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_gpio(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_spi(fn) fn(DT_N_S_soc_S_spi_60024000) fn(DT_N_S_soc_S_spi_60025000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_spi(fn, ...) fn(DT_N_S_soc_S_spi_60024000, __VA_ARGS__) fn(DT_N_S_soc_S_spi_60025000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_spi(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_spi(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_adc(fn) fn(DT_N_S_soc_S_adc_60040000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_adc(fn, ...) fn(DT_N_S_soc_S_adc_60040000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_adc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_adc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_watchdog(fn) fn(DT_N_S_soc_S_watchdog_6001f048)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_watchdog(fn, ...) fn(DT_N_S_soc_S_watchdog_6001f048, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_watchdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_watchdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_trng(fn) fn(DT_N_S_soc_S_trng_6003507c)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_trng(fn, ...) fn(DT_N_S_soc_S_trng_6003507c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_trng(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_trng(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_ledc(fn) fn(DT_N_S_soc_S_ledc_60019000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_ledc(fn, ...) fn(DT_N_S_soc_S_ledc_60019000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_ledc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_ledc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_sdhc(fn) fn(DT_N_S_soc_S_sdhc_60028000)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_sdhc(fn, ...) fn(DT_N_S_soc_S_sdhc_60028000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_sdhc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_sdhc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_xtensa_lx7(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_cpu_1)
#define DT_FOREACH_OKAY_VARGS_espressif_xtensa_lx7(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_xtensa_lx7(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_xtensa_lx7(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_light_sleep) fn(DT_N_S_cpus_S_power_states_S_deep_sleep)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_light_sleep, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_deep_sleep, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_bt_hci(fn) fn(DT_N_S_esp32_bt_hci)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_bt_hci(fn, ...) fn(DT_N_S_esp32_bt_hci, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_bt_hci(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_bt_hci(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_espressif_esp32_pinctrl(fn) fn(DT_N_S_pin_controller)
#define DT_FOREACH_OKAY_VARGS_espressif_esp32_pinctrl(fn, ...) fn(DT_N_S_pin_controller, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_espressif_esp32_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_espressif_esp32_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_pwm_leds(fn) fn(DT_N_S_my_pwm_leds)
#define DT_FOREACH_OKAY_VARGS_pwm_leds(fn, ...) fn(DT_N_S_my_pwm_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_pwm_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_pwm_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_gpio14_output) fn(DT_N_S_gpio7_input)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_gpio14_output, __VA_ARGS__) fn(DT_N_S_gpio7_input, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
