Archive member included to satisfy reference by file (symbol)

../app/libapp.a(main.c.obj)   (--whole-archive)
libzephyr.a(heap.c.obj)       (--whole-archive)
libzephyr.a(cbprintf_packaged.c.obj)
                              (--whole-archive)
libzephyr.a(printk.c.obj)     (--whole-archive)
libzephyr.a(sem.c.obj)        (--whole-archive)
libzephyr.a(thread_entry.c.obj)
                              (--whole-archive)
libzephyr.a(cbprintf_complete.c.obj)
                              (--whole-archive)
libzephyr.a(assert.c.obj)     (--whole-archive)
libzephyr.a(dec.c.obj)        (--whole-archive)
libzephyr.a(hex.c.obj)        (--whole-archive)
libzephyr.a(rb.c.obj)         (--whole-archive)
libzephyr.a(timeutil.c.obj)   (--whole-archive)
libzephyr.a(bitarray.c.obj)   (--whole-archive)
libzephyr.a(configs.c.obj)    (--whole-archive)
libzephyr.a(esp_heap_runtime.c.obj)
                              (--whole-archive)
libzephyr.a(soc.c.obj)        (--whole-archive)
libzephyr.a(soc_cache.c.obj)  (--whole-archive)
libzephyr.a(esp32s3-mp.c.obj)
                              (--whole-archive)
libzephyr.a(loader.c.obj)     (--whole-archive)
libzephyr.a(tracing_none.c.obj)
                              (--whole-archive)
libzephyr.a(flash_encrypt.c.obj)
                              (--whole-archive)
libzephyr.a(esp_gpio_reserve.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_hal.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_hal_iram.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_hal_gpspi.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_oct_flash_init.c.obj)
                              (--whole-archive)
libzephyr.a(esp_flash_api.c.obj)
                              (--whole-archive)
libzephyr.a(esp_flash_spi_init.c.obj)
                              (--whole-archive)
libzephyr.a(flash_mmap.c.obj)
                              (--whole-archive)
libzephyr.a(flash_ops.c.obj)  (--whole-archive)
libzephyr.a(memspi_host_driver.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_boya.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_drivers.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_gd.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_generic.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_issi.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_mxic.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_th.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_chip_winbond.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_hpm_enable.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_os_func_noos.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_os_func_app.c.obj)
                              (--whole-archive)
libzephyr.a(spi_flash_wrap.c.obj)
                              (--whole-archive)
libzephyr.a(uart_hal.c.obj)   (--whole-archive)
libzephyr.a(uart_hal_iram.c.obj)
                              (--whole-archive)
libzephyr.a(ledc_hal_iram.c.obj)
                              (--whole-archive)
libzephyr.a(ledc_hal.c.obj)   (--whole-archive)
libzephyr.a(adc_hal.c.obj)    (--whole-archive)
libzephyr.a(adc_hal_common.c.obj)
                              (--whole-archive)
libzephyr.a(adc_legacy.c.obj)
                              (--whole-archive)
libzephyr.a(adc_share_hw_ctrl.c.obj)
                              (--whole-archive)
libzephyr.a(esp_adc_cal_legacy.c.obj)
                              (--whole-archive)
libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_io_hal.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_io.c.obj)     (--whole-archive)
libzephyr.a(esp_efuse_api.c.obj)
                              (--whole-archive)
libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
libzephyr.a(esp_efuse_table.c.obj)
                              (--whole-archive)
libzephyr.a(esp_efuse_rtc_calib.c.obj)
                              (--whole-archive)
libzephyr.a(esp_efuse_utility.c.obj)
                              (--whole-archive)
libzephyr.a(adc_periph.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_mem.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_clock_init.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_console.c.obj)
                              (--whole-archive)
libzephyr.a(mpu_hal.c.obj)    (--whole-archive)
libzephyr.a(bootloader_esp32s3.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_init.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_common_loader.c.obj)
                              (--whole-archive)
libzephyr.a(flash_qio_mode.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                              (--whole-archive)
libzephyr.a(gpio_periph.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_io_periph.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_flash.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_random_esp32s3.c.obj)
                              (--whole-archive)
libzephyr.a(bootloader_soc.c.obj)
                              (--whole-archive)
libzephyr.a(cpu.c.obj)        (--whole-archive)
libzephyr.a(clk_ctrl_os.c.obj)
                              (--whole-archive)
libzephyr.a(esp_clk.c.obj)    (--whole-archive)
libzephyr.a(regi2c_ctrl.c.obj)
                              (--whole-archive)
libzephyr.a(mac_addr.c.obj)   (--whole-archive)
libzephyr.a(periph_ctrl.c.obj)
                              (--whole-archive)
libzephyr.a(mspi_timing_tuning.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_module.c.obj)
                              (--whole-archive)
libzephyr.a(hw_random.c.obj)  (--whole-archive)
libzephyr.a(sleep_modes.c.obj)
                              (--whole-archive)
libzephyr.a(esp_clk_tree_common.c.obj)
                              (--whole-archive)
libzephyr.a(cpu_region_protect.c.obj)
                              (--whole-archive)
libzephyr.a(esp_clk_tree.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_clk.c.obj)    (--whole-archive)
libzephyr.a(rtc_init.c.obj)   (--whole-archive)
libzephyr.a(rtc_clk_init.c.obj)
                              (--whole-archive)
libzephyr.a(rtc_time.c.obj)   (--whole-archive)
libzephyr.a(rtc_sleep.c.obj)  (--whole-archive)
libzephyr.a(sar_periph_ctrl.c.obj)
                              (--whole-archive)
libzephyr.a(systimer.c.obj)   (--whole-archive)
libzephyr.a(mspi_timing_config.c.obj)
                              (--whole-archive)
libzephyr.a(esp_mmu_map.c.obj)
                              (--whole-archive)
libzephyr.a(ext_mem_layout.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_crc.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_sys.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_uart.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_spiflash.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_efuse.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_systimer.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_wdt.c.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_longjmp.S.obj)
                              (--whole-archive)
libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                              (--whole-archive)
libzephyr.a(esp_err.c.obj)    (--whole-archive)
libzephyr.a(clk.c.obj)        (--whole-archive)
libzephyr.a(system_internal.c.obj)
                              (--whole-archive)
libzephyr.a(reset_reason.c.obj)
                              (--whole-archive)
libzephyr.a(ets_timer_legacy.c.obj)
                              (--whole-archive)
libzephyr.a(esp_timer.c.obj)  (--whole-archive)
libzephyr.a(esp_timer_impl_systimer.c.obj)
                              (--whole-archive)
libzephyr.a(efuse_hal.c.obj)  (--whole-archive)
libzephyr.a(cache_hal.c.obj)  (--whole-archive)
libzephyr.a(mmu_hal.c.obj)    (--whole-archive)
libzephyr.a(systimer_hal.c.obj)
                              (--whole-archive)
libzephyr.a(wdt_hal_iram.c.obj)
                              (--whole-archive)
libzephyr.a(clk_tree_hal.c.obj)
                              (--whole-archive)
libzephyr.a(efuse_hal.c.obj)  (--whole-archive)
libzephyr.a(xt_wdt_hal.c.obj)
                              (--whole-archive)
libzephyr.a(log_noos.c.obj)   (--whole-archive)
libzephyr.a(log.c.obj)        (--whole-archive)
libzephyr.a(cache_utils.c.obj)
                              (--whole-archive)
libzephyr.a(heap_caps_zephyr.c.obj)
                              (--whole-archive)
libzephyr.a(stubs.c.obj)      (--whole-archive)
libzephyr.a(number_of_leds.c.obj)
                              (--whole-archive)
arch/common/libarch__common.a(sw_isr_common.c.obj)
                              (--whole-archive)
arch/common/libarch__common.a(dynamic_isr.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                              (--whole-archive)
arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                              (--whole-archive)
lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                              (--whole-archive)
lib/libc/common/liblib__libc__common.a(abort.c.obj)
                              (--whole-archive)
lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                              (--whole-archive)
drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                              (--whole-archive)
drivers/adc/libdrivers__adc.a(adc_common.c.obj)
                              (--whole-archive)
drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                              (--whole-archive)
drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                              (--whole-archive)
drivers/console/libdrivers__console.a(uart_console.c.obj)
                              (--whole-archive)
drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                              (--whole-archive)
drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                              (--whole-archive)
drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                              (--whole-archive)
drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                              (--whole-archive)
drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                              (--whole-archive)
drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                              (--whole-archive)
drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                              (--whole-archive)
kernel/libkernel.a(device.c.obj)
                              ../app/libapp.a(main.c.obj) (z_impl_device_is_ready)
kernel/libkernel.a(errno.c.obj)
                              lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_z_errno)
kernel/libkernel.a(fatal.c.obj)
                              arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj) (z_fatal_error)
kernel/libkernel.a(init.c.obj)
                              libzephyr.a(spi_flash_os_func_app.c.obj) (z_sys_post_kernel)
kernel/libkernel.a(init_static.c.obj)
                              kernel/libkernel.a(init.c.obj) (z_init_static)
kernel/libkernel.a(kheap.c.obj)
                              libzephyr.a(esp_heap_runtime.c.obj) (k_heap_init)
kernel/libkernel.a(idle.c.obj)
                              kernel/libkernel.a(init.c.obj) (idle)
kernel/libkernel.a(mutex.c.obj)
                              lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj) (z_impl_k_mutex_init)
kernel/libkernel.a(sem.c.obj)
                              libzephyr.a(sem.c.obj) (z_impl_k_sem_init)
kernel/libkernel.a(thread.c.obj)
                              libzephyr.a(cache_utils.c.obj) (k_is_in_isr)
kernel/libkernel.a(sched.c.obj)
                              kernel/libkernel.a(init.c.obj) (_thread_dummy)
kernel/libkernel.a(timeslicing.c.obj)
                              kernel/libkernel.a(init.c.obj) (z_reset_time_slice)
kernel/libkernel.a(timeout.c.obj)
                              kernel/libkernel.a(init.c.obj) (z_add_timeout)
kernel/libkernel.a(mempool.c.obj)
                              libzephyr.a(flash_mmap.c.obj) (k_free)
kernel/libkernel.a(banner.c.obj)
                              kernel/libkernel.a(init.c.obj) (boot_banner)
arch/common/libisr_tables.a(isr_tables.c.obj)
                              arch/common/libarch__common.a(dynamic_isr.c.obj) (_sw_isr_table)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                              libzephyr.a(esp_flash_api.c.obj) (__ashldi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
                              libzephyr.a(rtc_io.c.obj) (__ashrdi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                              libzephyr.a(esp_gpio_reserve.c.obj) (__lshrdi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                              libzephyr.a(spi_flash_chip_mxic_opi.c.obj) (__bswapsi2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                              libzephyr.a(spi_flash_chip_generic.c.obj) (__bswapdi2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                              ../app/libapp.a(main.c.obj) (__divsf3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                              libzephyr.a(spi_flash_hal.c.obj) (__adddf3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                              libzephyr.a(timeutil.c.obj) (__muldf3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                              libzephyr.a(timeutil.c.obj) (__divdf3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                              libzephyr.a(spi_flash_hal.c.obj) (__fixdfsi)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                              libzephyr.a(timeutil.c.obj) (__fixdfdi)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
                              drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj) (__fixunsdfsi)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                              libzephyr.a(timeutil.c.obj) (__floatunsidf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                              libzephyr.a(timeutil.c.obj) (__floatundidf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                              libzephyr.a(timeutil.c.obj) (__truncdfsf2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                              libzephyr.a(timeutil.c.obj) (__extendsfdf2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                              libzephyr.a(cpu.c.obj) (__ffsdi2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                              libzephyr.a(bitarray.c.obj) (__popcountsi2)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                              libzephyr.a(timeutil.c.obj) (__divdi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                              ../app/libapp.a(main.c.obj) (__udivdi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                              libzephyr.a(cbprintf_complete.c.obj) (__umoddi3)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                              libzephyr.a(heap.c.obj) (memcpy)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                              ../app/libapp.a(main.c.obj) (memset)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                              libzephyr.a(log.c.obj) (strcmp)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                              libzephyr.a(cbprintf_packaged.c.obj) (strlen)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                              libzephyr.a(esp_flash_api.c.obj) (memcmp)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                              libzephyr.a(cbprintf_complete.c.obj) (strnlen)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                              libzephyr.a(esp_mmu_map.c.obj) (fprintf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                              libzephyr.a(esp_mmu_map.c.obj) (fputc)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                              libzephyr.a(esp_mmu_map.c.obj) (fputs)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                              libzephyr.a(heap_caps_zephyr.c.obj) (printf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                              libzephyr.a(esp_mmu_map.c.obj) (snprintf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                              (__l_vfprintf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                              (__l_vfscanf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                              libzephyr.a(log.c.obj) (vprintf)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                              /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (strchr)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                              /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (fgetc)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                              /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o) (__file_str_put)
/opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                              /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o) (ungetc)

Discarded input sections

 .text          0x0000000000000000        0x0 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .data          0x0000000000000000        0x0 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .bss           0x0000000000000000        0x0 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_line    0x0000000000000000        0x0 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .debug_str     0x0000000000000000      0x170 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .comment       0x0000000000000000       0x21 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .text          0x0000000000000000        0x0 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .data          0x0000000000000000        0x0 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .bss           0x0000000000000000        0x0 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .text          0x0000000000000000        0x0 ../app/libapp.a(main.c.obj)
 .data          0x0000000000000000        0x0 ../app/libapp.a(main.c.obj)
 .bss           0x0000000000000000        0x0 ../app/libapp.a(main.c.obj)
 .literal.sys_heap_usable_size
                0x0000000000000000        0x8 libzephyr.a(heap.c.obj)
 .literal.sys_heap_aligned_realloc
                0x0000000000000000       0x50 libzephyr.a(heap.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(heap.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(heap.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(heap.c.obj)
 .text.sys_heap_usable_size
                0x0000000000000000       0x26 libzephyr.a(heap.c.obj)
 .text.sys_heap_aligned_realloc
                0x0000000000000000      0x178 libzephyr.a(heap.c.obj)
 .literal.cbvprintf_package
                0x0000000000000000       0x1c libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package
                0x0000000000000000        0x4 libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbpprintf_external
                0x0000000000000000        0x4 libzephyr.a(cbprintf_packaged.c.obj)
 .literal.cbprintf_package_convert
                0x0000000000000000       0x2c libzephyr.a(cbprintf_packaged.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cbprintf_packaged.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cbprintf_packaged.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbvprintf_package
                0x0000000000000000      0x425 libzephyr.a(cbprintf_packaged.c.obj)
 .rodata.cbvprintf_package
                0x0000000000000000       0xbc libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package
                0x0000000000000000       0x2d libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbpprintf_external
                0x0000000000000000       0x74 libzephyr.a(cbprintf_packaged.c.obj)
 .text.is_ptr   0x0000000000000000       0x5e libzephyr.a(cbprintf_packaged.c.obj)
 .text.cbprintf_package_convert
                0x0000000000000000      0x37a libzephyr.a(cbprintf_packaged.c.obj)
 .debug_frame   0x0000000000000000       0x88 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_info    0x0000000000000000     0x1462 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_abbrev  0x0000000000000000      0x4cb libzephyr.a(cbprintf_packaged.c.obj)
 .debug_loc     0x0000000000000000     0x1ac9 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_aranges
                0x0000000000000000       0x40 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_ranges  0x0000000000000000      0x258 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_line    0x0000000000000000     0x2125 libzephyr.a(cbprintf_packaged.c.obj)
 .debug_str     0x0000000000000000      0x746 libzephyr.a(cbprintf_packaged.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(cbprintf_packaged.c.obj)
 .literal.__printk_get_hook
                0x0000000000000000        0x4 libzephyr.a(printk.c.obj)
 .literal.z_impl_k_str_out
                0x0000000000000000        0x4 libzephyr.a(printk.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(printk.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(printk.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(printk.c.obj)
 .text.arch_printk_char_out
                0x0000000000000000        0x7 libzephyr.a(printk.c.obj)
 .text.__printk_get_hook
                0x0000000000000000        0xa libzephyr.a(printk.c.obj)
 .text.z_impl_k_str_out
                0x0000000000000000       0x1d libzephyr.a(printk.c.obj)
 .literal.sys_sem_init
                0x0000000000000000        0x4 libzephyr.a(sem.c.obj)
 .literal.sys_sem_give
                0x0000000000000000        0x4 libzephyr.a(sem.c.obj)
 .literal.sys_sem_take
                0x0000000000000000        0x4 libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(sem.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(sem.c.obj)
 .text.sys_sem_init
                0x0000000000000000       0x14 libzephyr.a(sem.c.obj)
 .text.sys_sem_give
                0x0000000000000000       0x10 libzephyr.a(sem.c.obj)
 .text.sys_sem_take
                0x0000000000000000       0x30 libzephyr.a(sem.c.obj)
 .text.sys_sem_count_get
                0x0000000000000000        0x7 libzephyr.a(sem.c.obj)
 .debug_frame   0x0000000000000000       0x70 libzephyr.a(sem.c.obj)
 .debug_info    0x0000000000000000      0x4cf libzephyr.a(sem.c.obj)
 .debug_abbrev  0x0000000000000000      0x227 libzephyr.a(sem.c.obj)
 .debug_loc     0x0000000000000000      0x159 libzephyr.a(sem.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 libzephyr.a(sem.c.obj)
 .debug_ranges  0x0000000000000000       0x58 libzephyr.a(sem.c.obj)
 .debug_line    0x0000000000000000      0x458 libzephyr.a(sem.c.obj)
 .debug_str     0x0000000000000000      0x36e libzephyr.a(sem.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(sem.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(thread_entry.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(thread_entry.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(thread_entry.c.obj)
 .literal.encode_uint
                0x0000000000000000        0x8 libzephyr.a(cbprintf_complete.c.obj)
 .literal.z_cbvprintf_impl
                0x0000000000000000       0x3c libzephyr.a(cbprintf_complete.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cbprintf_complete.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cbprintf_complete.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cbprintf_complete.c.obj)
 .text.encode_uint
                0x0000000000000000       0xb8 libzephyr.a(cbprintf_complete.c.obj)
 .text.outs     0x0000000000000000       0x2d libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl.str1.1
                0x0000000000000000        0x6 libzephyr.a(cbprintf_complete.c.obj)
 .text.z_cbvprintf_impl
                0x0000000000000000      0x98d libzephyr.a(cbprintf_complete.c.obj)
 .rodata.z_cbvprintf_impl
                0x0000000000000000       0x58 libzephyr.a(cbprintf_complete.c.obj)
 .debug_frame   0x0000000000000000       0x58 libzephyr.a(cbprintf_complete.c.obj)
 .debug_info    0x0000000000000000     0x1097 libzephyr.a(cbprintf_complete.c.obj)
 .debug_abbrev  0x0000000000000000      0x433 libzephyr.a(cbprintf_complete.c.obj)
 .debug_loc     0x0000000000000000     0x13fd libzephyr.a(cbprintf_complete.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 libzephyr.a(cbprintf_complete.c.obj)
 .debug_ranges  0x0000000000000000      0x150 libzephyr.a(cbprintf_complete.c.obj)
 .debug_line    0x0000000000000000     0x1c16 libzephyr.a(cbprintf_complete.c.obj)
 .debug_str     0x0000000000000000      0x655 libzephyr.a(cbprintf_complete.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(cbprintf_complete.c.obj)
 .literal.assert_post_action
                0x0000000000000000        0x4 libzephyr.a(assert.c.obj)
 .literal.assert_print
                0x0000000000000000        0x4 libzephyr.a(assert.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(assert.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(assert.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(assert.c.obj)
 .text.assert_post_action
                0x0000000000000000        0xc libzephyr.a(assert.c.obj)
 .text.assert_print
                0x0000000000000000       0x26 libzephyr.a(assert.c.obj)
 .debug_frame   0x0000000000000000       0x40 libzephyr.a(assert.c.obj)
 .debug_info    0x0000000000000000      0x1ba libzephyr.a(assert.c.obj)
 .debug_abbrev  0x0000000000000000      0x12d libzephyr.a(assert.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 libzephyr.a(assert.c.obj)
 .debug_ranges  0x0000000000000000       0x18 libzephyr.a(assert.c.obj)
 .debug_line    0x0000000000000000      0x21f libzephyr.a(assert.c.obj)
 .debug_str     0x0000000000000000      0x315 libzephyr.a(assert.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(assert.c.obj)
 .literal.u8_to_dec
                0x0000000000000000        0x4 libzephyr.a(dec.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(dec.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(dec.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(dec.c.obj)
 .text.u8_to_dec
                0x0000000000000000       0x6e libzephyr.a(dec.c.obj)
 .debug_frame   0x0000000000000000       0x28 libzephyr.a(dec.c.obj)
 .debug_info    0x0000000000000000      0x12b libzephyr.a(dec.c.obj)
 .debug_abbrev  0x0000000000000000       0x9c libzephyr.a(dec.c.obj)
 .debug_loc     0x0000000000000000      0x13d libzephyr.a(dec.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 libzephyr.a(dec.c.obj)
 .debug_ranges  0x0000000000000000       0x10 libzephyr.a(dec.c.obj)
 .debug_line    0x0000000000000000      0x2be libzephyr.a(dec.c.obj)
 .debug_str     0x0000000000000000      0x245 libzephyr.a(dec.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(dec.c.obj)
 .literal.bin2hex
                0x0000000000000000        0x8 libzephyr.a(hex.c.obj)
 .literal.hex2bin
                0x0000000000000000        0xc libzephyr.a(hex.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(hex.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(hex.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(hex.c.obj)
 .text.char2hex
                0x0000000000000000       0x3e libzephyr.a(hex.c.obj)
 .text.hex2char
                0x0000000000000000       0x28 libzephyr.a(hex.c.obj)
 .text.bin2hex  0x0000000000000000       0x4e libzephyr.a(hex.c.obj)
 .text.hex2bin  0x0000000000000000       0x70 libzephyr.a(hex.c.obj)
 .debug_frame   0x0000000000000000       0x70 libzephyr.a(hex.c.obj)
 .debug_info    0x0000000000000000      0x2a7 libzephyr.a(hex.c.obj)
 .debug_abbrev  0x0000000000000000      0x119 libzephyr.a(hex.c.obj)
 .debug_loc     0x0000000000000000      0x27b libzephyr.a(hex.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 libzephyr.a(hex.c.obj)
 .debug_ranges  0x0000000000000000       0x28 libzephyr.a(hex.c.obj)
 .debug_line    0x0000000000000000      0x56e libzephyr.a(hex.c.obj)
 .debug_str     0x0000000000000000      0x24c libzephyr.a(hex.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(hex.c.obj)
 .literal.rotate
                0x0000000000000000       0x10 libzephyr.a(rb.c.obj)
 .literal.rb_insert
                0x0000000000000000       0x10 libzephyr.a(rb.c.obj)
 .literal.rb_remove
                0x0000000000000000       0x28 libzephyr.a(rb.c.obj)
 .literal.z_rb_walk
                0x0000000000000000        0x0 libzephyr.a(rb.c.obj)
 .literal.z_rb_foreach_next
                0x0000000000000000        0x4 libzephyr.a(rb.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rb.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rb.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rb.c.obj)
 .text.find_and_stack
                0x0000000000000000       0x36 libzephyr.a(rb.c.obj)
 .text.stack_left_limb
                0x0000000000000000       0x4d libzephyr.a(rb.c.obj)
 .text.set_child
                0x0000000000000000       0x16 libzephyr.a(rb.c.obj)
 .text.rotate   0x0000000000000000       0x80 libzephyr.a(rb.c.obj)
 .text.z_rb_get_minmax
                0x0000000000000000       0x23 libzephyr.a(rb.c.obj)
 .text.rb_insert
                0x0000000000000000      0x14b libzephyr.a(rb.c.obj)
 .text.rb_remove
                0x0000000000000000      0x343 libzephyr.a(rb.c.obj)
 .text.z_rb_walk
                0x0000000000000000       0x23 libzephyr.a(rb.c.obj)
 .text.z_rb_child
                0x0000000000000000       0x16 libzephyr.a(rb.c.obj)
 .text.z_rb_is_black
                0x0000000000000000        0xa libzephyr.a(rb.c.obj)
 .text.rb_contains
                0x0000000000000000       0x31 libzephyr.a(rb.c.obj)
 .text.z_rb_foreach_next
                0x0000000000000000       0x63 libzephyr.a(rb.c.obj)
 .debug_frame   0x0000000000000000      0x130 libzephyr.a(rb.c.obj)
 .debug_info    0x0000000000000000     0x23e5 libzephyr.a(rb.c.obj)
 .debug_abbrev  0x0000000000000000      0x491 libzephyr.a(rb.c.obj)
 .debug_loc     0x0000000000000000     0x2375 libzephyr.a(rb.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 libzephyr.a(rb.c.obj)
 .debug_ranges  0x0000000000000000      0x548 libzephyr.a(rb.c.obj)
 .debug_line    0x0000000000000000     0x2845 libzephyr.a(rb.c.obj)
 .debug_str     0x0000000000000000      0x43c libzephyr.a(rb.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(rb.c.obj)
 .literal.timeutil_timegm64
                0x0000000000000000       0x14 libzephyr.a(timeutil.c.obj)
 .literal.timeutil_timegm
                0x0000000000000000        0x8 libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_update
                0x0000000000000000        0x8 libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_state_set_skew
                0x0000000000000000        0x8 libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_estimate_skew
                0x0000000000000000       0x24 libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_ref_from_local
                0x0000000000000000       0x1c libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_local_from_ref
                0x0000000000000000       0x1c libzephyr.a(timeutil.c.obj)
 .literal.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x20 libzephyr.a(timeutil.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(timeutil.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(timeutil.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm64
                0x0000000000000000      0x122 libzephyr.a(timeutil.c.obj)
 .text.timeutil_timegm
                0x0000000000000000       0x1c libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_update
                0x0000000000000000       0x76 libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_state_set_skew
                0x0000000000000000       0x40 libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_estimate_skew
                0x0000000000000000       0xc6 libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_ref_from_local
                0x0000000000000000       0xc0 libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_local_from_ref
                0x0000000000000000       0xbe libzephyr.a(timeutil.c.obj)
 .text.timeutil_sync_skew_to_ppb
                0x0000000000000000       0x3e libzephyr.a(timeutil.c.obj)
 .debug_frame   0x0000000000000000       0xd0 libzephyr.a(timeutil.c.obj)
 .debug_info    0x0000000000000000      0x882 libzephyr.a(timeutil.c.obj)
 .debug_abbrev  0x0000000000000000      0x1fd libzephyr.a(timeutil.c.obj)
 .debug_loc     0x0000000000000000      0x765 libzephyr.a(timeutil.c.obj)
 .debug_aranges
                0x0000000000000000       0x58 libzephyr.a(timeutil.c.obj)
 .debug_ranges  0x0000000000000000       0x68 libzephyr.a(timeutil.c.obj)
 .debug_line    0x0000000000000000      0xbc7 libzephyr.a(timeutil.c.obj)
 .debug_str     0x0000000000000000      0x4e9 libzephyr.a(timeutil.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(timeutil.c.obj)
 .literal.set_region
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.set_clear_region
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.match_region
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.is_region_set_clear
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_popcount_region
                0x0000000000000000       0x10 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_xor
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_alloc
                0x0000000000000000        0x8 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_find_nth_set
                0x0000000000000000       0x10 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_free
                0x0000000000000000        0x8 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_set
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_is_region_cleared
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_test_and_set_region
                0x0000000000000000        0x8 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_set_region
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .literal.sys_bitarray_clear_region
                0x0000000000000000        0x4 libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bitarray.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bitarray.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bitarray.c.obj)
 .text.setup_bundle_data$constprop$0
                0x0000000000000000       0x3f libzephyr.a(bitarray.c.obj)
 .text.set_region
                0x0000000000000000       0xa0 libzephyr.a(bitarray.c.obj)
 .text.set_clear_region
                0x0000000000000000       0x4e libzephyr.a(bitarray.c.obj)
 .text.match_region
                0x0000000000000000       0xba libzephyr.a(bitarray.c.obj)
 .text.is_region_set_clear
                0x0000000000000000       0x4e libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_popcount_region
                0x0000000000000000       0x9a libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_xor
                0x0000000000000000       0xac libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_bit
                0x0000000000000000       0x32 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_bit
                0x0000000000000000       0x32 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_bit
                0x0000000000000000       0x32 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_bit
                0x0000000000000000       0x46 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_clear_bit
                0x0000000000000000       0x46 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_alloc
                0x0000000000000000       0xa2 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_find_nth_set
                0x0000000000000000       0xca libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_free
                0x0000000000000000       0x62 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_set
                0x0000000000000000       0x15 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_is_region_cleared
                0x0000000000000000       0x15 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_test_and_set_region
                0x0000000000000000       0x6a libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_set_region
                0x0000000000000000       0x15 libzephyr.a(bitarray.c.obj)
 .text.sys_bitarray_clear_region
                0x0000000000000000       0x15 libzephyr.a(bitarray.c.obj)
 .debug_frame   0x0000000000000000      0x1f0 libzephyr.a(bitarray.c.obj)
 .debug_info    0x0000000000000000     0x19f5 libzephyr.a(bitarray.c.obj)
 .debug_abbrev  0x0000000000000000      0x42f libzephyr.a(bitarray.c.obj)
 .debug_loc     0x0000000000000000     0x1188 libzephyr.a(bitarray.c.obj)
 .debug_aranges
                0x0000000000000000       0xb8 libzephyr.a(bitarray.c.obj)
 .debug_ranges  0x0000000000000000      0x108 libzephyr.a(bitarray.c.obj)
 .debug_line    0x0000000000000000     0x23ef libzephyr.a(bitarray.c.obj)
 .debug_str     0x0000000000000000      0x5d9 libzephyr.a(bitarray.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(bitarray.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(configs.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(configs.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(configs.c.obj)
 .literal.esp_heap_runtime_malloc
                0x0000000000000000        0x8 libzephyr.a(esp_heap_runtime.c.obj)
 .literal.esp_heap_runtime_calloc
                0x0000000000000000        0xc libzephyr.a(esp_heap_runtime.c.obj)
 .literal.esp_heap_runtime_realloc
                0x0000000000000000        0x8 libzephyr.a(esp_heap_runtime.c.obj)
 .literal.esp_heap_runtime_free
                0x0000000000000000        0x8 libzephyr.a(esp_heap_runtime.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_heap_runtime.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_heap_runtime.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_heap_runtime.c.obj)
 .text.esp_heap_runtime_malloc
                0x0000000000000000       0x16 libzephyr.a(esp_heap_runtime.c.obj)
 .text.esp_heap_runtime_calloc
                0x0000000000000000       0x32 libzephyr.a(esp_heap_runtime.c.obj)
 .text.esp_heap_runtime_realloc
                0x0000000000000000       0x18 libzephyr.a(esp_heap_runtime.c.obj)
 .text.esp_heap_runtime_free
                0x0000000000000000       0x10 libzephyr.a(esp_heap_runtime.c.obj)
 .literal.sys_arch_reboot
                0x0000000000000000        0x4 libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(soc.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(soc.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(soc.c.obj)
 .text.sys_arch_reboot
                0x0000000000000000        0x9 libzephyr.a(soc.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(soc_cache.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(soc_cache.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(soc_cache.c.obj)
 .literal.smp_log
                0x0000000000000000        0xc libzephyr.a(esp32s3-mp.c.obj)
 .literal.esp_appcpu_start
                0x0000000000000000       0x1c libzephyr.a(esp32s3-mp.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp32s3-mp.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp32s3-mp.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp32s3-mp.c.obj)
 .text.smp_log  0x0000000000000000       0x26 libzephyr.a(esp32s3-mp.c.obj)
 .rodata.esp_appcpu_start.str1.1
                0x0000000000000000       0x26 libzephyr.a(esp32s3-mp.c.obj)
 .text.esp_appcpu_start
                0x0000000000000000       0x70 libzephyr.a(esp32s3-mp.c.obj)
 .debug_frame   0x0000000000000000       0x40 libzephyr.a(esp32s3-mp.c.obj)
 .debug_info    0x0000000000000000      0x1d1 libzephyr.a(esp32s3-mp.c.obj)
 .debug_abbrev  0x0000000000000000      0x122 libzephyr.a(esp32s3-mp.c.obj)
 .debug_loc     0x0000000000000000       0x22 libzephyr.a(esp32s3-mp.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 libzephyr.a(esp32s3-mp.c.obj)
 .debug_ranges  0x0000000000000000       0x18 libzephyr.a(esp32s3-mp.c.obj)
 .debug_line    0x0000000000000000      0x361 libzephyr.a(esp32s3-mp.c.obj)
 .debug_str     0x0000000000000000      0x2be libzephyr.a(esp32s3-mp.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(esp32s3-mp.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(loader.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(loader.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(loader.c.obj)
 .entry_addr    0x0000000000000000        0x4 libzephyr.a(loader.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(tracing_none.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(tracing_none.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_enter
                0x0000000000000000        0x5 libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit
                0x0000000000000000        0x5 libzephyr.a(tracing_none.c.obj)
 .text.sys_trace_isr_exit_to_scheduler
                0x0000000000000000        0x5 libzephyr.a(tracing_none.c.obj)
 .literal.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0x8 libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_get_flash_encryption_mode
                0x0000000000000000       0x2c libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_init_checks
                0x0000000000000000       0x1c libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_set_release_mode
                0x0000000000000000       0x70 libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000       0xf4 libzephyr.a(flash_encrypt.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(flash_encrypt.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(flash_encrypt.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_write_protect_crypt_cnt
                0x0000000000000000        0xe libzephyr.a(flash_encrypt.c.obj)
 .text.esp_get_flash_encryption_mode
                0x0000000000000000       0x6e libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_init_checks.str1.1
                0x0000000000000000       0x79 libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_init_checks
                0x0000000000000000       0x3e libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_set_release_mode.str1.1
                0x0000000000000000       0x75 libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_set_release_mode
                0x0000000000000000       0xcb libzephyr.a(flash_encrypt.c.obj)
 .rodata.esp_flash_encryption_cfg_verify_release_mode.str1.1
                0x0000000000000000      0x3a0 libzephyr.a(flash_encrypt.c.obj)
 .rodata        0x0000000000000000        0xc libzephyr.a(flash_encrypt.c.obj)
 .text.esp_flash_encryption_cfg_verify_release_mode
                0x0000000000000000      0x25b libzephyr.a(flash_encrypt.c.obj)
 .literal.esp_gpio_is_pin_reserved
                0x0000000000000000        0x8 libzephyr.a(esp_gpio_reserve.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_gpio_reserve.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_gpio_reserve.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_gpio_reserve.c.obj)
 .text.esp_gpio_is_pin_reserved
                0x0000000000000000       0x1e libzephyr.a(esp_gpio_reserve.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_hal.c.obj)
 .literal.spi_flash_hal_setup_auto_resume_mode
                0x0000000000000000        0x4 libzephyr.a(spi_flash_hal_iram.c.obj)
 .literal.spi_flash_hal_disable_auto_resume_mode
                0x0000000000000000        0x8 libzephyr.a(spi_flash_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_setup_auto_resume_mode
                0x0000000000000000       0x1a libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_disable_auto_resume_mode
                0x0000000000000000       0x18 libzephyr.a(spi_flash_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .literal.esp_opiflash_set_required_regs
                0x0000000000000000        0x8 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .text.esp_opiflash_set_required_regs
                0x0000000000000000       0x16 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .iram1.11.literal
                0x0000000000000000        0x4 libzephyr.a(esp_flash_api.c.obj)
 .literal.find_region
                0x0000000000000000        0x4 libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_id
                0x0000000000000000        0xc libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_read_unique_chip_id
                0x0000000000000000       0x28 libzephyr.a(esp_flash_api.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x54 libzephyr.a(esp_flash_api.c.obj)
 .iram1.14.literal
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .iram1.16.literal
                0x0000000000000000       0x18 libzephyr.a(esp_flash_api.c.obj)
 .iram1.15.literal
                0x0000000000000000       0x18 libzephyr.a(esp_flash_api.c.obj)
 .iram1.17.literal
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .iram1.18.literal
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_get_protectable_regions
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .iram1.19.literal
                0x0000000000000000       0x10 libzephyr.a(esp_flash_api.c.obj)
 .iram1.20.literal
                0x0000000000000000       0x10 libzephyr.a(esp_flash_api.c.obj)
 .iram1.22.literal
                0x0000000000000000       0x28 libzephyr.a(esp_flash_api.c.obj)
 .iram1.24.literal
                0x0000000000000000       0x40 libzephyr.a(esp_flash_api.c.obj)
 .iram1.28.literal
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .iram1.29.literal
                0x0000000000000000        0x8 libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_suspend_cmd_init
                0x0000000000000000       0x28 libzephyr.a(esp_flash_api.c.obj)
 .literal.esp_flash_app_disable_protect
                0x0000000000000000        0xc libzephyr.a(esp_flash_api.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_flash_api.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_flash_api.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_flash_api.c.obj)
 .iram1.11      0x0000000000000000       0x30 libzephyr.a(esp_flash_api.c.obj)
 .text.find_region
                0x0000000000000000       0x39 libzephyr.a(esp_flash_api.c.obj)
 .iram1.7       0x0000000000000000        0xe libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_id
                0x0000000000000000       0x32 libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_read_unique_chip_id
                0x0000000000000000       0x81 libzephyr.a(esp_flash_api.c.obj)
 .iram1.8       0x0000000000000000      0x13c libzephyr.a(esp_flash_api.c.obj)
 .iram1.14      0x0000000000000000       0x38 libzephyr.a(esp_flash_api.c.obj)
 .iram1.16      0x0000000000000000      0x1d4 libzephyr.a(esp_flash_api.c.obj)
 .iram1.15      0x0000000000000000       0x48 libzephyr.a(esp_flash_api.c.obj)
 .iram1.17      0x0000000000000000       0x48 libzephyr.a(esp_flash_api.c.obj)
 .iram1.18      0x0000000000000000       0x48 libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_get_protectable_regions
                0x0000000000000000       0x54 libzephyr.a(esp_flash_api.c.obj)
 .iram1.19      0x0000000000000000       0x8c libzephyr.a(esp_flash_api.c.obj)
 .iram1.20      0x0000000000000000       0x9d libzephyr.a(esp_flash_api.c.obj)
 .iram1.22      0x0000000000000000      0x150 libzephyr.a(esp_flash_api.c.obj)
 .iram1.24      0x0000000000000000      0x16c libzephyr.a(esp_flash_api.c.obj)
 .iram1.28      0x0000000000000000       0x58 libzephyr.a(esp_flash_api.c.obj)
 .iram1.29      0x0000000000000000       0x4c libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_suspend_cmd_init.str1.1
                0x0000000000000000       0x78 libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_suspend_cmd_init
                0x0000000000000000       0x6c libzephyr.a(esp_flash_api.c.obj)
 .text.esp_flash_app_disable_protect
                0x0000000000000000       0x22 libzephyr.a(esp_flash_api.c.obj)
 .dram1.25      0x0000000000000000       0x1b libzephyr.a(esp_flash_api.c.obj)
 .dram1.23      0x0000000000000000       0x1b libzephyr.a(esp_flash_api.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x28 libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_remove_flash_device
                0x0000000000000000       0x10 libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_bus_add_flash_device
                0x0000000000000000       0x6c libzephyr.a(esp_flash_spi_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_flash_spi_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_flash_spi_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_flash_spi_init.c.obj)
 .iram1.0       0x0000000000000000      0x128 libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_remove_flash_device
                0x0000000000000000       0x36 libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.spi_bus_add_flash_device.str1.1
                0x0000000000000000       0x80 libzephyr.a(esp_flash_spi_init.c.obj)
 .text.spi_bus_add_flash_device
                0x0000000000000000      0x191 libzephyr.a(esp_flash_spi_init.c.obj)
 .literal.spi_flash_mmap_pages
                0x0000000000000000       0x24 libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_dump
                0x0000000000000000        0x8 libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_mmap_get_free_pages
                0x0000000000000000        0x4 libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_cache2phys
                0x0000000000000000        0x4 libzephyr.a(flash_mmap.c.obj)
 .literal.spi_flash_phys2cache
                0x0000000000000000        0x8 libzephyr.a(flash_mmap.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(flash_mmap.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(flash_mmap.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_pages
                0x0000000000000000      0x15e libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_dump
                0x0000000000000000       0x10 libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_mmap_get_free_pages
                0x0000000000000000       0x21 libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_cache2phys
                0x0000000000000000       0x23 libzephyr.a(flash_mmap.c.obj)
 .text.spi_flash_phys2cache
                0x0000000000000000       0x2e libzephyr.a(flash_mmap.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 libzephyr.a(flash_ops.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x8 libzephyr.a(flash_ops.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(flash_ops.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(flash_ops.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(flash_ops.c.obj)
 .iram1.3       0x0000000000000000        0xa libzephyr.a(flash_ops.c.obj)
 .iram1.6       0x0000000000000000       0x1f libzephyr.a(flash_ops.c.obj)
 .dram1.1       0x0000000000000000        0x8 libzephyr.a(flash_ops.c.obj)
 .literal.memspi_host_read
                0x0000000000000000        0x4 libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(memspi_host_driver.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(memspi_host_driver.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(memspi_host_driver.c.obj)
 .text.memspi_host_read
                0x0000000000000000       0x30 libzephyr.a(memspi_host_driver.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_boya.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_boya.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_boya.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_gd.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_gd.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_gd.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_issi.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_issi.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_issi.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_th.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_th.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_th.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .literal.spi_flash_hpm_get_dummy
                0x0000000000000000        0x8 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .literal.spi_flash_hpm_dummy_adjust
                0x0000000000000000        0x4 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_hpm_get_dummy
                0x0000000000000000       0x30 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_hpm_dummy_adjust
                0x0000000000000000        0xb libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss.dummy_conf
                0x0000000000000000        0x5 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x8 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.4       0x0000000000000000        0x7 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.6       0x0000000000000000       0x11 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .dram1.0       0x0000000000000000        0x8 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .literal.esp_flash_init_os_functions
                0x0000000000000000       0x10 libzephyr.a(spi_flash_os_func_app.c.obj)
 .literal.esp_flash_deinit_os_functions
                0x0000000000000000        0x4 libzephyr.a(spi_flash_os_func_app.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
 .text.esp_flash_init_os_functions
                0x0000000000000000       0x47 libzephyr.a(spi_flash_os_func_app.c.obj)
 .text.esp_flash_deinit_os_functions
                0x0000000000000000       0x1e libzephyr.a(spi_flash_os_func_app.c.obj)
 .literal.spi_flash_wrap_probe_c0
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable_c0
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable_77
                0x0000000000000000        0xc libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_clear_c0
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_clear_77
                0x0000000000000000        0xc libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_probe
                0x0000000000000000        0xc libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_enable
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_wrap_disable
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.spi_flash_support_wrap_size
                0x0000000000000000       0x20 libzephyr.a(spi_flash_wrap.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(spi_flash_wrap.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(spi_flash_wrap.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_probe_c0
                0x0000000000000000       0x13 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable_c0
                0x0000000000000000       0x2c libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable_77
                0x0000000000000000       0x56 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_clear_c0
                0x0000000000000000       0x1c libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_clear_77
                0x0000000000000000       0x42 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_probe
                0x0000000000000000       0x46 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_enable
                0x0000000000000000       0x30 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_wrap_disable
                0x0000000000000000       0x2d libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.spi_flash_support_wrap_size.str1.1
                0x0000000000000000       0x40 libzephyr.a(spi_flash_wrap.c.obj)
 .text.spi_flash_support_wrap_size
                0x0000000000000000       0x64 libzephyr.a(spi_flash_wrap.c.obj)
 .bss.chip_wrap
                0x0000000000000000        0x4 libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.str1.1
                0x0000000000000000        0xf libzephyr.a(spi_flash_wrap.c.obj)
 .rodata.spi_flash_wrap_list
                0x0000000000000000       0x20 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_frame   0x0000000000000000       0xe8 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_info    0x0000000000000000      0x6e2 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_abbrev  0x0000000000000000      0x25c libzephyr.a(spi_flash_wrap.c.obj)
 .debug_loc     0x0000000000000000      0x251 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_aranges
                0x0000000000000000       0x60 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_ranges  0x0000000000000000       0x50 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_line    0x0000000000000000      0x785 libzephyr.a(spi_flash_wrap.c.obj)
 .debug_str     0x0000000000000000      0x6ee libzephyr.a(spi_flash_wrap.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(spi_flash_wrap.c.obj)
 .literal.uart_hal_set_sw_flow_ctrl
                0x0000000000000000        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_at_cmd_char
                0x0000000000000000        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_tx_idle_num
                0x0000000000000000        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_loop_back
                0x0000000000000000        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_init
                0x0000000000000000       0x10 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_get_port_num
                0x0000000000000000        0xc libzephyr.a(uart_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(uart_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(uart_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_sw_flow_ctrl
                0x0000000000000000       0xd0 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_at_cmd_char
                0x0000000000000000       0xe2 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_tx_idle_num
                0x0000000000000000       0x22 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_dtr
                0x0000000000000000       0x20 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_wakeup_thrd
                0x0000000000000000       0x20 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_wakeup_thrd
                0x0000000000000000       0x13 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_is_hw_rts_en
                0x0000000000000000        0xf libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_set_loop_back
                0x0000000000000000       0x20 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_init
                0x0000000000000000       0xb9 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_max_rx_timeout_thrd
                0x0000000000000000       0x17 libzephyr.a(uart_hal.c.obj)
 .text.uart_hal_get_port_num
                0x0000000000000000       0x26 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_txfifo_rst
                0x0000000000000000        0x4 libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(uart_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(uart_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_txfifo_rst
                0x0000000000000000       0x29 libzephyr.a(uart_hal_iram.c.obj)
 .text.uart_hal_tx_break
                0x0000000000000000       0x53 libzephyr.a(uart_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(ledc_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(ledc_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(ledc_hal_iram.c.obj)
 .text.ledc_hal_get_duty
                0x0000000000000000       0x21 libzephyr.a(ledc_hal_iram.c.obj)
 .text.ledc_hal_get_fade_end_intr_status
                0x0000000000000000       0x12 libzephyr.a(ledc_hal_iram.c.obj)
 .text.ledc_hal_clear_fade_end_intr_status
                0x0000000000000000       0x17 libzephyr.a(ledc_hal_iram.c.obj)
 .literal.ledc_hal_get_clk_cfg
                0x0000000000000000        0x4 libzephyr.a(ledc_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(ledc_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(ledc_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(ledc_hal.c.obj)
 .text.ledc_hal_get_clk_cfg
                0x0000000000000000       0x32 libzephyr.a(ledc_hal.c.obj)
 .literal.adc_ll_digi_set_pattern_table$constprop$0$isra$0
                0x0000000000000000        0xc libzephyr.a(adc_hal.c.obj)
 .literal.adc_hal_digi_init
                0x0000000000000000       0x2c libzephyr.a(adc_hal.c.obj)
 .literal.adc_hal_digi_deinit
                0x0000000000000000       0x18 libzephyr.a(adc_hal.c.obj)
 .literal.adc_hal_digi_controller_config
                0x0000000000000000       0x30 libzephyr.a(adc_hal.c.obj)
 .literal.adc_hal_digi_stop
                0x0000000000000000        0xc libzephyr.a(adc_hal.c.obj)
 .literal.adc_hal_digi_start
                0x0000000000000000       0x18 libzephyr.a(adc_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(adc_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(adc_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(adc_hal.c.obj)
 .text.adc_ll_digi_set_pattern_table$constprop$0$isra$0
                0x0000000000000000       0x8f libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_dma_ctx_config
                0x0000000000000000       0x1d libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_init
                0x0000000000000000      0x199 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_deinit
                0x0000000000000000       0xb3 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_controller_config
                0x0000000000000000      0x22e libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_get_reading_result
                0x0000000000000000       0x53 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_clr_intr
                0x0000000000000000       0x16 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_dis_intr
                0x0000000000000000       0x23 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_stop
                0x0000000000000000       0x48 libzephyr.a(adc_hal.c.obj)
 .text.adc_hal_digi_start
                0x0000000000000000      0x16c libzephyr.a(adc_hal.c.obj)
 .debug_frame   0x0000000000000000      0x100 libzephyr.a(adc_hal.c.obj)
 .debug_info    0x0000000000000000     0x60b4 libzephyr.a(adc_hal.c.obj)
 .debug_abbrev  0x0000000000000000      0x615 libzephyr.a(adc_hal.c.obj)
 .debug_loc     0x0000000000000000      0xce0 libzephyr.a(adc_hal.c.obj)
 .debug_aranges
                0x0000000000000000       0x68 libzephyr.a(adc_hal.c.obj)
 .debug_ranges  0x0000000000000000      0x448 libzephyr.a(adc_hal.c.obj)
 .debug_line    0x0000000000000000     0x175f libzephyr.a(adc_hal.c.obj)
 .debug_str     0x0000000000000000     0x2f7d libzephyr.a(adc_hal.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(adc_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(adc_hal_common.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(adc_hal_common.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(adc_hal_common.c.obj)
 .literal.adc1_pad_get_io_num
                0x0000000000000000       0x18 libzephyr.a(adc_legacy.c.obj)
 .literal.adc2_pad_get_io_num
                0x0000000000000000       0x18 libzephyr.a(adc_legacy.c.obj)
 .literal.adc_set_clk_div
                0x0000000000000000        0x8 libzephyr.a(adc_legacy.c.obj)
 .literal.adc_set_data_inv
                0x0000000000000000       0x10 libzephyr.a(adc_legacy.c.obj)
 .literal.adc_rtc_reset
                0x0000000000000000        0xc libzephyr.a(adc_legacy.c.obj)
 .literal.adc1_config_width
                0x0000000000000000       0x18 libzephyr.a(adc_legacy.c.obj)
 .literal.adc1_dma_mode_acquire
                0x0000000000000000       0x14 libzephyr.a(adc_legacy.c.obj)
 .literal.adc1_get_voltage
                0x0000000000000000        0x4 libzephyr.a(adc_legacy.c.obj)
 .literal.adc1_ulp_enable
                0x0000000000000000       0x14 libzephyr.a(adc_legacy.c.obj)
 .literal.adc_vref_to_gpio
                0x0000000000000000       0x14 libzephyr.a(adc_legacy.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(adc_legacy.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(adc_legacy.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(adc_legacy.c.obj)
 .text.adc1_pad_get_io_num
                0x0000000000000000       0x43 libzephyr.a(adc_legacy.c.obj)
 .text.adc2_pad_get_io_num
                0x0000000000000000       0x43 libzephyr.a(adc_legacy.c.obj)
 .text.adc_set_clk_div
                0x0000000000000000       0x37 libzephyr.a(adc_legacy.c.obj)
 .text.adc_set_data_inv
                0x0000000000000000       0x66 libzephyr.a(adc_legacy.c.obj)
 .text.adc_rtc_reset
                0x0000000000000000       0x3e libzephyr.a(adc_legacy.c.obj)
 .text.adc1_config_width
                0x0000000000000000       0x42 libzephyr.a(adc_legacy.c.obj)
 .text.adc1_dma_mode_acquire
                0x0000000000000000       0x5e libzephyr.a(adc_legacy.c.obj)
 .text.adc1_get_voltage
                0x0000000000000000       0x10 libzephyr.a(adc_legacy.c.obj)
 .text.adc1_ulp_enable
                0x0000000000000000       0x49 libzephyr.a(adc_legacy.c.obj)
 .text.adc_vref_to_gpio
                0x0000000000000000       0x46 libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$4
                0x0000000000000000       0x12 libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$8
                0x0000000000000000       0x14 libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$9
                0x0000000000000000       0x14 libzephyr.a(adc_legacy.c.obj)
 .literal.adc_lock_acquire
                0x0000000000000000        0xc libzephyr.a(adc_share_hw_ctrl.c.obj)
 .literal.adc_lock_release
                0x0000000000000000       0x24 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .literal.adc_lock_try_acquire
                0x0000000000000000        0xc libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text.adc_lock_acquire
                0x0000000000000000       0x24 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .rodata.adc_lock_release.str1.1
                0x0000000000000000       0x4a libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text.adc_lock_release
                0x0000000000000000       0x62 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text.adc_lock_try_acquire
                0x0000000000000000       0x2e libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text.adc2_wifi_acquire
                0x0000000000000000        0x7 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text.adc2_wifi_release
                0x0000000000000000        0x7 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x11 libzephyr.a(adc_share_hw_ctrl.c.obj)
 ._k_mutex.static.adc2_lock_
                0x0000000000000000       0x14 libzephyr.a(adc_share_hw_ctrl.c.obj)
 ._k_mutex.static.adc1_lock_
                0x0000000000000000       0x14 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .literal.esp_adc_cal_get_voltage
                0x0000000000000000       0x34 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .rodata.esp_adc_cal_get_voltage.str1.1
                0x0000000000000000       0x7e libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .text.esp_adc_cal_get_voltage
                0x0000000000000000       0xa8 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x18 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .literal.rtcio_ll_enable_output_in_sleep
                0x0000000000000000        0x4 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_ll_disable_output_in_sleep
                0x0000000000000000        0x4 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_ll_disable_input_in_sleep
                0x0000000000000000        0x4 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_ll_enable_sleep_setting
                0x0000000000000000        0x4 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_hal_isolate
                0x0000000000000000       0x14 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_hal_set_direction_in_sleep
                0x0000000000000000       0x20 libzephyr.a(rtc_io_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_io_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_io_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_ll_enable_output_in_sleep
                0x0000000000000000       0x22 libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_ll_disable_output_in_sleep
                0x0000000000000000       0x26 libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_ll_disable_input_in_sleep
                0x0000000000000000       0x24 libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_ll_enable_sleep_setting
                0x0000000000000000       0x1f libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_hal_isolate
                0x0000000000000000       0xae libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_hal_set_direction_in_sleep
                0x0000000000000000       0xae libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtc_gpio_force_hold_en_all
                0x0000000000000000        0x8 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_force_hold_dis_all
                0x0000000000000000        0xc libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_deinit
                0x0000000000000000       0x2c libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_set_level
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_get_level
                0x0000000000000000       0x20 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_set_drive_capability
                0x0000000000000000       0x38 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_get_drive_capability
                0x0000000000000000       0x34 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_set_direction_in_sleep
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_pullup_en
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_pulldown_en
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_hold_en
                0x0000000000000000       0x28 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_hold_dis
                0x0000000000000000       0x28 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_isolate
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_wakeup_enable
                0x0000000000000000       0x28 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_wakeup_disable
                0x0000000000000000       0x24 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_io_number_get
                0x0000000000000000        0x4 libzephyr.a(rtc_io.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_io.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_io.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_force_hold_en_all
                0x0000000000000000       0x2c libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_force_hold_dis_all
                0x0000000000000000       0x2a libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_deinit
                0x0000000000000000       0x84 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_set_level
                0x0000000000000000       0x85 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_get_level
                0x0000000000000000       0x51 libzephyr.a(rtc_io.c.obj)
 .rodata.rtc_gpio_set_drive_capability.str1.1
                0x0000000000000000       0x55 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_set_drive_capability
                0x0000000000000000       0xd9 libzephyr.a(rtc_io.c.obj)
 .rodata.rtc_gpio_get_drive_capability.str1.1
                0x0000000000000000       0x2d libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_get_drive_capability
                0x0000000000000000       0xb3 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_set_direction_in_sleep
                0x0000000000000000       0x5c libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_pullup_en
                0x0000000000000000       0x70 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_pulldown_en
                0x0000000000000000       0x70 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_hold_en
                0x0000000000000000       0x6f libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_hold_dis
                0x0000000000000000       0x74 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_isolate
                0x0000000000000000       0x5a libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_wakeup_enable
                0x0000000000000000       0xa2 libzephyr.a(rtc_io.c.obj)
 .text.rtc_gpio_wakeup_disable
                0x0000000000000000       0x78 libzephyr.a(rtc_io.c.obj)
 .text.rtc_io_number_get
                0x0000000000000000        0xd libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x18 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$1
                0x0000000000000000       0x17 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$2
                0x0000000000000000       0x11 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$3
                0x0000000000000000       0x12 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$4
                0x0000000000000000       0x11 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$6
                0x0000000000000000       0x15 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$8
                0x0000000000000000       0x13 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$9
                0x0000000000000000       0x20 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$11
                0x0000000000000000       0x1e libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$12
                0x0000000000000000       0x1e libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$13
                0x0000000000000000       0x13 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$14
                0x0000000000000000       0x13 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$15
                0x0000000000000000       0x10 libzephyr.a(rtc_io.c.obj)
 .literal.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_bit
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_field_cnt
                0x0000000000000000       0x10 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_blob
                0x0000000000000000       0x28 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_cnt
                0x0000000000000000       0x40 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_field_bit
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_reg
                0x0000000000000000       0x24 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_block
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_read_reg
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_write_block
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_begin
                0x0000000000000000       0x24 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_cancel
                0x0000000000000000       0x28 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_batch_write_commit
                0x0000000000000000       0x30 libzephyr.a(esp_efuse_api.c.obj)
 .literal.esp_efuse_check_errors
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_api.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_efuse_api.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_efuse_api.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_efuse_api.c.obj)
 .text.k_mutex_unlock$constprop$0$isra$0
                0x0000000000000000        0xe libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_bit
                0x0000000000000000       0x29 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_field_cnt
                0x0000000000000000       0x40 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_blob
                0x0000000000000000       0x74 libzephyr.a(esp_efuse_api.c.obj)
 .rodata.esp_efuse_write_field_cnt.str1.1
                0x0000000000000000       0x4b libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_cnt
                0x0000000000000000       0xac libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_field_bit
                0x0000000000000000       0x3d libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_reg
                0x0000000000000000       0x52 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_block
                0x0000000000000000       0x44 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_read_reg
                0x0000000000000000       0x22 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_write_block
                0x0000000000000000       0x44 libzephyr.a(esp_efuse_api.c.obj)
 .rodata.esp_efuse_batch_write_begin.str1.1
                0x0000000000000000       0x34 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_begin
                0x0000000000000000       0x48 libzephyr.a(esp_efuse_api.c.obj)
 .rodata.esp_efuse_batch_write_cancel.str1.1
                0x0000000000000000       0x5d libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_cancel
                0x0000000000000000       0x5f libzephyr.a(esp_efuse_api.c.obj)
 .rodata.esp_efuse_batch_write_commit.str1.1
                0x0000000000000000       0x36 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_batch_write_commit
                0x0000000000000000       0x72 libzephyr.a(esp_efuse_api.c.obj)
 .text.esp_efuse_check_errors
                0x0000000000000000        0xd libzephyr.a(esp_efuse_api.c.obj)
 .bss.s_batch_writing_mode
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_api.c.obj)
 ._k_mutex.static.s_efuse_lock_
                0x0000000000000000       0x14 libzephyr.a(esp_efuse_api.c.obj)
 .literal.write_reg
                0x0000000000000000        0xc libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_reset
                0x0000000000000000        0xc libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_efuses
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x14 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_debug_dump_single_block
                0x0000000000000000       0x24 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_debug_dump_pending
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x14 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_cnt
                0x0000000000000000       0x10 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_reg
                0x0000000000000000       0x20 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_write_blob
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_get_read_register_address
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_is_correct_written_data
                0x0000000000000000       0x30 libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .text.write_reg
                0x0000000000000000       0x3d libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_reset
                0x0000000000000000       0x47 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_efuses
                0x0000000000000000       0x28 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_erase_virt_blocks
                0x0000000000000000        0x5 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_update_virt_blocks.str1.1
                0x0000000000000000       0x26 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_update_virt_blocks
                0x0000000000000000       0x22 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_debug_dump_single_block.str1.1
                0x0000000000000000        0xf libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_debug_dump_single_block
                0x0000000000000000       0x66 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_debug_dump_pending
                0x0000000000000000       0x36 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_debug_dump_blocks.str1.1
                0x0000000000000000        0xd libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_debug_dump_blocks
                0x0000000000000000       0x2a libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_cnt
                0x0000000000000000       0x6f libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_write_reg.str1.1
                0x0000000000000000       0x51 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_reg
                0x0000000000000000       0x4c libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_write_blob
                0x0000000000000000       0x9e libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_get_read_register_address
                0x0000000000000000       0x18 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_is_correct_written_data.str1.1
                0x0000000000000000       0xb4 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_is_correct_written_data
                0x0000000000000000       0x96 libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_efuse_table.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_efuse_table.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SYS_DATA_PART2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USER_DATA_MAC_CUSTOM
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USER_DATA
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_OCODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_TEMP_CALIB
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIG_DBIAS_HVT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_V_DIG_DBIAS20
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_V_RTC_DBIAS20
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_K_DIG_LDO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_K_RTC_LDO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_BLK_VERSION_MINOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PKG_VERSION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_D
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_MAC
                0x0000000000000000       0x1c libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_VERSION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FORCE_SEND_RESUME
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_ECC_EN
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_PAGE_SIZE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_TYPE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_PIN_POWER_SELECTION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_UART_PRINT_CONTROL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_ECC_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DIRECT_BOOT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_FLASH_TPUW
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_PHY_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_STRAP_JTAG_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_EN
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_KEY_PURPOSE_0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WDT_DELAY_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_FORCE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_TIEH
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_VDD_SPI_XPD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_USB_EXCHG_PINS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_PAD_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_SOFT_DIS_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_APP_CPU
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_TWAI
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_USB_OTG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_DCACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_DIS_ICACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS_BLOCK_KEY0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_RD_DIS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SOFT_DIS_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_EXCHG_PINS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_KEY0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_CUSTOM_MAC
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLOCK_USR_DATA
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_OCODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_TEMP_CALIB
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SYS_DATA_PART1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIG_DBIAS_HVT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_V_DIG_DBIAS20
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_V_RTC_DBIAS20
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_K_DIG_LDO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_K_RTC_LDO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK_VERSION_MINOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PKG_VERSION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_D
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_MAC
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_BLK1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_VERSION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FORCE_SEND_RESUME
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_ECC_EN
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_PAGE_SIZE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_TYPE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_PIN_POWER_SELECTION
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_UART_PRINT_CONTROL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_ECC_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DIRECT_BOOT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_FLASH_TPUW
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_EN
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_5
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_4
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_3
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_KEY_PURPOSE_0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_WDT_DELAY_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_FORCE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_TIEH
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_VDD_SPI_XPD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_USB_PHY_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_STRAP_JTAG_SEL
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_PAD_JTAG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_APP_CPU
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_TWAI
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_USB_OTG
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_DCACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_DIS_ICACHE
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS_RD_DIS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .data.ESP_EFUSE_WR_DIS
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SYS_DATA_PART2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY5   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY4   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY3   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY2   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY1   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY0   0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USER_DATA_MAC_CUSTOM
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USER_DATA
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.OCODE  0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.TEMP_CALIB
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIG_DBIAS_HVT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.V_DIG_DBIAS20
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.V_RTC_DBIAS20
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.K_DIG_LDO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.K_RTC_LDO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.BLK_VERSION_MINOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PKG_VERSION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D7
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D6
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_WP
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_HD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_CS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_D
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_Q
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.MAC    0x0000000000000000       0x18 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_VERSION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FORCE_SEND_RESUME
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_ECC_EN
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_PAGE_SIZE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_TYPE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.PIN_POWER_SELECTION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.UART_PRINT_CONTROL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_ECC_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DIRECT_BOOT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.FLASH_TPUW
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_PHY_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.STRAP_JTAG_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_EN
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.KEY_PURPOSE_0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WDT_DELAY_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_FORCE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_TIEH
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.VDD_SPI_XPD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_EXT_PHY_ENABLE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.USB_EXCHG_PINS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_PAD_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.SOFT_DIS_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_APP_CPU
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_TWAI
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_USB_OTG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_DCACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.DIS_ICACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS_BLOCK_KEY0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.RD_DIS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SOFT_DIS_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_EXT_PHY_ENABLE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_EXCHG_PINS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_SYS_DATA2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_KEY0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_CUSTOM_MAC
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLOCK_USR_DATA
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_CAL_VOL_ATTEN0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC1_INIT_CODE_ATTEN0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_OCODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_TEMP_CALIB
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_OPTIONAL_UNIQUE_ID
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SYS_DATA_PART1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ADC2_CAL_VOL_ATTEN3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MINOR_HI
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIG_DBIAS_HVT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_V_DIG_DBIAS20
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_V_RTC_DBIAS20
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_K_DIG_LDO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_K_RTC_LDO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK_VERSION_MINOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PKG_VERSION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WAFER_VERSION_MINOR_LO
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D7
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D6
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_DQS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_WP
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_HD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_CS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_D
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_Q
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_PAD_CONFIG_CLK
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_MAC
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_BLK1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DISABLE_BLK_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DISABLE_WAFER_VERSION_MAJOR
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_OTG_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_VERSION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FORCE_SEND_RESUME
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_ECC_EN
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_PAGE_SIZE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_TYPE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_PIN_POWER_SELECTION
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_UART_PRINT_CONTROL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_ENABLE_SECURITY_DOWNLOAD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_ECC_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG_ROM_PRINT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DIRECT_BOOT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_MODE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_FLASH_TPUW
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_AGGRESSIVE_REVOKE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_EN
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_5
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_4
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_3
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_KEY_PURPOSE_0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE2
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE1
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SECURE_BOOT_KEY_REVOKE0
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_SPI_BOOT_CRYPT_CNT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_WDT_DELAY_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_FORCE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_TIEH
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_VDD_SPI_XPD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_USB_PHY_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_STRAP_JTAG_SEL
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_SERIAL_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_MANUAL_ENCRYPT
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_PAD_JTAG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_APP_CPU
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_TWAI
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_USB_OTG
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_FORCE_DOWNLOAD
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_DCACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DOWNLOAD_ICACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_DCACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_DIS_ICACHE
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS_RD_DIS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.WR_DIS
                0x0000000000000000        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .literal.esp_efuse_rtc_calib_get_tsens_val
                0x0000000000000000       0x18 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .text.esp_efuse_rtc_calib_get_tsens_val
                0x0000000000000000       0x57 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .literal.esp_efuse_utility_clear_program_registers
                0x0000000000000000        0x8 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_burn_chip
                0x0000000000000000       0xb0 libzephyr.a(esp_efuse_utility.c.obj)
 .literal.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000       0x20 libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_clear_program_registers
                0x0000000000000000       0x11 libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_check_errors
                0x0000000000000000        0x7 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_burn_chip.str1.1
                0x0000000000000000      0x19f libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_burn_chip
                0x0000000000000000      0x231 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_utility_apply_new_coding_scheme.str1.1
                0x0000000000000000       0x3e libzephyr.a(esp_efuse_utility.c.obj)
 .text.esp_efuse_utility_apply_new_coding_scheme
                0x0000000000000000       0x82 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.range_write_addr_blocks
                0x0000000000000000       0x58 libzephyr.a(esp_efuse_utility.c.obj)
 .bss.write_mass_blocks
                0x0000000000000000      0x160 libzephyr.a(esp_efuse_utility.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(adc_periph.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(adc_periph.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(adc_periph.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_mem.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_mem.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_mem.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_clock_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_clock_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_console.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_console.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_console.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(mpu_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(mpu_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(mpu_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_esp32s3.c.obj)
 .literal.bootloader_clear_bss_section
                0x0000000000000000        0xc libzephyr.a(bootloader_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_init.c.obj)
 .text.bootloader_clear_bss_section
                0x0000000000000000       0x16 libzephyr.a(bootloader_init.c.obj)
 .literal.bootloader_common_ota_select_crc
                0x0000000000000000        0x4 libzephyr.a(bootloader_common_loader.c.obj)
 .literal.bootloader_common_ota_select_valid
                0x0000000000000000        0x8 libzephyr.a(bootloader_common_loader.c.obj)
 .literal.bootloader_common_get_active_otadata
                0x0000000000000000        0xc libzephyr.a(bootloader_common_loader.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_common_loader.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_common_loader.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_crc
                0x0000000000000000       0x14 libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_invalid
                0x0000000000000000       0x19 libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_ota_select_valid
                0x0000000000000000       0x26 libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_select_otadata
                0x0000000000000000       0x4a libzephyr.a(bootloader_common_loader.c.obj)
 .text.bootloader_common_get_active_otadata
                0x0000000000000000       0x30 libzephyr.a(bootloader_common_loader.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x4 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x4 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7.literal
                0x0000000000000000        0x4 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8.literal
                0x0000000000000000       0x14 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9.literal
                0x0000000000000000       0x18 libzephyr.a(flash_qio_mode.c.obj)
 .literal.bootloader_enable_qio_mode
                0x0000000000000000       0x5c libzephyr.a(flash_qio_mode.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(flash_qio_mode.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(flash_qio_mode.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.0       0x0000000000000000       0x15 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1       0x0000000000000000       0x15 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.3       0x0000000000000000       0x29 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.4       0x0000000000000000       0x13 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.5       0x0000000000000000       0x13 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.7       0x0000000000000000       0x13 libzephyr.a(flash_qio_mode.c.obj)
 .iram1.8       0x0000000000000000       0x3c libzephyr.a(flash_qio_mode.c.obj)
 .iram1.9       0x0000000000000000       0x42 libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_enable_qio_mode.str1.1
                0x0000000000000000       0x99 libzephyr.a(flash_qio_mode.c.obj)
 .text.bootloader_enable_qio_mode
                0x0000000000000000      0x17e libzephyr.a(flash_qio_mode.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x22 libzephyr.a(flash_qio_mode.c.obj)
 .rodata.bootloader_flash_qe_support_list
                0x0000000000000000       0x7e libzephyr.a(flash_qio_mode.c.obj)
 .iram1.1.literal
                0x0000000000000000        0xc libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.1       0x0000000000000000       0x28 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$27
                0x0000000000000000       0x10 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(gpio_periph.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(gpio_periph.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(gpio_periph.c.obj)
 .rodata.GPIO_HOLD_MASK
                0x0000000000000000       0xc4 libzephyr.a(gpio_periph.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_io_periph.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_io_periph.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_io_periph.c.obj)
 .literal.bootloader_mmap_get_free_pages
                0x0000000000000000        0x4 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_mmap
                0x0000000000000000       0x28 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_munmap
                0x0000000000000000        0x8 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_write
                0x0000000000000000        0x8 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_sector
                0x0000000000000000        0x4 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_flash_erase_range
                0x0000000000000000        0x4 libzephyr.a(bootloader_flash.c.obj)
 .literal.bootloader_spi_flash_reset
                0x0000000000000000        0x8 libzephyr.a(bootloader_flash.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x18 libzephyr.a(bootloader_flash.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_flash.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_flash.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap_get_free_pages
                0x0000000000000000       0x10 libzephyr.a(bootloader_flash.c.obj)
 .rodata.bootloader_mmap.str1.1
                0x0000000000000000       0x63 libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_mmap
                0x0000000000000000       0x6e libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_munmap
                0x0000000000000000       0x18 libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_write
                0x0000000000000000       0x2a libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_sector
                0x0000000000000000       0x18 libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_flash_erase_range
                0x0000000000000000       0x14 libzephyr.a(bootloader_flash.c.obj)
 .text.bootloader_spi_flash_reset
                0x0000000000000000       0x23 libzephyr.a(bootloader_flash.c.obj)
 .iram1.12      0x0000000000000000       0x9e libzephyr.a(bootloader_flash.c.obj)
 .bss.map       0x0000000000000000        0x4 libzephyr.a(bootloader_flash.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(bootloader_soc.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(bootloader_soc.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(bootloader_soc.c.obj)
 .literal.esp_cpu_stall
                0x0000000000000000        0xc libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_unstall
                0x0000000000000000        0xc libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_reset
                0x0000000000000000        0x8 libzephyr.a(cpu.c.obj)
 .literal.esp_cpu_set_watchpoint
                0x0000000000000000        0x4 libzephyr.a(cpu.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cpu.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cpu.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_stall
                0x0000000000000000       0x7b libzephyr.a(cpu.c.obj)
 .text.esp_cpu_unstall
                0x0000000000000000       0x49 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_reset
                0x0000000000000000       0x25 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_wait_for_intr
                0x0000000000000000        0x8 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_breakpoint
                0x0000000000000000       0x24 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_breakpoint
                0x0000000000000000       0x27 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_set_watchpoint
                0x0000000000000000       0x58 libzephyr.a(cpu.c.obj)
 .text.esp_cpu_clear_watchpoint
                0x0000000000000000       0x1b libzephyr.a(cpu.c.obj)
 .text.esp_cpu_compare_and_set
                0x0000000000000000       0x15 libzephyr.a(cpu.c.obj)
 .literal.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x18 libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0x4 libzephyr.a(clk_ctrl_os.c.obj)
 .literal.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x14 libzephyr.a(clk_ctrl_os.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(clk_ctrl_os.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(clk_ctrl_os.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_enable
                0x0000000000000000       0x50 libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_get_freq
                0x0000000000000000        0xa libzephyr.a(clk_ctrl_os.c.obj)
 .text.periph_rtc_dig_clk8m_disable
                0x0000000000000000       0x38 libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_rc_fast_freq
                0x0000000000000000        0x4 libzephyr.a(clk_ctrl_os.c.obj)
 .bss.s_periph_ref_counts
                0x0000000000000000        0x1 libzephyr.a(clk_ctrl_os.c.obj)
 .bss.periph_spinlock
                0x0000000000000000        0x4 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_frame   0x0000000000000000       0x58 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_info    0x0000000000000000      0x3b7 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b0 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_loc     0x0000000000000000       0x8a libzephyr.a(clk_ctrl_os.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_ranges  0x0000000000000000       0x20 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_line    0x0000000000000000      0x5f6 libzephyr.a(clk_ctrl_os.c.obj)
 .debug_str     0x0000000000000000      0x6c4 libzephyr.a(clk_ctrl_os.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(clk_ctrl_os.c.obj)
 .literal.calc_checksum
                0x0000000000000000        0x4 libzephyr.a(esp_clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 libzephyr.a(esp_clk.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 libzephyr.a(esp_clk.c.obj)
 .literal.esp_rtc_get_time_us
                0x0000000000000000       0x20 libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_slowclk_cal_get
                0x0000000000000000        0x4 libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_private_lock
                0x0000000000000000        0x4 libzephyr.a(esp_clk.c.obj)
 .literal.esp_clk_private_unlock
                0x0000000000000000        0x4 libzephyr.a(esp_clk.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_clk.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_clk.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_clk.c.obj)
 .text.calc_checksum
                0x0000000000000000       0x1c libzephyr.a(esp_clk.c.obj)
 .iram1.1       0x0000000000000000       0x11 libzephyr.a(esp_clk.c.obj)
 .iram1.3       0x0000000000000000       0x11 libzephyr.a(esp_clk.c.obj)
 .text.esp_rtc_get_time_us
                0x0000000000000000       0xb8 libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_slowclk_cal_get
                0x0000000000000000        0xd libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_rtc_time
                0x0000000000000000        0x9 libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_lock
                0x0000000000000000        0xd libzephyr.a(esp_clk.c.obj)
 .text.esp_clk_private_unlock
                0x0000000000000000       0x10 libzephyr.a(esp_clk.c.obj)
 .data.first_call$0
                0x0000000000000000        0x1 libzephyr.a(esp_clk.c.obj)
 .rtc_timer_data_in_rtc_mem
                0x0000000000000000       0x18 libzephyr.a(esp_clk.c.obj)
 .bss.s_esp_rtc_time_lock
                0x0000000000000000        0x4 libzephyr.a(esp_clk.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x4 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.6.literal
                0x0000000000000000        0x4 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x8 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x8 libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_enable
                0x0000000000000000       0x18 libzephyr.a(regi2c_ctrl.c.obj)
 .literal.regi2c_saradc_disable
                0x0000000000000000       0x2c libzephyr.a(regi2c_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(regi2c_ctrl.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(regi2c_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.1       0x0000000000000000       0x26 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.5       0x0000000000000000        0xd libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.6       0x0000000000000000       0x10 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.8       0x0000000000000000       0x21 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.9       0x0000000000000000       0x21 libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_enable
                0x0000000000000000       0x44 libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.regi2c_saradc_disable.str1.1
                0x0000000000000000       0x2e libzephyr.a(regi2c_ctrl.c.obj)
 .text.regi2c_saradc_disable
                0x0000000000000000       0x59 libzephyr.a(regi2c_ctrl.c.obj)
 .bss.s_i2c_saradc_enable_cnt
                0x0000000000000000        0x4 libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.7       0x0000000000000000        0x8 libzephyr.a(regi2c_ctrl.c.obj)
 .rodata.str1.1
                0x0000000000000000        0x7 libzephyr.a(regi2c_ctrl.c.obj)
 .dram1.0       0x0000000000000000        0x4 libzephyr.a(regi2c_ctrl.c.obj)
 .literal.get_idx
                0x0000000000000000       0x14 libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_mac_get_default
                0x0000000000000000       0x10 libzephyr.a(mac_addr.c.obj)
 .literal.get_efuse_mac_custom
                0x0000000000000000       0x24 libzephyr.a(mac_addr.c.obj)
 .literal.get_mac_addr_from_mac_table
                0x0000000000000000       0x20 libzephyr.a(mac_addr.c.obj)
 .literal.esp_mac_addr_len_get
                0x0000000000000000        0x4 libzephyr.a(mac_addr.c.obj)
 .literal.esp_iface_mac_addr_set
                0x0000000000000000       0x2c libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_set
                0x0000000000000000        0x4 libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_custom
                0x0000000000000000        0x4 libzephyr.a(mac_addr.c.obj)
 .literal.esp_efuse_mac_get_default
                0x0000000000000000        0x4 libzephyr.a(mac_addr.c.obj)
 .literal.esp_derive_local_mac
                0x0000000000000000       0x14 libzephyr.a(mac_addr.c.obj)
 .literal.esp_read_mac
                0x0000000000000000       0x58 libzephyr.a(mac_addr.c.obj)
 .literal.esp_base_mac_addr_get
                0x0000000000000000        0x4 libzephyr.a(mac_addr.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(mac_addr.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(mac_addr.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(mac_addr.c.obj)
 .rodata.get_idx.str1.1
                0x0000000000000000       0x3c libzephyr.a(mac_addr.c.obj)
 .text.get_idx  0x0000000000000000       0x3a libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_mac_get_default
                0x0000000000000000       0x29 libzephyr.a(mac_addr.c.obj)
 .rodata.get_efuse_mac_custom.str1.1
                0x0000000000000000       0x26 libzephyr.a(mac_addr.c.obj)
 .text.get_efuse_mac_custom
                0x0000000000000000       0x64 libzephyr.a(mac_addr.c.obj)
 .rodata.get_mac_addr_from_mac_table.str1.1
                0x0000000000000000       0x3a libzephyr.a(mac_addr.c.obj)
 .text.get_mac_addr_from_mac_table
                0x0000000000000000       0x92 libzephyr.a(mac_addr.c.obj)
 .text.esp_mac_addr_len_get
                0x0000000000000000       0x24 libzephyr.a(mac_addr.c.obj)
 .rodata.esp_iface_mac_addr_set.str1.1
                0x0000000000000000       0x85 libzephyr.a(mac_addr.c.obj)
 .text.esp_iface_mac_addr_set
                0x0000000000000000       0x94 libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_set
                0x0000000000000000       0x11 libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_custom
                0x0000000000000000       0x10 libzephyr.a(mac_addr.c.obj)
 .text.esp_efuse_mac_get_default
                0x0000000000000000       0x10 libzephyr.a(mac_addr.c.obj)
 .text.esp_derive_local_mac
                0x0000000000000000       0x66 libzephyr.a(mac_addr.c.obj)
 .rodata.esp_read_mac.str1.1
                0x0000000000000000       0x75 libzephyr.a(mac_addr.c.obj)
 .text.esp_read_mac
                0x0000000000000000      0x124 libzephyr.a(mac_addr.c.obj)
 .text.esp_base_mac_addr_get
                0x0000000000000000       0x11 libzephyr.a(mac_addr.c.obj)
 .data.s_mac_table
                0x0000000000000000       0x28 libzephyr.a(mac_addr.c.obj)
 .debug_frame   0x0000000000000000      0x130 libzephyr.a(mac_addr.c.obj)
 .debug_info    0x0000000000000000      0xc87 libzephyr.a(mac_addr.c.obj)
 .debug_abbrev  0x0000000000000000      0x350 libzephyr.a(mac_addr.c.obj)
 .debug_loc     0x0000000000000000      0x773 libzephyr.a(mac_addr.c.obj)
 .debug_aranges
                0x0000000000000000       0x78 libzephyr.a(mac_addr.c.obj)
 .debug_ranges  0x0000000000000000       0xa0 libzephyr.a(mac_addr.c.obj)
 .debug_line    0x0000000000000000     0x1052 libzephyr.a(mac_addr.c.obj)
 .debug_str     0x0000000000000000      0x72e libzephyr.a(mac_addr.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(mac_addr.c.obj)
 .literal.periph_module_reset
                0x0000000000000000       0x14 libzephyr.a(periph_ctrl.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x14 libzephyr.a(periph_ctrl.c.obj)
 .iram1.4.literal
                0x0000000000000000       0x14 libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(periph_ctrl.c.obj)
 .text.periph_module_reset
                0x0000000000000000       0x5b libzephyr.a(periph_ctrl.c.obj)
 .iram1.3       0x0000000000000000       0x46 libzephyr.a(periph_ctrl.c.obj)
 .iram1.4       0x0000000000000000       0x46 libzephyr.a(periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
 .text.mspi_timing_psram_tuning
                0x0000000000000000        0x5 libzephyr.a(mspi_timing_tuning.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x10 libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_register
                0x0000000000000000       0x2c libzephyr.a(rtc_module.c.obj)
 .literal.rtc_isr_deregister
                0x0000000000000000       0x10 libzephyr.a(rtc_module.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_module.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_module.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_module.c.obj)
 .iram1.5       0x0000000000000000       0x4c libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_register
                0x0000000000000000       0xb2 libzephyr.a(rtc_module.c.obj)
 .text.rtc_isr_deregister
                0x0000000000000000       0x6b libzephyr.a(rtc_module.c.obj)
 .bss.s_rtc_isr_handle
                0x0000000000000000        0x4 libzephyr.a(rtc_module.c.obj)
 .dram1.4       0x0000000000000000        0x4 libzephyr.a(rtc_module.c.obj)
 .dram1.0       0x0000000000000000        0x4 libzephyr.a(rtc_module.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x10 libzephyr.a(hw_random.c.obj)
 .literal.esp_fill_random
                0x0000000000000000        0xc libzephyr.a(hw_random.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(hw_random.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(hw_random.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(hw_random.c.obj)
 .iram1.0       0x0000000000000000       0x46 libzephyr.a(hw_random.c.obj)
 .text.esp_fill_random
                0x0000000000000000       0x2e libzephyr.a(hw_random.c.obj)
 .bss.last_ccount$0
                0x0000000000000000        0x4 libzephyr.a(hw_random.c.obj)
 .debug_frame   0x0000000000000000       0x40 libzephyr.a(hw_random.c.obj)
 .debug_info    0x0000000000000000      0x2b4 libzephyr.a(hw_random.c.obj)
 .debug_abbrev  0x0000000000000000      0x1b7 libzephyr.a(hw_random.c.obj)
 .debug_loc     0x0000000000000000       0xe5 libzephyr.a(hw_random.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 libzephyr.a(hw_random.c.obj)
 .debug_ranges  0x0000000000000000       0x30 libzephyr.a(hw_random.c.obj)
 .debug_line    0x0000000000000000      0x5aa libzephyr.a(hw_random.c.obj)
 .debug_str     0x0000000000000000      0x34f libzephyr.a(hw_random.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(hw_random.c.obj)
 .rtc.entry.literal
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.get_power_down_flags
                0x0000000000000000        0xc libzephyr.a(sleep_modes.c.obj)
 .literal.rtcio_ll_function_select$constprop$0
                0x0000000000000000       0x14 libzephyr.a(sleep_modes.c.obj)
 .iram1.12.literal
                0x0000000000000000       0xf4 libzephyr.a(sleep_modes.c.obj)
 .iram1.15.literal
                0x0000000000000000       0x10 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_periph_use_8m
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_wake_stub_start
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_set_deep_sleep_wake_stub_default_entry
                0x0000000000000000       0x10 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x1c libzephyr.a(sleep_modes.c.obj)
 .literal.esp_set_deep_sleep_wake_stub
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_register_hook
                0x0000000000000000       0x14 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_deregister_hook
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .iram1.14.literal
                0x0000000000000000       0x2c libzephyr.a(sleep_modes.c.obj)
 .literal.esp_light_sleep_start
                0x0000000000000000       0xac libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_wakeup_source
                0x0000000000000000       0x34 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_timer_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x10 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_ext1_wakeup
                0x0000000000000000       0x24 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_gpio_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_uart_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_wifi_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_wifi_wakeup
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_bt_wakeup
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_disable_bt_wakeup
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_wakeup_cause
                0x0000000000000000        0xc libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000        0xc libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x18 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_pd_config
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_deep_sleep_disable_rom_logging
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .literal.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .literal.rtc_sleep_enable_ultra_low
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(sleep_modes.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(sleep_modes.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(sleep_modes.c.obj)
 .rtc.entry.text
                0x0000000000000000        0xb libzephyr.a(sleep_modes.c.obj)
 .text.get_power_down_flags
                0x0000000000000000       0x78 libzephyr.a(sleep_modes.c.obj)
 .text.rtcio_ll_function_select$constprop$0
                0x0000000000000000       0x74 libzephyr.a(sleep_modes.c.obj)
 .iram1.12      0x0000000000000000      0x7da libzephyr.a(sleep_modes.c.obj)
 .iram1.15      0x0000000000000000       0x31 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_periph_use_8m
                0x0000000000000000        0xb libzephyr.a(sleep_modes.c.obj)
 .text.esp_wake_stub_start
                0x0000000000000000        0xf libzephyr.a(sleep_modes.c.obj)
 .text.esp_set_deep_sleep_wake_stub_default_entry
                0x0000000000000000       0x17 libzephyr.a(sleep_modes.c.obj)
 .text.esp_get_deep_sleep_wake_stub
                0x0000000000000000       0x3e libzephyr.a(sleep_modes.c.obj)
 .text.esp_set_deep_sleep_wake_stub
                0x0000000000000000        0xa libzephyr.a(sleep_modes.c.obj)
 .text.esp_default_wake_deep_sleep
                0x0000000000000000        0x5 libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_deep_sleep_register_hook.str1.1
                0x0000000000000000       0x48 libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_register_hook
                0x0000000000000000       0x61 libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_deregister_hook
                0x0000000000000000       0x30 libzephyr.a(sleep_modes.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x2b libzephyr.a(sleep_modes.c.obj)
 .iram1.14      0x0000000000000000       0x61 libzephyr.a(sleep_modes.c.obj)
 .text.esp_light_sleep_start
                0x0000000000000000      0x2be libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_disable_wakeup_source.str1.1
                0x0000000000000000       0x35 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wakeup_source
                0x0000000000000000       0xdd libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ulp_wakeup
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_timer_wakeup
                0x0000000000000000       0x19 libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep
                0x0000000000000000       0x13 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_touchpad_wakeup
                0x0000000000000000       0x16 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_is_valid_wakeup_gpio
                0x0000000000000000       0x10 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext0_wakeup
                0x0000000000000000       0x50 libzephyr.a(sleep_modes.c.obj)
 .rodata.esp_sleep_enable_ext1_wakeup.str1.1
                0x0000000000000000       0x22 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_ext1_wakeup
                0x0000000000000000       0x9b libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_gpio_wakeup
                0x0000000000000000       0x15 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_uart_wakeup
                0x0000000000000000       0x49 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_wakeup
                0x0000000000000000       0x15 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_wakeup
                0x0000000000000000       0x24 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_wifi_beacon_wakeup
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_wifi_beacon_wakeup
                0x0000000000000000        0x8 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_bt_wakeup
                0x0000000000000000       0x16 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_disable_bt_wakeup
                0x0000000000000000       0x24 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_wakeup_cause
                0x0000000000000000       0x67 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_touchpad_wakeup_status
                0x0000000000000000       0x22 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_get_ext1_wakeup_status
                0x0000000000000000       0x56 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_pd_config
                0x0000000000000000       0x62 libzephyr.a(sleep_modes.c.obj)
 .text.esp_deep_sleep_disable_rom_logging
                0x0000000000000000       0x18 libzephyr.a(sleep_modes.c.obj)
 .text.esp_sleep_enable_adc_tsens_monitor
                0x0000000000000000        0xb libzephyr.a(sleep_modes.c.obj)
 .text.rtc_sleep_enable_ultra_low
                0x0000000000000000        0xb libzephyr.a(sleep_modes.c.obj)
 .bss.s_suspended_uarts_bmap
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .bss.wake_stub_fn_handler
                0x0000000000000000        0x4 libzephyr.a(sleep_modes.c.obj)
 .bss.s_periph_use_8m_flag
                0x0000000000000000        0x1 libzephyr.a(sleep_modes.c.obj)
 .bss.s_ultra_low_enabled
                0x0000000000000000        0x1 libzephyr.a(sleep_modes.c.obj)
 .bss.s_adc_tsen_enabled
                0x0000000000000000        0x1 libzephyr.a(sleep_modes.c.obj)
 .bss.s_light_sleep_wakeup
                0x0000000000000000        0x1 libzephyr.a(sleep_modes.c.obj)
 .data.s_config
                0x0000000000000000       0x68 libzephyr.a(sleep_modes.c.obj)
 .bss.s_dslp_cb
                0x0000000000000000        0xc libzephyr.a(sleep_modes.c.obj)
 .debug_frame   0x0000000000000000      0x3a0 libzephyr.a(sleep_modes.c.obj)
 .debug_info    0x0000000000000000     0xa128 libzephyr.a(sleep_modes.c.obj)
 .debug_abbrev  0x0000000000000000      0x782 libzephyr.a(sleep_modes.c.obj)
 .debug_loc     0x0000000000000000     0x1061 libzephyr.a(sleep_modes.c.obj)
 .debug_aranges
                0x0000000000000000      0x148 libzephyr.a(sleep_modes.c.obj)
 .debug_ranges  0x0000000000000000      0x578 libzephyr.a(sleep_modes.c.obj)
 .debug_line    0x0000000000000000     0x3bbd libzephyr.a(sleep_modes.c.obj)
 .debug_str     0x0000000000000000     0x6afd libzephyr.a(sleep_modes.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(sleep_modes.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cpu_region_protect.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cpu_region_protect.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cpu_region_protect.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_clk_tree.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_clk_tree.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_clk_tree.c.obj)
 .literal.rtc_clk_bbpll_add_consumer
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_bbpll_remove_consumer
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_bootstrap
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enabled
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8m_enabled
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8md256_enabled
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_slow_freq_get_hz
                0x0000000000000000        0x8 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x10 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_enable
                0x0000000000000000        0x8 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_clk8m_disable
                0x0000000000000000        0x8 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_dig_8m_enabled
                0x0000000000000000        0x4 libzephyr.a(rtc_clk.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_clk.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_clk.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_bbpll_add_consumer
                0x0000000000000000        0xe libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_bbpll_remove_consumer
                0x0000000000000000        0xe libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_bootstrap
                0x0000000000000000        0xe libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_32k_enabled
                0x0000000000000000       0x1e libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8m_enabled
                0x0000000000000000       0x15 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_8md256_enabled
                0x0000000000000000       0x15 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_slow_freq_get_hz
                0x0000000000000000       0x18 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_clk_cpu_freq_set_config_fast
                0x0000000000000000       0x38 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_enable
                0x0000000000000000       0x20 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_clk8m_disable
                0x0000000000000000       0x20 libzephyr.a(rtc_clk.c.obj)
 .text.rtc_dig_8m_enabled
                0x0000000000000000       0x10 libzephyr.a(rtc_clk.c.obj)
 .rodata.CSWTCH$87
                0x0000000000000000        0xc libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_vddsdio_get_config
                0x0000000000000000        0x8 libzephyr.a(rtc_init.c.obj)
 .literal.rtc_vddsdio_set_config
                0x0000000000000000        0x4 libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_get_config
                0x0000000000000000       0x63 libzephyr.a(rtc_init.c.obj)
 .text.rtc_vddsdio_set_config
                0x0000000000000000       0x48 libzephyr.a(rtc_init.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_clk_init.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_clk_init.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_clk_init.c.obj)
 .literal.rtc_clk_cal_ratio
                0x0000000000000000        0x8 libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_wait_for_slow_cycle
                0x0000000000000000        0x8 libzephyr.a(rtc_time.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_time.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_time.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_cal_ratio
                0x0000000000000000       0x24 libzephyr.a(rtc_time.c.obj)
 .text.rtc_time_slowclk_to_us
                0x0000000000000000       0x1c libzephyr.a(rtc_time.c.obj)
 .text.rtc_clk_wait_for_slow_cycle
                0x0000000000000000       0x2f libzephyr.a(rtc_time.c.obj)
 .literal.rtc_sleep_get_default_config
                0x0000000000000000       0x18 libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_init
                0x0000000000000000       0xa0 libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_low_init
                0x0000000000000000       0x14 libzephyr.a(rtc_sleep.c.obj)
 .literal.rtc_sleep_start
                0x0000000000000000       0x2c libzephyr.a(rtc_sleep.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(rtc_sleep.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(rtc_sleep.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_get_default_config
                0x0000000000000000      0x140 libzephyr.a(rtc_sleep.c.obj)
 .rodata        0x0000000000000000        0x4 libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_init
                0x0000000000000000      0x3e9 libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_low_init
                0x0000000000000000       0x62 libzephyr.a(rtc_sleep.c.obj)
 .text.rtc_sleep_start
                0x0000000000000000       0xb5 libzephyr.a(rtc_sleep.c.obj)
 .literal.sar_periph_ctrl_power_enable
                0x0000000000000000        0x8 libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_power_disable
                0x0000000000000000        0xc libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
 .literal.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_enable
                0x0000000000000000       0x35 libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_power_disable
                0x0000000000000000       0x3b libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_acquire
                0x0000000000000000        0xb libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_pwdet_power_release
                0x0000000000000000        0xb libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_acquire
                0x0000000000000000        0xb libzephyr.a(sar_periph_ctrl.c.obj)
 .text.sar_periph_ctrl_adc_continuous_power_release
                0x0000000000000000        0xb libzephyr.a(sar_periph_ctrl.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(systimer.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(systimer.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(systimer.c.obj)
 .literal.mspi_timing_config_get_cs_timing
                0x0000000000000000        0x8 libzephyr.a(mspi_timing_config.c.obj)
 .literal.mspi_timing_config_get_flash_clock_reg
                0x0000000000000000        0x4 libzephyr.a(mspi_timing_config.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(mspi_timing_config.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(mspi_timing_config.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(mspi_timing_config.c.obj)
 .text.mspi_timing_config_get_cs_timing
                0x0000000000000000       0x48 libzephyr.a(mspi_timing_config.c.obj)
 .text.mspi_timing_config_get_flash_clock_reg
                0x0000000000000000        0xd libzephyr.a(mspi_timing_config.c.obj)
 .iram1.17.literal
                0x0000000000000000        0xc libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16.literal
                0x0000000000000000        0xc libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x20 libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0x34 libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000       0x74 libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5.literal
                0x0000000000000000       0x5c libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0x30 libzephyr.a(esp_mmu_map.c.obj)
 .literal.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x24 libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_mmu_map.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_mmu_map.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_mmu_map.c.obj)
 .iram1.17      0x0000000000000000       0x23 libzephyr.a(esp_mmu_map.c.obj)
 .iram1.16      0x0000000000000000       0x22 libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_get_max_consecutive_free_block_size
                0x0000000000000000       0x8a libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_reserve_block_with_caps
                0x0000000000000000       0xed libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_dump_mapped_blocks.str1.1
                0x0000000000000000      0x137 libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_map_dump_mapped_blocks
                0x0000000000000000      0x111 libzephyr.a(esp_mmu_map.c.obj)
 .iram1.5       0x0000000000000000       0xf1 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_vaddr_to_paddr.str1.1
                0x0000000000000000       0x60 libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_vaddr_to_paddr
                0x0000000000000000       0xbe libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_paddr_to_vaddr.str1.1
                0x0000000000000000       0x27 libzephyr.a(esp_mmu_map.c.obj)
 .text.esp_mmu_paddr_to_vaddr
                0x0000000000000000       0x7a libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$0
                0x0000000000000000       0x17 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$1
                0x0000000000000000       0x17 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$4
                0x0000000000000000       0x24 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$5
                0x0000000000000000       0x30 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.15      0x0000000000000000       0x1a libzephyr.a(esp_mmu_map.c.obj)
 .dram1.14      0x0000000000000000       0x18 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.13      0x0000000000000000       0x1a libzephyr.a(esp_mmu_map.c.obj)
 .dram1.12      0x0000000000000000       0x1b libzephyr.a(esp_mmu_map.c.obj)
 .dram1.11      0x0000000000000000       0x1e libzephyr.a(esp_mmu_map.c.obj)
 .dram1.10      0x0000000000000000       0x20 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.9       0x0000000000000000       0x19 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.8       0x0000000000000000       0x18 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.7       0x0000000000000000       0x1d libzephyr.a(esp_mmu_map.c.obj)
 .dram1.6       0x0000000000000000       0x1f libzephyr.a(esp_mmu_map.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(ext_mem_layout.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(ext_mem_layout.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(ext_mem_layout.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_crc.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_crc.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_crc.c.obj)
 .debug_info    0x0000000000000000       0x64 libzephyr.a(esp_rom_crc.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 libzephyr.a(esp_rom_crc.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 libzephyr.a(esp_rom_crc.c.obj)
 .debug_line    0x0000000000000000       0x70 libzephyr.a(esp_rom_crc.c.obj)
 .debug_str     0x0000000000000000      0x21a libzephyr.a(esp_rom_crc.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(esp_rom_crc.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 libzephyr.a(esp_rom_sys.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_sys.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_sys.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_sys.c.obj)
 .iram1.0       0x0000000000000000       0x21 libzephyr.a(esp_rom_sys.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 libzephyr.a(esp_rom_uart.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_uart.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_uart.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_uart.c.obj)
 .iram1.1       0x0000000000000000       0x11 libzephyr.a(esp_rom_uart.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_spiflash.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_spiflash.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_info    0x0000000000000000       0x64 libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_line    0x0000000000000000       0x75 libzephyr.a(esp_rom_spiflash.c.obj)
 .debug_str     0x0000000000000000      0x21f libzephyr.a(esp_rom_spiflash.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(esp_rom_spiflash.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_efuse.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_efuse.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_efuse.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_systimer.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_systimer.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_systimer.c.obj)
 .debug_info    0x0000000000000000       0x64 libzephyr.a(esp_rom_systimer.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 libzephyr.a(esp_rom_systimer.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 libzephyr.a(esp_rom_systimer.c.obj)
 .debug_line    0x0000000000000000       0x75 libzephyr.a(esp_rom_systimer.c.obj)
 .debug_str     0x0000000000000000      0x21f libzephyr.a(esp_rom_systimer.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(esp_rom_systimer.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_wdt.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_wdt.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_wdt.c.obj)
 .debug_info    0x0000000000000000       0x64 libzephyr.a(esp_rom_wdt.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 libzephyr.a(esp_rom_wdt.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 libzephyr.a(esp_rom_wdt.c.obj)
 .debug_line    0x0000000000000000       0x70 libzephyr.a(esp_rom_wdt.c.obj)
 .debug_str     0x0000000000000000      0x21a libzephyr.a(esp_rom_wdt.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(esp_rom_wdt.c.obj)
 .text          0x0000000000000000       0x81 libzephyr.a(esp_rom_longjmp.S.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_longjmp.S.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_line    0x0000000000000000      0x1bc libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_info    0x0000000000000000       0x24 libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_abbrev  0x0000000000000000       0x14 libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_aranges
                0x0000000000000000       0x20 libzephyr.a(esp_rom_longjmp.S.obj)
 .debug_str     0x0000000000000000       0x91 libzephyr.a(esp_rom_longjmp.S.obj)
 .literal.Cache_Count_Flash_Pages
                0x0000000000000000        0x4 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .text.Cache_Count_Flash_Pages
                0x0000000000000000       0x1c libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .literal._esp_error_check_failed_without_abort
                0x0000000000000000       0x24 libzephyr.a(esp_err.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_err.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_err.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_err.c.obj)
 .text._esp_error_check_failed_without_abort
                0x0000000000000000       0x4b libzephyr.a(esp_err.c.obj)
 .literal.select_rtc_slow_clk
                0x0000000000000000       0x28 libzephyr.a(clk.c.obj)
 .literal.esp_clk_init
                0x0000000000000000       0x3c libzephyr.a(clk.c.obj)
 .literal.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0x4 libzephyr.a(clk.c.obj)
 .literal.esp_perip_clk_init
                0x0000000000000000       0x38 libzephyr.a(clk.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(clk.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(clk.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(clk.c.obj)
 .rodata.select_rtc_slow_clk.str1.1
                0x0000000000000000       0x50 libzephyr.a(clk.c.obj)
 .text.select_rtc_slow_clk
                0x0000000000000000       0x7f libzephyr.a(clk.c.obj)
 .rodata        0x0000000000000000        0x4 libzephyr.a(clk.c.obj)
 .text.esp_clk_init
                0x0000000000000000       0xa5 libzephyr.a(clk.c.obj)
 .text.rtc_clk_select_rtc_slow_clk
                0x0000000000000000        0xe libzephyr.a(clk.c.obj)
 .text.esp_perip_clk_init
                0x0000000000000000      0x12a libzephyr.a(clk.c.obj)
 .debug_frame   0x0000000000000000       0x70 libzephyr.a(clk.c.obj)
 .debug_info    0x0000000000000000      0xbe4 libzephyr.a(clk.c.obj)
 .debug_abbrev  0x0000000000000000      0x36a libzephyr.a(clk.c.obj)
 .debug_loc     0x0000000000000000      0x2fd libzephyr.a(clk.c.obj)
 .debug_aranges
                0x0000000000000000       0x38 libzephyr.a(clk.c.obj)
 .debug_ranges  0x0000000000000000       0x40 libzephyr.a(clk.c.obj)
 .debug_line    0x0000000000000000      0xadc libzephyr.a(clk.c.obj)
 .debug_str     0x0000000000000000     0x11de libzephyr.a(clk.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(clk.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x24 libzephyr.a(system_internal.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x68 libzephyr.a(system_internal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(system_internal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(system_internal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(system_internal.c.obj)
 .iram1.0       0x0000000000000000       0x88 libzephyr.a(system_internal.c.obj)
 .rodata        0x0000000000000000       0x10 libzephyr.a(system_internal.c.obj)
 .iram1.1       0x0000000000000000      0x107 libzephyr.a(system_internal.c.obj)
 .debug_frame   0x0000000000000000       0x40 libzephyr.a(system_internal.c.obj)
 .debug_info    0x0000000000000000     0x4cd4 libzephyr.a(system_internal.c.obj)
 .debug_abbrev  0x0000000000000000      0x334 libzephyr.a(system_internal.c.obj)
 .debug_loc     0x0000000000000000       0x6c libzephyr.a(system_internal.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 libzephyr.a(system_internal.c.obj)
 .debug_ranges  0x0000000000000000       0x18 libzephyr.a(system_internal.c.obj)
 .debug_line    0x0000000000000000      0x830 libzephyr.a(system_internal.c.obj)
 .debug_str     0x0000000000000000     0x321a libzephyr.a(system_internal.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(system_internal.c.obj)
 .literal.esp_reset_reason
                0x0000000000000000        0x4 libzephyr.a(reset_reason.c.obj)
 .iram1.0.literal
                0x0000000000000000        0xc libzephyr.a(reset_reason.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(reset_reason.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(reset_reason.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(reset_reason.c.obj)
 .text.esp_reset_reason
                0x0000000000000000        0xa libzephyr.a(reset_reason.c.obj)
 .iram1.0       0x0000000000000000       0x26 libzephyr.a(reset_reason.c.obj)
 .literal.ets_timer_setfn
                0x0000000000000000       0x24 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x28 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x28 libzephyr.a(ets_timer_legacy.c.obj)
 .literal.ets_timer_done
                0x0000000000000000        0x8 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x8 libzephyr.a(ets_timer_legacy.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(ets_timer_legacy.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(ets_timer_legacy.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.ets_timer_setfn.str1.1
                0x0000000000000000       0xa1 libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_setfn
                0x0000000000000000       0x52 libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x66 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.1       0x0000000000000000       0x57 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.2       0x0000000000000000       0x5f libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_done
                0x0000000000000000       0x1c libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.3       0x0000000000000000       0x16 libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_init
                0x0000000000000000        0x5 libzephyr.a(ets_timer_legacy.c.obj)
 .text.ets_timer_deinit
                0x0000000000000000        0x5 libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$2
                0x0000000000000000        0xe libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$1
                0x0000000000000000       0x11 libzephyr.a(ets_timer_legacy.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x10 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_frame   0x0000000000000000       0xb8 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_info    0x0000000000000000      0x7c4 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_abbrev  0x0000000000000000      0x2d2 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_loc     0x0000000000000000      0x177 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_aranges
                0x0000000000000000       0x50 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_ranges  0x0000000000000000       0x88 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_line    0x0000000000000000      0x749 libzephyr.a(ets_timer_legacy.c.obj)
 .debug_str     0x0000000000000000      0x4d6 libzephyr.a(ets_timer_legacy.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(ets_timer_legacy.c.obj)
 .iram1.8.literal
                0x0000000000000000        0x4 libzephyr.a(esp_timer.c.obj)
 .iram1.5.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer.c.obj)
 .iram1.9.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer.c.obj)
 .literal.timer_task
                0x0000000000000000       0x34 libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_create
                0x0000000000000000        0x8 libzephyr.a(esp_timer.c.obj)
 .iram1.0.literal
                0x0000000000000000       0x28 libzephyr.a(esp_timer.c.obj)
 .iram1.1.literal
                0x0000000000000000       0x14 libzephyr.a(esp_timer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x20 libzephyr.a(esp_timer.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_delete
                0x0000000000000000       0x14 libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_init
                0x0000000000000000       0x68 libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_deinit
                0x0000000000000000       0x14 libzephyr.a(esp_timer.c.obj)
 .literal.esp_timer_dump
                0x0000000000000000       0x44 libzephyr.a(esp_timer.c.obj)
 .iram1.11.literal
                0x0000000000000000       0x10 libzephyr.a(esp_timer.c.obj)
 .iram1.12.literal
                0x0000000000000000       0x10 libzephyr.a(esp_timer.c.obj)
 .iram1.13.literal
                0x0000000000000000        0xc libzephyr.a(esp_timer.c.obj)
 .iram1.14.literal
                0x0000000000000000        0xc libzephyr.a(esp_timer.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_timer.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_timer.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_timer.c.obj)
 .iram1.8       0x0000000000000000       0x17 libzephyr.a(esp_timer.c.obj)
 .iram1.5       0x0000000000000000       0x52 libzephyr.a(esp_timer.c.obj)
 .iram1.4       0x0000000000000000       0x75 libzephyr.a(esp_timer.c.obj)
 .iram1.9       0x0000000000000000        0xe libzephyr.a(esp_timer.c.obj)
 .text.timer_task
                0x0000000000000000      0x123 libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_create
                0x0000000000000000       0x64 libzephyr.a(esp_timer.c.obj)
 .iram1.0       0x0000000000000000       0xde libzephyr.a(esp_timer.c.obj)
 .iram1.1       0x0000000000000000       0x6c libzephyr.a(esp_timer.c.obj)
 .iram1.2       0x0000000000000000       0x94 libzephyr.a(esp_timer.c.obj)
 .iram1.3       0x0000000000000000       0x3c libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_delete
                0x0000000000000000       0x60 libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_init.str1.1
                0x0000000000000000       0xb0 libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_init
                0x0000000000000000      0x100 libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_deinit
                0x0000000000000000       0x2e libzephyr.a(esp_timer.c.obj)
 .rodata.esp_timer_dump.str1.1
                0x0000000000000000       0x54 libzephyr.a(esp_timer.c.obj)
 .text.esp_timer_dump
                0x0000000000000000       0xc4 libzephyr.a(esp_timer.c.obj)
 .iram1.11      0x0000000000000000       0x36 libzephyr.a(esp_timer.c.obj)
 .iram1.12      0x0000000000000000       0x4c libzephyr.a(esp_timer.c.obj)
 .iram1.13      0x0000000000000000       0x45 libzephyr.a(esp_timer.c.obj)
 .iram1.14      0x0000000000000000       0x52 libzephyr.a(esp_timer.c.obj)
 .iram1.15      0x0000000000000000       0x13 libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_lock
                0x0000000000000000        0x4 libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_semaphore
                0x0000000000000000       0x10 libzephyr.a(esp_timer.c.obj)
 .bss.s_timer_task
                0x0000000000000000       0x60 libzephyr.a(esp_timer.c.obj)
 .bss.timer_task_stack
                0x0000000000000000     0x1000 libzephyr.a(esp_timer.c.obj)
 .bss.s_timers  0x0000000000000000        0x4 libzephyr.a(esp_timer.c.obj)
 .bss.init_status
                0x0000000000000000        0x1 libzephyr.a(esp_timer.c.obj)
 .iram1.4.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_lock
                0x0000000000000000        0x4 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_unlock
                0x0000000000000000        0x4 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x8 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2.literal
                0x0000000000000000       0x14 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.3.literal
                0x0000000000000000        0x4 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_set
                0x0000000000000000        0xc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_advance
                0x0000000000000000        0xc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_init
                0x0000000000000000       0x28 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_deinit
                0x0000000000000000        0xc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.esp_timer_impl_get_alarm_reg
                0x0000000000000000        0xc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.4       0x0000000000000000       0x26 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_lock
                0x0000000000000000        0xd libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_unlock
                0x0000000000000000       0x10 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.0       0x0000000000000000       0x14 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.1       0x0000000000000000       0x1a libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.2       0x0000000000000000       0x3c libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.3       0x0000000000000000       0x12 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.5       0x0000000000000000        0x5 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_set
                0x0000000000000000       0x4c libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_advance
                0x0000000000000000       0x24 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .rodata.esp_timer_impl_init.str1.1
                0x0000000000000000       0x3c libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_init
                0x0000000000000000       0x52 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_deinit
                0x0000000000000000       0x34 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .iram1.6       0x0000000000000000        0x9 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .text.esp_timer_impl_get_alarm_reg
                0x0000000000000000       0x24 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .data.timestamp_id$0
                0x0000000000000000       0x10 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_time_update_lock
                0x0000000000000000        0x4 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.s_alarm_handler
                0x0000000000000000        0x4 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .literal.efuse_hal_get_mac
                0x0000000000000000        0x4 libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_blk_version
                0x0000000000000000        0x4 libzephyr.a(efuse_hal.c.obj)
 .iram1.1.literal
                0x0000000000000000        0x4 libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_get_mac
                0x0000000000000000       0x19 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_blk_version
                0x0000000000000000       0x23 libzephyr.a(efuse_hal.c.obj)
 .iram1.1       0x0000000000000000       0x11 libzephyr.a(efuse_hal.c.obj)
 .literal.cache_hal_writeback_addr
                0x0000000000000000        0x8 libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_freeze
                0x0000000000000000        0xc libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_unfreeze
                0x0000000000000000        0xc libzephyr.a(cache_hal.c.obj)
 .literal.cache_hal_get_cache_line_size
                0x0000000000000000        0x8 libzephyr.a(cache_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cache_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cache_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_writeback_addr
                0x0000000000000000       0x1e libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_freeze
                0x0000000000000000       0x2e libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_unfreeze
                0x0000000000000000       0x26 libzephyr.a(cache_hal.c.obj)
 .text.cache_hal_get_cache_line_size
                0x0000000000000000       0x20 libzephyr.a(cache_hal.c.obj)
 .literal.mmu_hal_vaddr_to_paddr
                0x0000000000000000        0x8 libzephyr.a(mmu_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(mmu_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(mmu_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_pages_to_bytes
                0x0000000000000000        0x8 libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_bytes_to_pages
                0x0000000000000000        0x8 libzephyr.a(mmu_hal.c.obj)
 .text.mmu_hal_vaddr_to_paddr
                0x0000000000000000       0x3b libzephyr.a(mmu_hal.c.obj)
 .literal.systimer_hal_deinit
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_counter_value
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_time
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_target
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_set_alarm_period
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_get_alarm_value
                0x0000000000000000        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_counter_value_advance
                0x0000000000000000        0x8 libzephyr.a(systimer_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(systimer_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(systimer_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_deinit
                0x0000000000000000       0x1b libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_clock_source
                0x0000000000000000        0x5 libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_clock_source
                0x0000000000000000        0x7 libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_counter_value
                0x0000000000000000       0x4e libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_time
                0x0000000000000000       0x1a libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_target
                0x0000000000000000       0x70 libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_set_alarm_period
                0x0000000000000000       0x6f libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_get_alarm_value
                0x0000000000000000       0x1c libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_enable_alarm_int
                0x0000000000000000       0x1e libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_counter_value_advance
                0x0000000000000000       0x5e libzephyr.a(systimer_hal.c.obj)
 .text.systimer_hal_counter_can_stall_by_cpu
                0x0000000000000000       0x34 libzephyr.a(systimer_hal.c.obj)
 .literal.wdt_hal_init
                0x0000000000000000       0x38 libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_deinit
                0x0000000000000000        0x8 libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_config_stage
                0x0000000000000000       0x24 libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(wdt_hal_iram.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(wdt_hal_iram.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_init
                0x0000000000000000      0x292 libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_deinit
                0x0000000000000000       0xca libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_config_stage
                0x0000000000000000      0x14c libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_enable
                0x0000000000000000       0x4c libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_handle_intr
                0x0000000000000000       0x51 libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_feed
                0x0000000000000000       0x2a libzephyr.a(wdt_hal_iram.c.obj)
 .text.wdt_hal_is_enabled
                0x0000000000000000       0x1d libzephyr.a(wdt_hal_iram.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(clk_tree_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(clk_tree_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(clk_tree_hal.c.obj)
 .literal.efuse_hal_set_timing
                0x0000000000000000        0x8 libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_read
                0x0000000000000000        0xc libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_clear_program_registers
                0x0000000000000000        0x4 libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_program
                0x0000000000000000       0x14 libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_rs_calculate
                0x0000000000000000        0x4 libzephyr.a(efuse_hal.c.obj)
 .literal.efuse_hal_is_coding_error_in_block
                0x0000000000000000        0xc libzephyr.a(efuse_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_set_timing
                0x0000000000000000       0x68 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_read
                0x0000000000000000       0x50 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_clear_program_registers
                0x0000000000000000        0xb libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_program
                0x0000000000000000       0x54 libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_rs_calculate
                0x0000000000000000        0xf libzephyr.a(efuse_hal.c.obj)
 .text.efuse_hal_is_coding_error_in_block
                0x0000000000000000       0x56 libzephyr.a(efuse_hal.c.obj)
 .literal.xt_wdt_hal_init
                0x0000000000000000        0x8 libzephyr.a(xt_wdt_hal.c.obj)
 .literal.xt_wdt_hal_enable_backup_clk
                0x0000000000000000        0x4 libzephyr.a(xt_wdt_hal.c.obj)
 .literal.xt_wdt_hal_enable
                0x0000000000000000        0x4 libzephyr.a(xt_wdt_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(xt_wdt_hal.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(xt_wdt_hal.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_init
                0x0000000000000000       0x38 libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_enable_backup_clk
                0x0000000000000000       0x6f libzephyr.a(xt_wdt_hal.c.obj)
 .text.xt_wdt_hal_enable
                0x0000000000000000       0x38 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_frame   0x0000000000000000       0x58 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_info    0x0000000000000000     0x3fd1 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_abbrev  0x0000000000000000      0x35c libzephyr.a(xt_wdt_hal.c.obj)
 .debug_loc     0x0000000000000000      0x2f9 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_aranges
                0x0000000000000000       0x30 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_ranges  0x0000000000000000       0x80 libzephyr.a(xt_wdt_hal.c.obj)
 .debug_line    0x0000000000000000      0x65b libzephyr.a(xt_wdt_hal.c.obj)
 .debug_str     0x0000000000000000     0x29cf libzephyr.a(xt_wdt_hal.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(xt_wdt_hal.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(log_noos.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(log_noos.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(log_noos.c.obj)
 .literal.esp_log_set_vprintf
                0x0000000000000000        0xc libzephyr.a(log.c.obj)
 .literal.esp_log_level_set
                0x0000000000000000       0x44 libzephyr.a(log.c.obj)
 .literal.esp_log_level_get
                0x0000000000000000        0x8 libzephyr.a(log.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(log.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(log.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(log.c.obj)
 .text.esp_log_set_vprintf
                0x0000000000000000       0x1a libzephyr.a(log.c.obj)
 .rodata.esp_log_level_set.str1.1
                0x0000000000000000        0x2 libzephyr.a(log.c.obj)
 .text.esp_log_level_set
                0x0000000000000000       0xf3 libzephyr.a(log.c.obj)
 .text.esp_log_level_get
                0x0000000000000000       0x15 libzephyr.a(log.c.obj)
 .literal.spi_flash_op_lock
                0x0000000000000000        0x8 libzephyr.a(cache_utils.c.obj)
 .literal.spi_flash_op_unlock
                0x0000000000000000        0x8 libzephyr.a(cache_utils.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(cache_utils.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(cache_utils.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_lock
                0x0000000000000000       0x12 libzephyr.a(cache_utils.c.obj)
 .text.spi_flash_op_unlock
                0x0000000000000000        0xe libzephyr.a(cache_utils.c.obj)
 ._k_mutex.static.s_flash_op_mutex_
                0x0000000000000000       0x14 libzephyr.a(cache_utils.c.obj)
 .literal.heap_caps_malloc_base
                0x0000000000000000        0xc libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_base
                0x0000000000000000        0xc libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_register_failed_alloc_callback
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_default
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_malloc_prefer
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_default
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_realloc_prefer
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_free
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc_prefer
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_get_info
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_print_heap_info
                0x0000000000000000        0x8 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_alloc
                0x0000000000000000        0xc libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_free
                0x0000000000000000        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_aligned_calloc
                0x0000000000000000        0x8 libzephyr.a(heap_caps_zephyr.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(heap_caps_zephyr.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(heap_caps_zephyr.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_base
                0x0000000000000000       0x24 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_base
                0x0000000000000000       0x22 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_register_failed_alloc_callback
                0x0000000000000000       0x14 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc
                0x0000000000000000       0x11 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_extmem_enable
                0x0000000000000000        0x5 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_default
                0x0000000000000000       0x14 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_malloc_prefer
                0x0000000000000000       0x14 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc
                0x0000000000000000       0x14 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_default
                0x0000000000000000       0x16 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_realloc_prefer
                0x0000000000000000       0x16 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_free
                0x0000000000000000        0xe libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_calloc_prefer
                0x0000000000000000       0x1e libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_total_size
                0x0000000000000000        0xa libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_free_size
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_minimum_free_size
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_largest_free_block
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_info
                0x0000000000000000       0x12 libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.heap_caps_print_heap_info.str1.1
                0x0000000000000000       0x3e libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_print_heap_info
                0x0000000000000000        0xe libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_all
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_check_integrity_addr
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump
                0x0000000000000000        0x5 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_dump_all
                0x0000000000000000        0x5 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_get_allocated_size
                0x0000000000000000        0x7 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_alloc
                0x0000000000000000       0x22 libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_free
                0x0000000000000000        0xe libzephyr.a(heap_caps_zephyr.c.obj)
 .text.heap_caps_aligned_calloc
                0x0000000000000000       0x2e libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$0
                0x0000000000000000       0x18 libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$2
                0x0000000000000000       0x17 libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.__func__$3
                0x0000000000000000       0x16 libzephyr.a(heap_caps_zephyr.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(stubs.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(stubs.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(stubs.c.obj)
 .debug_info    0x0000000000000000       0x6b libzephyr.a(stubs.c.obj)
 .debug_abbrev  0x0000000000000000       0x26 libzephyr.a(stubs.c.obj)
 .debug_aranges
                0x0000000000000000       0x18 libzephyr.a(stubs.c.obj)
 .debug_line    0x0000000000000000       0x62 libzephyr.a(stubs.c.obj)
 .debug_str     0x0000000000000000      0x218 libzephyr.a(stubs.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(stubs.c.obj)
 .literal.number_of_leds
                0x0000000000000000        0x8 libzephyr.a(number_of_leds.c.obj)
 .text          0x0000000000000000        0x0 libzephyr.a(number_of_leds.c.obj)
 .data          0x0000000000000000        0x0 libzephyr.a(number_of_leds.c.obj)
 .bss           0x0000000000000000        0x0 libzephyr.a(number_of_leds.c.obj)
 .rodata.number_of_leds.str1.1
                0x0000000000000000       0x23 libzephyr.a(number_of_leds.c.obj)
 .text.number_of_leds
                0x0000000000000000       0x10 libzephyr.a(number_of_leds.c.obj)
 .debug_frame   0x0000000000000000       0x28 libzephyr.a(number_of_leds.c.obj)
 .debug_info    0x0000000000000000       0xca libzephyr.a(number_of_leds.c.obj)
 .debug_abbrev  0x0000000000000000       0x8c libzephyr.a(number_of_leds.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 libzephyr.a(number_of_leds.c.obj)
 .debug_ranges  0x0000000000000000       0x10 libzephyr.a(number_of_leds.c.obj)
 .debug_line    0x0000000000000000       0xab libzephyr.a(number_of_leds.c.obj)
 .debug_str     0x0000000000000000      0x22b libzephyr.a(number_of_leds.c.obj)
 .comment       0x0000000000000000       0x21 libzephyr.a(number_of_leds.c.obj)
 .text          0x0000000000000000        0x0 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .data          0x0000000000000000        0x0 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .bss           0x0000000000000000        0x0 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .text          0x0000000000000000        0x0 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .data          0x0000000000000000        0x0 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .bss           0x0000000000000000        0x0 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .literal.arch_cpu_atomic_idle
                0x0000000000000000        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .text.arch_cpu_atomic_idle
                0x0000000000000000       0x14 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_exccause
                0x0000000000000000        0x8 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .literal.arch_syscall_oops
                0x0000000000000000        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.xtensa_exccause.str1.1
                0x0000000000000000       0x11 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.xtensa_exccause
                0x0000000000000000       0x17 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text.arch_syscall_oops
                0x0000000000000000        0xd arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.str1.1
                0x0000000000000000      0x1c9 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .rodata.CSWTCH$3
                0x0000000000000000      0x104 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .literal.z_arch_irq_connect_dynamic
                0x0000000000000000        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_irq_priority_set
                0x0000000000000000        0x5 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.z_arch_irq_connect_dynamic
                0x0000000000000000       0x12 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text.xtensa_irq_is_enabled
                0x0000000000000000       0x18 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .text          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .data          0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .bss           0x0000000000000000        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .literal.__stdin_hook_install
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.cbvprintf
                0x0000000000000000        0xc lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal._exit
                0x0000000000000000        0x8 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init_recursive
                0x0000000000000000        0x8 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_init
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close_recursive
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_close
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire_recursive
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_acquire
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire_recursive
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_try_acquire
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release_recursive
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__retarget_lock_release
                0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.__chk_fail
                0x0000000000000000        0xc lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data          0x0000000000000000        0x0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss           0x0000000000000000        0x0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbputc   0x0000000000000000       0x11 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__stdin_hook_install
                0x0000000000000000       0x15 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.cbvprintf
                0x0000000000000000       0x32 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata._exit.str1.1
                0x0000000000000000        0x6 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text._exit    0x0000000000000000        0xf lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init_recursive
                0x0000000000000000       0x16 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_init
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close_recursive
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_close
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire_recursive
                0x0000000000000000       0x12 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_acquire
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire_recursive
                0x0000000000000000       0x18 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_try_acquire
                0x0000000000000000       0x10 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release_recursive
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__retarget_lock_release
                0x0000000000000000        0xe lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.__chk_fail.str1.1
                0x0000000000000000       0x1e lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text.__chk_fail
                0x0000000000000000       0x14 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 ._k_mutex.static.__lock___libc_recursive_mutex_
                0x0000000000000000       0x14 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .rodata.stdin  0x0000000000000000        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.__stdin   0x0000000000000000       0x10 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .text          0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .data          0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .bss           0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .literal.aligned_alloc
                0x0000000000000000       0x14 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.realloc
                0x0000000000000000       0x14 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.calloc
                0x0000000000000000        0xc lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.reallocarray
                0x0000000000000000        0x8 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text          0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .data          0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss           0x0000000000000000        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.aligned_alloc
                0x0000000000000000       0x30 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.realloc  0x0000000000000000       0x30 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.calloc   0x0000000000000000       0x33 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .text.reallocarray
                0x0000000000000000       0x27 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .literal.esp_intr_mark_shared
                0x0000000000000000       0x10 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_reserve
                0x0000000000000000       0x10 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2.literal
                0x0000000000000000        0xc drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3.literal
                0x0000000000000000       0x10 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_free
                0x0000000000000000       0x24 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_mark_shared
                0x0000000000000000       0x4e drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_reserve
                0x0000000000000000       0x44 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.2       0x0000000000000000       0x78 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_intno
                0x0000000000000000        0xc drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_get_cpu
                0x0000000000000000        0xc drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .iram1.3       0x0000000000000000       0x7e drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.esp_intr_free
                0x0000000000000000       0xc4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.adc_gain_invert
                0x0000000000000000        0x4 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .text          0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .data          0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .bss           0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .text.adc_gain_invert
                0x0000000000000000       0x2f drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .rodata.gains$0
                0x0000000000000000       0x28 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_frame   0x0000000000000000       0x28 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_info    0x0000000000000000      0x212 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_abbrev  0x0000000000000000      0x10a drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_loc     0x0000000000000000       0x8d drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_aranges
                0x0000000000000000       0x20 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_ranges  0x0000000000000000       0x28 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_line    0x0000000000000000      0x2d1 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .debug_str     0x0000000000000000      0x370 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .comment       0x0000000000000000       0x21 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .text          0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .data          0x0000000000000000        0x0 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .bss           0x0000000000000000        0x0 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text.uart_register_input
                0x0000000000000000        0x5 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .text          0x0000000000000000        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .data          0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .bss           0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .text          0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data          0x0000000000000000        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .bss           0x0000000000000000        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text          0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .data          0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .bss           0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_set_timeout
                0x0000000000000000        0x5 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text.sys_clock_idle_exit
                0x0000000000000000        0x5 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_frame   0x0000000000000000       0x40 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_info    0x0000000000000000       0xda drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_abbrev  0x0000000000000000       0x7e drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_aranges
                0x0000000000000000       0x28 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_ranges  0x0000000000000000       0x18 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_line    0x0000000000000000      0x16a drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .debug_str     0x0000000000000000      0x26d drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .comment       0x0000000000000000       0x21 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .text          0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .data          0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss           0x0000000000000000        0x0 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .text.sys_clock_cycle_get_32
                0x0000000000000000        0x8 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .literal.z_device_get_all_static
                0x0000000000000000        0xc kernel/libkernel.a(device.c.obj)
 .literal.z_impl_device_get_binding
                0x0000000000000000       0x14 kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(device.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(device.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(device.c.obj)
 .text.z_device_get_all_static
                0x0000000000000000       0x19 kernel/libkernel.a(device.c.obj)
 .text.z_impl_device_get_binding
                0x0000000000000000       0x5a kernel/libkernel.a(device.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(errno.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(errno.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(errno.c.obj)
 .rodata._k_neg_eagain
                0x0000000000000000        0x4 kernel/libkernel.a(errno.c.obj)
 .literal.k_fatal_halt
                0x0000000000000000        0x4 kernel/libkernel.a(fatal.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(fatal.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(fatal.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(fatal.c.obj)
 .text.k_fatal_halt
                0x0000000000000000        0xc kernel/libkernel.a(fatal.c.obj)
 .literal.z_early_memcpy
                0x0000000000000000        0x4 kernel/libkernel.a(init.c.obj)
 .literal.z_impl_device_init
                0x0000000000000000        0xc kernel/libkernel.a(init.c.obj)
 .literal.z_early_rand_get
                0x0000000000000000       0x18 kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(init.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(init.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(init.c.obj)
 .text.z_early_memcpy
                0x0000000000000000       0x12 kernel/libkernel.a(init.c.obj)
 .text.z_impl_device_init
                0x0000000000000000       0x2c kernel/libkernel.a(init.c.obj)
 .text.z_early_rand_get
                0x0000000000000000       0x63 kernel/libkernel.a(init.c.obj)
 .data.state$1  0x0000000000000000        0x8 kernel/libkernel.a(init.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(init_static.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(init_static.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(init_static.c.obj)
 .literal.k_heap_alloc
                0x0000000000000000        0x4 kernel/libkernel.a(kheap.c.obj)
 .literal.k_heap_realloc
                0x0000000000000000       0x10 kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(kheap.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(kheap.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_alloc
                0x0000000000000000       0x18 kernel/libkernel.a(kheap.c.obj)
 .text.k_heap_realloc
                0x0000000000000000       0x62 kernel/libkernel.a(kheap.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(idle.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(idle.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(idle.c.obj)
 .text.arch_spin_relax
                0x0000000000000000        0x7 kernel/libkernel.a(idle.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(mutex.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(mutex.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_init
                0x0000000000000000       0x11 kernel/libkernel.a(mutex.c.obj)
 .literal.z_impl_k_sem_reset
                0x0000000000000000       0x10 kernel/libkernel.a(sem.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(sem.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(sem.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_init
                0x0000000000000000       0x24 kernel/libkernel.a(sem.c.obj)
 .text.z_impl_k_sem_reset
                0x0000000000000000       0x56 kernel/libkernel.a(sem.c.obj)
 .literal.z_impl_k_is_preempt_thread
                0x0000000000000000        0x4 kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_state_str
                0x0000000000000000       0x14 kernel/libkernel.a(thread.c.obj)
 .literal.z_impl_k_thread_create
                0x0000000000000000       0x10 kernel/libkernel.a(thread.c.obj)
 .literal.k_thread_user_mode_enter
                0x0000000000000000        0x8 kernel/libkernel.a(thread.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(thread.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(thread.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_is_preempt_thread
                0x0000000000000000       0x22 kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_priority_get
                0x0000000000000000        0xb kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_set
                0x0000000000000000        0x8 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_name_get
                0x0000000000000000        0x7 kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_name_copy
                0x0000000000000000        0x8 kernel/libkernel.a(thread.c.obj)
 .rodata.k_thread_state_str.str1.1
                0x0000000000000000        0x3 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_state_str
                0x0000000000000000       0x89 kernel/libkernel.a(thread.c.obj)
 .text.z_impl_k_thread_create
                0x0000000000000000       0x5a kernel/libkernel.a(thread.c.obj)
 .text.z_init_thread_base
                0x0000000000000000       0x19 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_user_mode_enter
                0x0000000000000000       0x28 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_get
                0x0000000000000000       0x18 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_all_get
                0x0000000000000000       0x10 kernel/libkernel.a(thread.c.obj)
 .text.k_thread_runtime_stats_cpu_get
                0x0000000000000000        0xc kernel/libkernel.a(thread.c.obj)
 .rodata.str1.1
                0x0000000000000000       0x41 kernel/libkernel.a(thread.c.obj)
 .rodata.state_string$0
                0x0000000000000000       0x40 kernel/libkernel.a(thread.c.obj)
 .literal.z_requeue_current
                0x0000000000000000        0x8 kernel/libkernel.a(sched.c.obj)
 .literal.z_move_thread_to_end_of_prio_q
                0x0000000000000000        0x4 kernel/libkernel.a(sched.c.obj)
 .literal.z_pend_thread
                0x0000000000000000        0xc kernel/libkernel.a(sched.c.obj)
 .literal.z_unpend1_no_timeout
                0x0000000000000000        0x4 kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_resume
                0x0000000000000000        0xc kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_priority_set
                0x0000000000000000        0xc kernel/libkernel.a(sched.c.obj)
 .literal.k_can_yield
                0x0000000000000000       0x10 kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_usleep
                0x0000000000000000        0x8 kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_wakeup
                0x0000000000000000       0x10 kernel/libkernel.a(sched.c.obj)
 .literal.z_impl_k_thread_join
                0x0000000000000000       0x18 kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wake
                0x0000000000000000        0xc kernel/libkernel.a(sched.c.obj)
 .literal.z_sched_wait
                0x0000000000000000        0x8 kernel/libkernel.a(sched.c.obj)
 .literal.z_unready_thread
                0x0000000000000000        0x4 kernel/libkernel.a(sched.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(sched.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(sched.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(sched.c.obj)
 .text.z_sched_prio_cmp
                0x0000000000000000       0x1a kernel/libkernel.a(sched.c.obj)
 .text.z_requeue_current
                0x0000000000000000       0x4e kernel/libkernel.a(sched.c.obj)
 .text.z_move_thread_to_end_of_prio_q
                0x0000000000000000       0x16 kernel/libkernel.a(sched.c.obj)
 .text.z_pend_thread
                0x0000000000000000       0x34 kernel/libkernel.a(sched.c.obj)
 .text.z_unpend1_no_timeout
                0x0000000000000000       0x26 kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_resume
                0x0000000000000000       0x36 kernel/libkernel.a(sched.c.obj)
 .text.init_ready_q
                0x0000000000000000        0xb kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_priority_set
                0x0000000000000000       0x24 kernel/libkernel.a(sched.c.obj)
 .text.k_can_yield
                0x0000000000000000       0x2c kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_usleep
                0x0000000000000000       0x31 kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_wakeup
                0x0000000000000000       0x4e kernel/libkernel.a(sched.c.obj)
 .text.z_impl_k_thread_join
                0x0000000000000000       0x76 kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wake
                0x0000000000000000       0x45 kernel/libkernel.a(sched.c.obj)
 .text.z_sched_wait
                0x0000000000000000       0x24 kernel/libkernel.a(sched.c.obj)
 .text.z_sched_waitq_walk
                0x0000000000000000       0x30 kernel/libkernel.a(sched.c.obj)
 .text.z_unready_thread
                0x0000000000000000       0x16 kernel/libkernel.a(sched.c.obj)
 .literal.k_sched_time_slice_set
                0x0000000000000000       0x10 kernel/libkernel.a(timeslicing.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(timeslicing.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(timeslicing.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(timeslicing.c.obj)
 .text.k_sched_time_slice_set
                0x0000000000000000       0x28 kernel/libkernel.a(timeslicing.c.obj)
 .literal.timeout_rem
                0x0000000000000000        0x4 kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_remaining
                0x0000000000000000        0x8 kernel/libkernel.a(timeout.c.obj)
 .literal.z_timeout_expires
                0x0000000000000000        0x8 kernel/libkernel.a(timeout.c.obj)
 .literal.z_get_next_timeout_expiry
                0x0000000000000000        0x4 kernel/libkernel.a(timeout.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(timeout.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(timeout.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(timeout.c.obj)
 .text.timeout_rem
                0x0000000000000000       0x3d kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_remaining
                0x0000000000000000       0x3b kernel/libkernel.a(timeout.c.obj)
 .text.z_timeout_expires
                0x0000000000000000       0x30 kernel/libkernel.a(timeout.c.obj)
 .text.z_get_next_timeout_expiry
                0x0000000000000000       0x16 kernel/libkernel.a(timeout.c.obj)
 .literal.k_realloc
                0x0000000000000000        0xc kernel/libkernel.a(mempool.c.obj)
 .literal.z_thread_aligned_alloc
                0x0000000000000000       0x10 kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(mempool.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(mempool.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(mempool.c.obj)
 .text.k_realloc
                0x0000000000000000       0x45 kernel/libkernel.a(mempool.c.obj)
 .text.z_thread_aligned_alloc
                0x0000000000000000       0x2a kernel/libkernel.a(mempool.c.obj)
 .text          0x0000000000000000        0x0 kernel/libkernel.a(banner.c.obj)
 .data          0x0000000000000000        0x0 kernel/libkernel.a(banner.c.obj)
 .bss           0x0000000000000000        0x0 kernel/libkernel.a(banner.c.obj)
 .text          0x0000000000000000        0x0 arch/common/libisr_tables.a(isr_tables.c.obj)
 .data          0x0000000000000000        0x0 arch/common/libisr_tables.a(isr_tables.c.obj)
 .bss           0x0000000000000000        0x0 arch/common/libisr_tables.a(isr_tables.c.obj)
 .text          0x0000000000000000       0x18 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .text          0x0000000000000000       0x19 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
 .text          0x0000000000000000       0x18 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .text          0x0000000000000000       0x14 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .text          0x0000000000000000       0x22 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .text          0x0000000000000000       0x59 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .literal       0x0000000000000000       0x10 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .text          0x0000000000000000      0x312 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .literal       0x0000000000000000        0xc /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .text          0x0000000000000000      0x1ff /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .literal       0x0000000000000000       0x10 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .text          0x0000000000000000      0x213 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .literal       0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .text          0x0000000000000000       0x4c /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .literal       0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .text          0x0000000000000000       0x6c /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .literal       0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
 .text          0x0000000000000000       0x5d /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
 .text          0x0000000000000000       0x3d /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .text          0x0000000000000000       0x81 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .literal       0x0000000000000000        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .text          0x0000000000000000       0xa4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .literal       0x0000000000000000        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x62 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .text          0x0000000000000000       0x23 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .literal       0x0000000000000000        0xc /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000       0x37 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .text          0x0000000000000000      0x2ae /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .text          0x0000000000000000      0x270 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .text          0x0000000000000000      0x25e /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .literal       0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .text          0x0000000000000000      0x135 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .literal       0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .text          0x0000000000000000       0x74 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .literal       0x0000000000000000       0x1c /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .text          0x0000000000000000      0x123 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .literal       0x0000000000000000        0xc /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000       0x63 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text.memcmp   0x0000000000000000       0x26 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .text.strnlen  0x0000000000000000       0x1a /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .literal.fprintf
                0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text.fprintf  0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text.fputc    0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .text.fputs    0x0000000000000000       0x33 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .literal.printf
                0x0000000000000000        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .text.printf   0x0000000000000000       0x2c /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .literal.snprintf
                0x0000000000000000        0xc /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text.snprintf
                0x0000000000000000       0x5e /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .literal.scanf_getc
                0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.scanf_ungetc$isra$0
                0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.skip_spaces
                0x0000000000000000        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .literal.__l_vfscanf
                0x0000000000000000       0x50 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_getc
                0x0000000000000000       0x19 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.putval   0x0000000000000000       0x32 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.scanf_ungetc$isra$0
                0x0000000000000000       0x18 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.skip_spaces
                0x0000000000000000       0x34 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .rodata.__l_vfscanf.str1.1
                0x0000000000000000        0xc /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text.__l_vfscanf
                0x0000000000000000      0x4a2 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .debug_frame   0x0000000000000000       0x88 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .text.strchr   0x0000000000000000       0x1d /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .literal.fgetc
                0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text.fgetc    0x0000000000000000       0x9a /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .text.__file_str_put
                0x0000000000000000       0x16 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .literal.ungetc
                0x0000000000000000        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .data          0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .bss           0x0000000000000000        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .text.ungetc   0x0000000000000000       0x7c /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
 .debug_frame   0x0000000000000000       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

Memory Configuration

Name             Origin             Length             Attributes
FLASH            0x0000000000000000 0x00000000007fff00 r
iram0_0_seg      0x0000000040374000 0x0000000000052400 xr
dram0_0_seg      0x000000003fc88000 0x000000000004e400 rw
irom0_0_seg      0x0000000042000000 0x0000000000800000 xr
drom0_0_seg      0x000000003c000000 0x0000000000800000 r
rtc_iram_seg     0x00000000600fe000 0x0000000000002000 xrw
rtc_data_seg     0x00000000600fe000 0x0000000000002000 rw
rtc_slow_seg     0x0000000050000000 0x0000000000002000 rw
IDT_LIST         0x000000003ebfe010 0x0000000000002000 rw
*default*        0x0000000000000000 0xffffffffffffffff

Linker script and memory map

                0x0000000042004da8                vfprintf = __l_vfprintf
                0x0000000000000000                vfscanf = __l_vfscanf
LOAD CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
LOAD CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
LOAD ../app/libapp.a
LOAD libzephyr.a
LOAD arch/common/libarch__common.a
LOAD arch/arch/xtensa/core/libarch__xtensa__core.a
LOAD lib/libc/picolibc/liblib__libc__picolibc.a
LOAD lib/libc/common/liblib__libc__common.a
LOAD drivers/interrupt_controller/libdrivers__interrupt_controller.a
LOAD drivers/adc/libdrivers__adc.a
LOAD drivers/clock_control/libdrivers__clock_control.a
LOAD drivers/console/libdrivers__console.a
LOAD drivers/gpio/libdrivers__gpio.a
LOAD drivers/pinctrl/libdrivers__pinctrl.a
LOAD drivers/pwm/libdrivers__pwm.a
LOAD drivers/serial/libdrivers__serial.a
LOAD drivers/timer/libdrivers__timer.a
LOAD kernel/libkernel.a
LOAD arch/common/libisr_tables.a
LOAD /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a
LOAD /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a
LOAD /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a
                0x00000000403c7e00                user_iram_end = 0x403c7e00
                0x000000003fc88000                user_dram_seg_org = 0x3fc88000
                0x0000000040374000                user_iram_seg_org = 0x40374000
                0x000000003fcd6400                user_dram_end = 0x3fcd6400
                0x000000000004e400                user_idram_size = (user_dram_end - 0x3fc88000)
                0x0000000000004000                sram0_iram_size = 0x4000
                0x0000000000052400                user_iram_seg_len = (user_idram_size + sram0_iram_size)
                0x000000000004e400                user_dram_seg_len = user_idram_size
                0x000000003fce9704                _heap_sentry = 0x3fce9704
                0x00000000006f0000                _iram_dram_offset = 0x6f0000

.rel.plt        0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rel.plt))
                [!provide]                        PROVIDE (__rel_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rel.iplt))
                [!provide]                        PROVIDE (__rel_iplt_end = .)

.rela.plt       0x0000000000000000        0x0
 *(SORT_BY_ALIGNMENT(.rela.plt))
                [!provide]                        PROVIDE (__rela_iplt_start = .)
 *(SORT_BY_ALIGNMENT(.rela.iplt))
                [!provide]                        PROVIDE (__rela_iplt_end = .)

.rel.dyn
 *(SORT_BY_ALIGNMENT(.rel.*))

.rela.dyn
 *(SORT_BY_ALIGNMENT(.rela.*))

.rtc.text       0x00000000600fe000        0x0 load address 0x0000000000000000
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_fast_start = ABSOLUTE (.)
                0x00000000600fe000                _rtc_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.literal) SORT_BY_ALIGNMENT(.rtc.text))
 *(SORT_BY_ALIGNMENT(.rtc.entry.text))
                0x00000000600fe000                _rtc_text_end = ABSOLUTE (.)

.rtc.force_fast
                0x00000000600fe000        0x0 load address 0x0000000000000000
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_force_fast_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_fast) SORT_BY_ALIGNMENT(.rtc.force_fast.*))
                0x00000000600fe000                . = ALIGN (0x4)
                0x00000000600fe000                _rtc_force_fast_end = ABSOLUTE (.)

.rtc.data       0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                _rtc_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
                0x0000000050000000                _rtc_data_end = ABSOLUTE (.)

.rtc.bss        0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                _rtc_bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.data))
 *(SORT_BY_ALIGNMENT(.rtc.rodata))
                0x0000000050000000                _rtc_bss_end = ABSOLUTE (.)

.rtc_noinit     0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_noinit_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc_noinit) SORT_BY_ALIGNMENT(.rtc_noinit.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_noinit_end = ABSOLUTE (.)

.rtc.force_slow
                0x0000000050000000        0x0 load address 0x0000000000000000
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.rtc.force_slow) SORT_BY_ALIGNMENT(.rtc.force_slow.*))
                0x0000000050000000                . = ALIGN (0x4)
                0x0000000050000000                _rtc_force_slow_end = ABSOLUTE (.)
                0x0000000000000000                _rtc_slow_length = (_rtc_force_slow_end - _rtc_data_start)
                0x0000000000000000                _rtc_fast_length = (_rtc_force_fast_end - _rtc_fast_start)
                0x0000000000000001                ASSERT ((_rtc_slow_length <= LENGTH (rtc_slow_seg)), RTC_SLOW segment data does not fit.)
                0x0000000000000001                ASSERT ((_rtc_fast_length <= LENGTH (rtc_data_seg)), RTC_FAST segment data does not fit.)

.iram0.vectors  0x0000000040374000      0x400 load address 0x0000000000000000
                0x0000000040374000                _iram_start = ABSOLUTE (.)
                0x0000000040374000                _init_start = ABSOLUTE (.)
                0x0000000000000000                . = 0x0
 *(SORT_BY_ALIGNMENT(.WindowVectors.text))
 .WindowVectors.text
                0x0000000040374000      0x16a arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                0x0000000040374000                _WindowOverflow4
                0x0000000040374040                _WindowUnderflow4
                0x0000000040374050                _xt_alloca_exc
                0x0000000040374080                _WindowOverflow8
                0x00000000403740c0                _WindowUnderflow8
                0x0000000040374100                _WindowOverflow12
                0x0000000040374140                _WindowUnderflow12
                0x0000000000000180                . = 0x180
 *fill*         0x000000004037416a       0x16 
 *(SORT_BY_ALIGNMENT(.Level2InterruptVector.text))
 .Level2InterruptVector.text
                0x0000000040374180       0x29 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374180                _Level2Vector
                0x00000000000001c0                . = 0x1c0
 *fill*         0x00000000403741a9       0x17 
 *(SORT_BY_ALIGNMENT(.Level3InterruptVector.text))
 .Level3InterruptVector.text
                0x00000000403741c0       0x25 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403741c0                _Level3Vector
                0x0000000000000200                . = 0x200
 *fill*         0x00000000403741e5       0x1b 
 *(SORT_BY_ALIGNMENT(.Level4InterruptVector.text))
 .Level4InterruptVector.text
                0x0000000040374200       0x25 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374200                _Level4Vector
                0x0000000000000240                . = 0x240
 *fill*         0x0000000040374225       0x1b 
 *(SORT_BY_ALIGNMENT(.Level5InterruptVector.text))
 .Level5InterruptVector.text
                0x0000000040374240       0x25 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374240                _Level5Vector
                0x0000000000000280                . = 0x280
 *fill*         0x0000000040374265       0x1b 
 *(SORT_BY_ALIGNMENT(.DebugExceptionVector.text))
 .DebugExceptionVector.text
                0x0000000040374280       0x25 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x0000000040374280                _Level6Vector
                0x00000000000002c0                . = 0x2c0
 *fill*         0x00000000403742a5       0x1b 
 *(SORT_BY_ALIGNMENT(.NMIExceptionVector.text))
 .NMIExceptionVector.text
                0x00000000403742c0       0x25 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x29 (size before relaxing)
                0x00000000403742c0                _Level7Vector
                0x0000000000000300                . = 0x300
 *fill*         0x00000000403742e5       0x1b 
 *(SORT_BY_ALIGNMENT(.KernelExceptionVector.text))
 .KernelExceptionVector.text
                0x0000000040374300        0x3 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374300                _KernelExceptionVector
                0x0000000000000340                . = 0x340
 *fill*         0x0000000040374303       0x3d 
 *(SORT_BY_ALIGNMENT(.UserExceptionVector.text))
 .UserExceptionVector.text
                0x0000000040374340       0x16 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040374340                _Level1RealVector
                0x00000000000003c0                . = 0x3c0
 *fill*         0x0000000040374356       0x6a 
 *(SORT_BY_ALIGNMENT(.DoubleExceptionVector.text))
 .DoubleExceptionVector.text
                0x00000000403743c0        0x3 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x00000000403743c0                _DoubleExceptionVector
                0x0000000000000400                . = 0x400
 *fill*         0x00000000403743c3       0x3d 
                0x0000000040374400                _invalid_pc_placeholder = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.*Vector.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.literal))
 *(SORT_BY_ALIGNMENT(.UserEnter.text))
                0x0000000040374400                . = ALIGN (0x10)
 *(SORT_BY_ALIGNMENT(.entry.text))
 *(SORT_BY_ALIGNMENT(.init.literal))
 *(.init)
                0x0000000040374400                _init_end = ABSOLUTE (.)

.iram0.text     0x0000000040374400     0x8b98 load address 0x0000000000000400
                0x0000000040374400                _iram_text_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram1) SORT_BY_ALIGNMENT(.iram1.*))
 .iram1.1.literal
                0x0000000040374400       0x1c libzephyr.a(soc.c.obj)
                                         0x4c (size before relaxing)
 .iram1.2.literal
                0x000000004037441c        0x4 libzephyr.a(soc.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x0000000040374420        0x4 libzephyr.a(soc_cache.c.obj)
                                          0x8 (size before relaxing)
 .iram1.1.literal
                0x0000000040374424       0x24 libzephyr.a(soc_cache.c.obj)
 .iram1.0.literal
                0x0000000040374448        0x0 libzephyr.a(flash_encrypt.c.obj)
                                          0x4 (size before relaxing)
 .iram1.5.literal
                0x0000000040374448        0x8 libzephyr.a(esp_flash_api.c.obj)
 .iram1.6.literal
                0x0000000040374450        0x4 libzephyr.a(esp_flash_api.c.obj)
 .iram1.10.literal
                0x0000000040374454        0x0 libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.12.literal
                0x0000000040374454       0x14 libzephyr.a(esp_flash_api.c.obj)
                                         0x1c (size before relaxing)
 .iram1.13.literal
                0x0000000040374468        0x4 libzephyr.a(esp_flash_api.c.obj)
                                          0x8 (size before relaxing)
 .iram1.9.literal
                0x000000004037446c       0x1c libzephyr.a(esp_flash_api.c.obj)
                                         0x58 (size before relaxing)
 .iram1.21.literal
                0x0000000040374488        0xc libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
 .iram1.27.literal
                0x0000000040374494        0x8 libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
 .iram1.1.literal
                0x000000004037449c        0x0 libzephyr.a(flash_mmap.c.obj)
                                         0x14 (size before relaxing)
 .iram1.2.literal
                0x000000004037449c        0x4 libzephyr.a(flash_ops.c.obj)
 .iram1.5.literal
                0x00000000403744a0        0x0 libzephyr.a(flash_ops.c.obj)
                                         0x10 (size before relaxing)
 .iram1.4.literal
                0x00000000403744a0        0xc libzephyr.a(flash_ops.c.obj)
                                         0x18 (size before relaxing)
 .iram1.3.literal
                0x00000000403744ac        0x4 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.2.literal
                0x00000000403744b0        0x8 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x00000000403744b8        0x0 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                          0x8 (size before relaxing)
 .iram1.7.literal
                0x00000000403744b8        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x00000000403744b8        0x4 libzephyr.a(spi_flash_os_func_app.c.obj)
 .iram1.8.literal
                0x00000000403744bc        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.6.literal
                0x00000000403744bc        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.3.literal
                0x00000000403744bc        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.2.literal
                0x00000000403744bc        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0x4 (size before relaxing)
 .iram1.5.literal
                0x00000000403744bc        0x8 libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x10 (size before relaxing)
 .iram1.0.literal
                0x00000000403744c4        0x8 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .iram1.2.literal
                0x00000000403744cc        0x0 libzephyr.a(flash_qio_mode.c.obj)
                                          0x4 (size before relaxing)
 .iram1.6.literal
                0x00000000403744cc        0x0 libzephyr.a(flash_qio_mode.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x00000000403744cc        0xc libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x10 (size before relaxing)
 .iram1.2.literal
                0x00000000403744d8        0xc libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .iram1.4.literal
                0x00000000403744e4        0xc libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x20 (size before relaxing)
 .iram1.3.literal
                0x00000000403744f0        0x0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .iram1.1.literal
                0x00000000403744f0       0x20 libzephyr.a(bootloader_flash.c.obj)
                                         0x28 (size before relaxing)
 .iram1.2.literal
                0x0000000040374510        0x0 libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x0000000040374510        0x4 libzephyr.a(bootloader_flash.c.obj)
                                         0x3c (size before relaxing)
 .iram1.3.literal
                0x0000000040374514        0x0 libzephyr.a(bootloader_flash.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x0000000040374514        0x0 libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .iram1.7.literal
                0x0000000040374514        0xc libzephyr.a(bootloader_flash.c.obj)
                                         0x44 (size before relaxing)
 .iram1.13.literal
                0x0000000040374520        0x4 libzephyr.a(bootloader_flash.c.obj)
 .iram1.2.literal
                0x0000000040374524       0x10 libzephyr.a(esp_clk.c.obj)
                                         0x14 (size before relaxing)
 .iram1.2.literal
                0x0000000040374534        0x8 libzephyr.a(regi2c_ctrl.c.obj)
 .iram1.3.literal
                0x000000004037453c        0x4 libzephyr.a(regi2c_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x0000000040374540        0x4 libzephyr.a(regi2c_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .iram1.6.literal
                0x0000000040374544        0xc libzephyr.a(rtc_module.c.obj)
                                         0x10 (size before relaxing)
 .iram1.7.literal
                0x0000000040374550        0x0 libzephyr.a(rtc_module.c.obj)
                                          0xc (size before relaxing)
 .iram1.2.literal
                0x0000000040374550        0x0 libzephyr.a(esp_mmu_map.c.obj)
                                          0x4 (size before relaxing)
 .iram1.3.literal
                0x0000000040374550       0x18 libzephyr.a(esp_mmu_map.c.obj)
                                         0x28 (size before relaxing)
 .iram1.4.literal
                0x0000000040374568        0x0 libzephyr.a(esp_mmu_map.c.obj)
                                          0xc (size before relaxing)
 .iram1.1.literal
                0x0000000040374568        0x4 libzephyr.a(esp_mmu_map.c.obj)
 .iram1.1.literal
                0x000000004037456c        0xc libzephyr.a(esp_rom_sys.c.obj)
 .iram1.0.literal
                0x0000000040374578       0x14 libzephyr.a(esp_rom_uart.c.obj)
 .iram1.0.literal
                0x000000004037458c        0x0 libzephyr.a(efuse_hal.c.obj)
                                          0x8 (size before relaxing)
 .iram1.2.literal
                0x000000004037458c        0x0 libzephyr.a(efuse_hal.c.obj)
                                          0x4 (size before relaxing)
 .iram1.0.literal
                0x000000004037458c        0x0 libzephyr.a(efuse_hal.c.obj)
                                          0x4 (size before relaxing)
 .iram1.1.literal
                0x000000004037458c        0x0 libzephyr.a(efuse_hal.c.obj)
                                          0x4 (size before relaxing)
 .iram1.4.literal
                0x000000004037458c        0x8 libzephyr.a(cache_utils.c.obj)
                                         0x1c (size before relaxing)
 .iram1.5.literal
                0x0000000040374594        0x0 libzephyr.a(cache_utils.c.obj)
                                         0x1c (size before relaxing)
 .iram1.6.literal
                0x0000000040374594        0x4 libzephyr.a(cache_utils.c.obj)
 .iram1.1.literal
                0x0000000040374598        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.0.literal
                0x0000000040374598        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .iram1.4.literal
                0x000000004037459c        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.5.literal
                0x00000000403745a0       0x10 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x20 (size before relaxing)
 .iram1.6.literal
                0x00000000403745b0        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .iram1.0.literal
                0x00000000403745b0        0x4 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .iram1.1.literal
                0x00000000403745b4        0x8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.arch_cpu_idle
                0x00000000403745bc        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .literal.xtensa_fatal_error
                0x00000000403745c0        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                          0x8 (size before relaxing)
 .literal       0x00000000403745c0        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                          0x8 (size before relaxing)
 .literal.z_irq_spurious
                0x00000000403745c4        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                          0x4 (size before relaxing)
 .literal.arch_new_thread
                0x00000000403745c4        0xc arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .literal.return_to
                0x00000000403745d0        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_outside_stack_bounds
                0x00000000403745d0        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_is_frame_pointer_valid
                0x00000000403745d4        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_dump_stack
                0x00000000403745d4        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int2_c
                0x00000000403745d4        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int3_c
                0x00000000403745d8        0x4 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xc (size before relaxing)
 .literal.xtensa_int4_c
                0x00000000403745dc        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int5_c
                0x00000000403745dc        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_int6_c
                0x00000000403745dc        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x4 (size before relaxing)
 .literal.xtensa_int7_c
                0x00000000403745dc        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0x8 (size before relaxing)
 .literal.xtensa_excint1_c
                0x00000000403745dc        0x8 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x28 (size before relaxing)
 .literal.z_prep_c
                0x00000000403745e4        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_z_errno
                0x00000000403745e4        0x0 kernel/libkernel.a(errno.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sys_fatal_error_handler
                0x00000000403745e4        0x0 kernel/libkernel.a(fatal.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_fatal_error
                0x00000000403745e4        0x0 kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
 .literal.z_sys_init_run_level
                0x00000000403745e4        0x4 kernel/libkernel.a(init.c.obj)
                                          0x8 (size before relaxing)
 .literal.bg_thread_main
                0x00000000403745e8       0x10 kernel/libkernel.a(init.c.obj)
                                         0x3c (size before relaxing)
 .literal.z_early_memset
                0x00000000403745f8        0x0 kernel/libkernel.a(init.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_bss_zero
                0x00000000403745f8        0x8 kernel/libkernel.a(init.c.obj)
                                          0xc (size before relaxing)
 .literal.z_init_cpu
                0x0000000040374600        0xc kernel/libkernel.a(init.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_cstart
                0x000000004037460c       0x10 kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .literal.k_heap_init
                0x000000004037461c        0x4 kernel/libkernel.a(kheap.c.obj)
 .literal.statics_init
                0x0000000040374620        0x8 kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.k_heap_aligned_alloc
                0x0000000040374628        0x4 kernel/libkernel.a(kheap.c.obj)
                                         0x10 (size before relaxing)
 .literal.k_heap_free
                0x000000004037462c        0x4 kernel/libkernel.a(kheap.c.obj)
                                          0xc (size before relaxing)
 .literal.idle  0x0000000040374630        0x0 kernel/libkernel.a(idle.c.obj)
                                          0x4 (size before relaxing)
 .literal.adjust_owner_prio$isra$0
                0x0000000040374630        0x0 kernel/libkernel.a(mutex.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_mutex_lock
                0x0000000040374630        0x4 kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_impl_k_mutex_unlock
                0x0000000040374634        0x0 kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_impl_k_sem_give
                0x0000000040374634        0x4 kernel/libkernel.a(sem.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sem_take
                0x0000000040374638        0x0 kernel/libkernel.a(sem.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_start
                0x0000000040374638        0x0 kernel/libkernel.a(thread.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_setup_new_thread
                0x0000000040374638        0x0 kernel/libkernel.a(thread.c.obj)
                                          0x8 (size before relaxing)
 .literal.unpend_thread_no_timeout
                0x0000000040374638        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.unready_thread
                0x0000000040374638        0x4 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_swap
                0x000000004037463c        0x4 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.ready_thread
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_thread_halt
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x34 (size before relaxing)
 .literal.add_to_waitq_locked
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.move_thread_to_end_of_prio_q
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_ready_thread
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_thread_suspend
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_unpend_thread_no_timeout
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_sched_wake_thread
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_timeout
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_pend_curr
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_unpend_thread
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_thread_prio_set
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_reschedule
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_start
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reschedule_irqlock
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0xc (size before relaxing)
 .literal.k_sched_lock
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_sched_unlock
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_swap_next_thread
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_get_next_switch_handle
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_unpend_all
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_sched_init
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_yield
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_tick_sleep
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x24 (size before relaxing)
 .literal.z_impl_k_sleep
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_impl_k_sched_current_thread_query
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_thread_abort
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_impl_k_thread_abort
                0x0000000040374640        0x0 kernel/libkernel.a(sched.c.obj)
                                          0x4 (size before relaxing)
 .literal.slice_timeout
                0x0000000040374640        0xc kernel/libkernel.a(timeslicing.c.obj)
 .literal.thread_is_sliceable
                0x000000004037464c        0x8 kernel/libkernel.a(timeslicing.c.obj)
                                          0xc (size before relaxing)
 .literal.z_reset_time_slice
                0x0000000040374654        0x4 kernel/libkernel.a(timeslicing.c.obj)
                                         0x20 (size before relaxing)
 .literal.z_time_slice
                0x0000000040374658        0x0 kernel/libkernel.a(timeslicing.c.obj)
                                         0x14 (size before relaxing)
 .literal.elapsed
                0x0000000040374658        0x4 kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.remove_timeout
                0x000000004037465c        0x4 kernel/libkernel.a(timeout.c.obj)
 .literal.next_timeout
                0x0000000040374660        0x4 kernel/libkernel.a(timeout.c.obj)
                                         0x10 (size before relaxing)
 .literal.z_add_timeout
                0x0000000040374664        0x4 kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .literal.z_abort_timeout
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_clock_announce
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                         0x1c (size before relaxing)
 .literal.sys_clock_tick_get
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x8 (size before relaxing)
 .literal.sys_clock_tick_get_32
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_k_uptime_ticks
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_calc
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.sys_timepoint_timeout
                0x0000000040374668        0x0 kernel/libkernel.a(timeout.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_heap_aligned_alloc
                0x0000000040374668        0x0 kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_free
                0x0000000040374668        0x0 kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_aligned_alloc
                0x0000000040374668        0x4 kernel/libkernel.a(mempool.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_malloc
                0x000000004037466c        0x0 kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.k_calloc
                0x000000004037466c        0x0 kernel/libkernel.a(mempool.c.obj)
                                          0x8 (size before relaxing)
 .literal.k_thread_system_pool_assign
                0x000000004037466c        0x0 kernel/libkernel.a(mempool.c.obj)
                                          0x4 (size before relaxing)
 .literal.boot_banner
                0x000000004037466c        0x4 kernel/libkernel.a(banner.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_log_impl_lock
                0x0000000040374670        0x4 libzephyr.a(log_noos.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_log_impl_lock_timeout
                0x0000000040374674        0x0 libzephyr.a(log_noos.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_log_impl_unlock
                0x0000000040374674        0x0 libzephyr.a(log_noos.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_log_early_timestamp
                0x0000000040374674        0x0 libzephyr.a(log_noos.c.obj)
                                          0x4 (size before relaxing)
 .literal.ccompare_isr
                0x0000000040374674        0x8 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_clock_set_timeout
                0x000000004037467c        0xc drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x14 (size before relaxing)
 .literal.sys_clock_elapsed
                0x0000000040374688        0x0 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                          0x8 (size before relaxing)
 .literal.char_out
                0x0000000040374688        0x4 libzephyr.a(printk.c.obj)
 .literal.vprintk
                0x000000004037468c        0x8 libzephyr.a(printk.c.obj)
                                          0xc (size before relaxing)
 .literal.printk
                0x0000000040374694        0x0 libzephyr.a(printk.c.obj)
                                          0x4 (size before relaxing)
 .literal.console_out
                0x0000000040374694        0x4 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .literal.map_rom_segments
                0x0000000040374698       0x60 libzephyr.a(loader.c.obj)
                                         0xd8 (size before relaxing)
 .literal.__start
                0x00000000403746f8       0x14 libzephyr.a(loader.c.obj)
                                         0x44 (size before relaxing)
 .literal.esp_mmu_map_init
                0x000000004037470c       0x10 libzephyr.a(esp_mmu_map.c.obj)
                                         0x44 (size before relaxing)
 .literal.esp_mmu_map
                0x000000004037471c       0x2c libzephyr.a(esp_mmu_map.c.obj)
                                         0x8c (size before relaxing)
 .literal.esp_mmu_unmap
                0x0000000040374748        0xc libzephyr.a(esp_mmu_map.c.obj)
                                         0x38 (size before relaxing)
 .literal.esp_intr_lock
                0x0000000040374754        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.esp_intr_unlock
                0x0000000040374758        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.find_desc_for_int
                0x0000000040374758        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .literal.is_vect_desc_usable
                0x000000004037475c        0xc drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x10 (size before relaxing)
 .literal.get_desc_for_int
                0x0000000040374768        0x8 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .literal.set_interrupt_handler
                0x0000000040374770        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_intr_initialize
                0x0000000040374774        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_intr_alloc_intrstatus
                0x0000000040374774       0x18 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x8c (size before relaxing)
 .literal.esp_intr_alloc
                0x000000004037478c        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.mmu_hal_unmap_all
                0x000000004037478c        0x8 libzephyr.a(mmu_hal.c.obj)
 .literal.mmu_hal_init
                0x0000000040374794        0x4 libzephyr.a(mmu_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.mmu_hal_map_region
                0x0000000040374798        0x4 libzephyr.a(mmu_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.mmu_hal_unmap_region
                0x000000004037479c        0x0 libzephyr.a(mmu_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.mmu_hal_paddr_to_vaddr
                0x000000004037479c        0x0 libzephyr.a(mmu_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.mmu_hal_check_valid_ext_vaddr_region
                0x000000004037479c        0x8 libzephyr.a(mmu_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.spimem_flash_ll_set_buffer_data
                0x00000000403747a4        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spimem_flash_ll_get_buffer_data
                0x00000000403747a4        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_configure_host_io_mode
                0x00000000403747a4        0xc libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_common_command
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_hal_read
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_erase_sector
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_erase_block
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_program_page
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_hal_setup_read_suspend
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_setup_auto_suspend_mode
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_disable_auto_suspend_mode
                0x00000000403747b0        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_device_config
                0x00000000403747b0        0x4 libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_encryption_hal_enable
                0x00000000403747b4        0x8 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_disable
                0x00000000403747bc        0x0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_encryption_hal_prepare
                0x00000000403747bc       0x10 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_encryption_hal_done
                0x00000000403747cc        0x8 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.spi_flash_encryption_hal_destroy
                0x00000000403747d4        0x4 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .literal.cache_hal_init
                0x00000000403747d8       0x14 libzephyr.a(cache_hal.c.obj)
                                         0x1c (size before relaxing)
 .literal.cache_hal_disable
                0x00000000403747ec        0x0 libzephyr.a(cache_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.cache_hal_enable
                0x00000000403747ec        0x0 libzephyr.a(cache_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.cache_hal_invalidate_addr
                0x00000000403747ec        0x4 libzephyr.a(cache_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.ledc_hal_set_duty_start
                0x00000000403747f0        0x0 libzephyr.a(ledc_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.ledc_hal_set_duty_int_part
                0x00000000403747f0        0x4 libzephyr.a(ledc_hal_iram.c.obj)
 .literal.ledc_hal_set_duty_direction
                0x00000000403747f4        0x0 libzephyr.a(ledc_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.ledc_hal_set_duty_num
                0x00000000403747f4        0x4 libzephyr.a(ledc_hal_iram.c.obj)
 .literal.ledc_hal_set_duty_cycle
                0x00000000403747f8        0x4 libzephyr.a(ledc_hal_iram.c.obj)
 .literal.wdt_hal_write_protect_disable
                0x00000000403747fc        0x4 libzephyr.a(wdt_hal_iram.c.obj)
 .literal.wdt_hal_disable
                0x0000000040374800        0x0 libzephyr.a(wdt_hal_iram.c.obj)
                                          0x4 (size before relaxing)
 .literal.wdt_hal_set_flashboot_en
                0x0000000040374800        0x8 libzephyr.a(wdt_hal_iram.c.obj)
 .literal.systimer_hal_init
                0x0000000040374808        0x4 libzephyr.a(systimer_hal.c.obj)
 .literal.systimer_hal_select_alarm_mode
                0x000000004037480c        0x0 libzephyr.a(systimer_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.systimer_hal_connect_alarm_counter
                0x000000004037480c        0x0 libzephyr.a(systimer_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpspi_flash_ll_get_buffer_data
                0x000000004037480c        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hal_gpspi_device_config
                0x000000004037480c        0x8 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_hal_gpspi_configure_host_io_mode
                0x0000000040374814       0x10 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_gpspi_common_command
                0x0000000040374824        0x4 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_hal_gpspi_read
                0x0000000040374828        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                          0xc (size before relaxing)
 .literal.esp_log_write
                0x0000000040374828        0x4 libzephyr.a(log.c.obj)
 .literal.spi_flash_chip_gd_detect_size
                0x000000004037482c        0x4 libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_gd_get_io_mode
                0x0000000040374830        0x0 libzephyr.a(spi_flash_chip_gd.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_gd_set_io_mode
                0x0000000040374830       0x10 libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_chip_generic_detect_size
                0x0000000040374840        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_reset
                0x0000000040374840        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_config_host_io_mode
                0x0000000040374840        0xc libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_chip_generic_read
                0x000000004037484c        0x8 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_generic_write
                0x0000000040374854        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_get_write_protect
                0x0000000040374854        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_yield
                0x0000000040374854        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_read_unique_id
                0x0000000040374854        0x8 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x1c (size before relaxing)
 .literal.spi_flash_chip_generic_write_encrypted
                0x000000004037485c        0x4 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_generic_suspend_cmd_conf
                0x0000000040374860        0x8 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_common_write_qe_sr$isra$0
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_16b_wrsr
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr2
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_get_io_mode
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_read_status_8b_rdsr
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_common_write_status_8b_wrsr2
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_generic_set_io_mode
                0x0000000040374868        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_set_io_mode
                0x0000000040374868        0x8 libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_issi_get_io_mode
                0x0000000040374870        0x0 libzephyr.a(spi_flash_chip_issi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_detect_size
                0x0000000040374870        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_set_write_protect
                0x0000000040374870        0x8 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_chip
                0x0000000040374878        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_sector
                0x000000004037487c        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_erase_block
                0x0000000040374880        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_xmic_opi_config_host_io_mode
                0x0000000040374884        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x0000000040374888        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_read_id
                0x0000000040374888       0x10 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x24 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_read_reg
                0x0000000040374898        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_io_mode
                0x0000000040374898        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0xc (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_get_write_protect
                0x000000004037489c        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_write
                0x000000004037489c        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_mxic_opi_page_program
                0x000000004037489c        0x4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_read
                0x00000000403748a0        0x8 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_block
                0x00000000403748a8        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_erase_sector
                0x00000000403748a8        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_chip_winbond_page_program
                0x00000000403748a8        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_read_status_hs
                0x00000000403748a8        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_erase_chip
                0x00000000403748a8        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_set_write_protect
                0x00000000403748a8        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0x4 (size before relaxing)
 .literal.memspi_host_read_id_hs
                0x00000000403748a8        0xc libzephyr.a(memspi_host_driver.c.obj)
                                         0x1c (size before relaxing)
 .literal.memspi_host_flush_cache
                0x00000000403748b4        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_erase_sector
                0x00000000403748b4        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0xc (size before relaxing)
 .literal.memspi_host_erase_block
                0x00000000403748b4        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0xc (size before relaxing)
 .literal.memspi_host_program_page
                0x00000000403748b4        0x0 libzephyr.a(memspi_host_driver.c.obj)
                                          0x8 (size before relaxing)
 .literal.memspi_host_init_pointers
                0x00000000403748b4        0xc libzephyr.a(memspi_host_driver.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_flash_hpm_probe_chip_with_cmd
                0x00000000403748c0        0x4 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_hpm_probe_chip_with_dummy
                0x00000000403748c4        0xc libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x10 (size before relaxing)
 .literal.spi_flash_hpm_probe_chip_with_write_hpf_bit_5
                0x00000000403748d0        0x4 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .literal.spi_flash_high_performance_check_dummy_sr
                0x00000000403748d4        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_high_performance_check_hpf_bit_5
                0x00000000403748d4        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_turn_high_performance_write_hpf_bit_5
                0x00000000403748d4        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_turn_high_performance_reconfig_dummy
                0x00000000403748d4        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_enable_high_performance_send_cmd
                0x00000000403748d4        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                          0x8 (size before relaxing)
 .literal.spi_flash_enable_high_performance_mode
                0x00000000403748d4       0x1c libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x38 (size before relaxing)
 .literal.s_probe_mxic_chip
                0x00000000403748f0        0x8 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x14 (size before relaxing)
 .literal.s_mxic_set_required_regs
                0x00000000403748f8        0x4 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                          0x8 (size before relaxing)
 .literal.s_flash_init_mxic
                0x00000000403748fc       0x24 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x48 (size before relaxing)
 .literal.esp_opiflash_init
                0x0000000040374920       0x18 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x2c (size before relaxing)
 .literal._esp_error_check_failed
                0x0000000040374938       0x14 libzephyr.a(esp_err.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_gpio_reserve_pins
                0x000000004037494c        0x8 libzephyr.a(esp_gpio_reserve.c.obj)
 .literal.rtc_clk_bbpll_disable
                0x0000000040374954        0x8 libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_32k_enable
                0x000000004037495c       0x18 libzephyr.a(rtc_clk.c.obj)
                                         0x1c (size before relaxing)
 .literal.rtc_clk_32k_enable_external
                0x0000000040374974        0x0 libzephyr.a(rtc_clk.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtc_clk_8m_enable
                0x0000000040374974        0xc libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_src_set
                0x0000000040374980        0x4 libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_slow_src_get
                0x0000000040374984        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_fast_src_set
                0x0000000040374984        0x0 libzephyr.a(rtc_clk.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_clk_fast_src_get
                0x0000000040374984        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_xtal
                0x0000000040374984       0x20 libzephyr.a(rtc_clk.c.obj)
                                         0x30 (size before relaxing)
 .literal.rtc_clk_xtal_freq_get
                0x00000000403749a4       0x10 libzephyr.a(rtc_clk.c.obj)
                                         0x1c (size before relaxing)
 .literal.rtc_clk_cpu_freq_mhz_to_config
                0x00000000403749b4        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_cpu_freq_get_config
                0x00000000403749b4        0x8 libzephyr.a(rtc_clk.c.obj)
                                         0x20 (size before relaxing)
 .literal.rtc_clk_cpu_freq_to_pll_mhz
                0x00000000403749bc        0xc libzephyr.a(rtc_clk.c.obj)
                                         0x50 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_config
                0x00000000403749c8        0xc libzephyr.a(rtc_clk.c.obj)
                                         0x7c (size before relaxing)
 .literal.rtc_clk_cpu_set_to_default_config
                0x00000000403749d4        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_cpu_freq_set_xtal
                0x00000000403749d4        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_xtal_freq_update
                0x00000000403749d4        0x4 libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_apb_freq_update
                0x00000000403749d8        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_apb_freq_get
                0x00000000403749d8        0x0 libzephyr.a(rtc_clk.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_clk_divider_set
                0x00000000403749d8        0xc libzephyr.a(rtc_clk.c.obj)
 .literal.rtc_clk_8m_divider_set
                0x00000000403749e4        0x4 libzephyr.a(rtc_clk.c.obj)
                                          0x8 (size before relaxing)
 .literal.rtc_clk_init
                0x00000000403749e8       0x20 libzephyr.a(rtc_clk_init.c.obj)
                                         0x6c (size before relaxing)
 .literal.rtc_sleep_pu
                0x0000000040374a08       0x24 libzephyr.a(rtc_sleep.c.obj)
                                         0x28 (size before relaxing)
 .literal.rtc_clk_cal_internal
                0x0000000040374a2c       0x20 libzephyr.a(rtc_time.c.obj)
                                         0x44 (size before relaxing)
 .literal.rtc_clk_cal
                0x0000000040374a4c        0x0 libzephyr.a(rtc_time.c.obj)
                                         0x14 (size before relaxing)
 .literal.rtc_time_us_to_slowclk
                0x0000000040374a4c        0x0 libzephyr.a(rtc_time.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtc_time_get
                0x0000000040374a4c        0xc libzephyr.a(rtc_time.c.obj)
 .literal.rtc_clk_freq_cal
                0x0000000040374a58        0x0 libzephyr.a(rtc_time.c.obj)
                                          0x4 (size before relaxing)
 .literal.mspi_timing_config_set_core_clock
                0x0000000040374a58        0x4 libzephyr.a(mspi_timing_config.c.obj)
                                          0x8 (size before relaxing)
 .literal.mspi_timing_config_set_flash_clock
                0x0000000040374a5c        0x4 libzephyr.a(mspi_timing_config.c.obj)
                                          0xc (size before relaxing)
 .literal.mspi_timing_config_set_psram_clock
                0x0000000040374a60        0x0 libzephyr.a(mspi_timing_config.c.obj)
                                          0x8 (size before relaxing)
 .literal.mspi_timing_set_pin_drive_strength
                0x0000000040374a60        0x4 libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x10 (size before relaxing)
 .literal.mspi_timing_enter_low_speed_mode
                0x0000000040374a64        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x10 (size before relaxing)
 .literal.mspi_timing_enter_high_speed_mode
                0x0000000040374a64        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x14 (size before relaxing)
 .literal.mspi_timing_change_speed_mode_cache_safe
                0x0000000040374a64        0x8 libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x18 (size before relaxing)
 .literal.spi_timing_get_flash_timing_param
                0x0000000040374a6c        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
                                          0x4 (size before relaxing)
 .literal.Cache_Suspend_ICache
                0x0000000040374a6c        0x8 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .literal.Cache_Suspend_DCache
                0x0000000040374a74        0x4 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.Cache_Freeze_ICache_Enable
                0x0000000040374a78        0x4 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.Cache_Freeze_DCache_Enable
                0x0000000040374a7c        0x4 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.bootloader_ana_super_wdt_reset_config
                0x0000000040374a80        0x8 libzephyr.a(bootloader_soc.c.obj)
                                          0xc (size before relaxing)
 .literal.bootloader_ana_bod_reset_config
                0x0000000040374a88        0x4 libzephyr.a(bootloader_soc.c.obj)
                                          0xc (size before relaxing)
 .literal.bootloader_ana_clock_glitch_reset_config
                0x0000000040374a8c        0x8 libzephyr.a(bootloader_soc.c.obj)
                                          0xc (size before relaxing)
 .literal.bootloader_random_disable
                0x0000000040374a94       0x1c libzephyr.a(bootloader_random_esp32s3.c.obj)
                                         0x34 (size before relaxing)
 .literal.bootloader_random_enable
                0x0000000040374ab0       0x40 libzephyr.a(bootloader_random_esp32s3.c.obj)
                                         0x70 (size before relaxing)
 .iram1.1       0x0000000040374af0       0x88 libzephyr.a(soc.c.obj)
                                         0xac (size before relaxing)
                0x0000000040374af0                __esp_platform_start
 .iram1.2       0x0000000040374b78       0x1b libzephyr.a(soc.c.obj)
                0x0000000040374b78                arch_printk_char_out
 *fill*         0x0000000040374b93        0x1 
 .iram1.0       0x0000000040374b94       0x18 libzephyr.a(soc_cache.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040374b94                esp_config_instruction_cache_mode
 .iram1.1       0x0000000040374bac       0x58 libzephyr.a(soc_cache.c.obj)
                0x0000000040374bac                esp_config_data_cache_mode
 .iram1.0       0x0000000040374c04        0xa libzephyr.a(flash_encrypt.c.obj)
                                          0xd (size before relaxing)
                0x0000000040374c04                esp_flash_encryption_enabled
 *fill*         0x0000000040374c0e        0x2 
 .iram1.5       0x0000000040374c10       0x1e libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040374c2e        0x2 
 .iram1.6       0x0000000040374c30       0x44 libzephyr.a(esp_flash_api.c.obj)
 .iram1.10      0x0000000040374c74       0x54 libzephyr.a(esp_flash_api.c.obj)
 .iram1.12      0x0000000040374cc8       0x80 libzephyr.a(esp_flash_api.c.obj)
 .iram1.13      0x0000000040374d48       0x58 libzephyr.a(esp_flash_api.c.obj)
                0x0000000040374d48                esp_flash_get_physical_size
 .iram1.9       0x0000000040374da0      0x150 libzephyr.a(esp_flash_api.c.obj)
                                        0x15c (size before relaxing)
                0x0000000040374da0                esp_flash_init_main
 .iram1.21      0x0000000040374ef0      0x110 libzephyr.a(esp_flash_api.c.obj)
                0x0000000040374ef0                esp_flash_read
 .iram1.27      0x0000000040375000       0x6e libzephyr.a(esp_flash_api.c.obj)
                0x0000000040375000                esp_flash_read_encrypted
 *fill*         0x000000004037506e        0x2 
 .iram1.1       0x0000000040375070       0x7c libzephyr.a(flash_mmap.c.obj)
                                         0x80 (size before relaxing)
                0x0000000040375070                spi_flash_check_and_flush_cache
 .iram1.2       0x00000000403750ec        0xa libzephyr.a(flash_ops.c.obj)
                0x00000000403750ec                spi_flash_guard_set
 *fill*         0x00000000403750f6        0x2 
 .iram1.5       0x00000000403750f8       0x1f libzephyr.a(flash_ops.c.obj)
                                         0x26 (size before relaxing)
                0x00000000403750f8                spi_flash_init_chip_state
 *fill*         0x0000000040375117        0x1 
 .iram1.4       0x0000000040375118       0x47 libzephyr.a(flash_ops.c.obj)
                                         0x4b (size before relaxing)
                0x0000000040375118                esp_mspi_pin_init
 *fill*         0x000000004037515f        0x1 
 .iram1.3       0x0000000040375160       0x10 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .iram1.2       0x0000000040375170       0x1e libzephyr.a(spi_flash_os_func_noos.c.obj)
 *fill*         0x000000004037518e        0x2 
 .iram1.1       0x0000000040375190       0x13 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x00000000403751a3        0x1 
 .iram1.7       0x00000000403751a4       0x34 libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x38 (size before relaxing)
 .iram1.4       0x00000000403751d8       0x15 libzephyr.a(spi_flash_os_func_app.c.obj)
 *fill*         0x00000000403751ed        0x3 
 .iram1.8       0x00000000403751f0        0xa libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xe (size before relaxing)
 *fill*         0x00000000403751fa        0x2 
 .iram1.6       0x00000000403751fc       0x10 libzephyr.a(spi_flash_os_func_app.c.obj)
 .iram1.3       0x000000004037520c        0xa libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xd (size before relaxing)
 *fill*         0x0000000040375216        0x2 
 .iram1.2       0x0000000040375218        0xa libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xd (size before relaxing)
 *fill*         0x0000000040375222        0x2 
 .iram1.5       0x0000000040375224       0x27 libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x2b (size before relaxing)
 *fill*         0x000000004037524b        0x1 
 .iram1.0       0x000000004037524c       0x18 libzephyr.a(adc_share_hw_ctrl.c.obj)
                0x000000004037524c                adc_set_hw_calibration_code
 .iram1.2       0x0000000040375264       0x15 libzephyr.a(flash_qio_mode.c.obj)
                0x0000000040375264                bootloader_read_status_8b_rdsr3
 *fill*         0x0000000040375279        0x3 
 .iram1.6       0x000000004037527c       0x13 libzephyr.a(flash_qio_mode.c.obj)
                0x000000004037527c                bootloader_write_status_8b_wrsr3
 *fill*         0x000000004037528f        0x1 
 .iram1.0       0x0000000040375290       0x9c libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                0x0000000040375290                bootloader_flash_cs_timing_config
 .iram1.2       0x000000004037532c       0x28 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                0x000000004037532c                bootloader_flash_set_dummy_out
 .iram1.4       0x0000000040375354       0x78 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                0x0000000040375354                bootloader_configure_spi_pins
 .iram1.3       0x00000000403753cc        0xd libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x14 (size before relaxing)
                0x00000000403753cc                bootloader_flash_dummy_config
 *fill*         0x00000000403753d9        0x3 
 .iram1.1       0x00000000403753dc      0x1aa libzephyr.a(bootloader_flash.c.obj)
                0x00000000403753dc                bootloader_flash_execute_command_common
 *fill*         0x0000000040375586        0x2 
 .iram1.2       0x0000000040375588       0x20 libzephyr.a(bootloader_flash.c.obj)
                0x0000000040375588                bootloader_execute_flash_command
 .iram1.0       0x00000000403755a8      0x132 libzephyr.a(bootloader_flash.c.obj)
                                        0x14a (size before relaxing)
                0x00000000403755a8                bootloader_flash_unlock
 *fill*         0x00000000403756da        0x2 
 .iram1.3       0x00000000403756dc       0x2a libzephyr.a(bootloader_flash.c.obj)
                0x00000000403756dc                bootloader_flash_read_sfdp
 *fill*         0x0000000040375706        0x2 
 .iram1.4       0x0000000040375708       0x30 libzephyr.a(bootloader_flash.c.obj)
                                         0x34 (size before relaxing)
                0x0000000040375708                bootloader_read_flash_id
 .iram1.7       0x0000000040375738       0xa4 libzephyr.a(bootloader_flash.c.obj)
                                         0xb8 (size before relaxing)
                0x0000000040375738                bootloader_flash_xmc_startup
 .iram1.13      0x00000000403757dc       0x10 libzephyr.a(bootloader_flash.c.obj)
                0x00000000403757dc                bootloader_flash_is_octal_mode_enabled
 .iram1.2       0x00000000403757ec       0x23 libzephyr.a(esp_clk.c.obj)
                0x00000000403757ec                esp_clk_apb_freq
 *fill*         0x000000004037580f        0x1 
 .iram1.2       0x0000000040375810       0x2c libzephyr.a(regi2c_ctrl.c.obj)
                0x0000000040375810                regi2c_ctrl_read_reg_mask
 .iram1.3       0x000000004037583c       0x27 libzephyr.a(regi2c_ctrl.c.obj)
                0x000000004037583c                regi2c_ctrl_write_reg
 *fill*         0x0000000040375863        0x1 
 .iram1.4       0x0000000040375864       0x2e libzephyr.a(regi2c_ctrl.c.obj)
                0x0000000040375864                regi2c_ctrl_write_reg_mask
 *fill*         0x0000000040375892        0x2 
 .iram1.6       0x0000000040375894       0x34 libzephyr.a(rtc_module.c.obj)
                0x0000000040375894                rtc_isr_noniram_disable
 .iram1.7       0x00000000403758c8       0x1f libzephyr.a(rtc_module.c.obj)
                0x00000000403758c8                rtc_isr_noniram_enable
 *fill*         0x00000000403758e7        0x1 
 .iram1.2       0x00000000403758e8        0xf libzephyr.a(esp_mmu_map.c.obj)
 *fill*         0x00000000403758f7        0x1 
 .iram1.3       0x00000000403758f8       0x89 libzephyr.a(esp_mmu_map.c.obj)
                                         0x91 (size before relaxing)
 *fill*         0x0000000040375981        0x3 
 .iram1.4       0x0000000040375984       0x15 libzephyr.a(esp_mmu_map.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x0000000040375999        0x3 
 .iram1.1       0x000000004037599c       0x58 libzephyr.a(esp_mmu_map.c.obj)
                0x000000004037599c                esp_mmu_paddr_find_caps
 .iram1.1       0x00000000403759f4       0x1a libzephyr.a(esp_rom_sys.c.obj)
                0x00000000403759f4                esp_rom_install_uart_printf
 *fill*         0x0000000040375a0e        0x2 
 .iram1.0       0x0000000040375a10       0x8e libzephyr.a(esp_rom_uart.c.obj)
                0x0000000040375a10                esp_rom_uart_set_clock_baudrate
 *fill*         0x0000000040375a9e        0x2 
 .iram1.0       0x0000000040375aa0       0x18 libzephyr.a(efuse_hal.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040375aa0                efuse_hal_chip_revision
 .iram1.2       0x0000000040375ab8       0x26 libzephyr.a(efuse_hal.c.obj)
                0x0000000040375ab8                efuse_hal_flash_encryption_enabled
 *fill*         0x0000000040375ade        0x2 
 .iram1.0       0x0000000040375ae0       0x3e libzephyr.a(efuse_hal.c.obj)
                0x0000000040375ae0                efuse_hal_get_major_chip_version
 *fill*         0x0000000040375b1e        0x2 
 .iram1.1       0x0000000040375b20       0x3e libzephyr.a(efuse_hal.c.obj)
                0x0000000040375b20                efuse_hal_get_minor_chip_version
 *fill*         0x0000000040375b5e        0x2 
 .iram1.4       0x0000000040375b60       0x34 libzephyr.a(cache_utils.c.obj)
                                         0x44 (size before relaxing)
                0x0000000040375b60                spi_flash_disable_interrupts_caches_and_other_cpu
 .iram1.5       0x0000000040375b94       0x3c libzephyr.a(cache_utils.c.obj)
                                         0x44 (size before relaxing)
                0x0000000040375b94                spi_flash_enable_interrupts_caches_and_other_cpu
 .iram1.6       0x0000000040375bd0       0x10 libzephyr.a(cache_utils.c.obj)
                0x0000000040375bd0                spi_flash_cache_enabled
 .iram1.1       0x0000000040375be0       0x33 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x3a (size before relaxing)
 *fill*         0x0000000040375c13        0x1 
 .iram1.0       0x0000000040375c14       0x16 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000040375c14                default_intr_handler
 *fill*         0x0000000040375c2a        0x2 
 .iram1.4       0x0000000040375c2c       0xb2 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000040375c2c                esp_intr_disable
 *fill*         0x0000000040375cde        0x2 
 .iram1.5       0x0000000040375ce0       0x52 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x5a (size before relaxing)
                0x0000000040375ce0                esp_intr_noniram_disable
 *fill*         0x0000000040375d32        0x2 
 .iram1.6       0x0000000040375d34       0x40 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x48 (size before relaxing)
                0x0000000040375d34                esp_intr_noniram_enable
 .iram1.0       0x0000000040375d74       0x6e drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000040375de2        0x2 
 .iram1.1       0x0000000040375de4       0x11 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x17 (size before relaxing)
 *fill*         0x0000000040375df5        0x0 
 *fill*         0x0000000040375df5        0x3 
 .iram1.3       0x0000000040375df8       0x2b libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040375e23        0x1 
 .iram1.4       0x0000000040375e24       0x21 libzephyr.a(esp_flash_api.c.obj)
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x0 
 *fill*         0x0000000040375e45        0x3 
 .iram1.9       0x0000000040375e48        0x7 libzephyr.a(spi_flash_os_func_app.c.obj)
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x0 
 *fill*         0x0000000040375e4f        0x1 
 .iram1.6       0x0000000040375e50       0x46 libzephyr.a(bootloader_flash.c.obj)
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *fill*         0x0000000040375e96        0x0 
 *(SORT_BY_ALIGNMENT(.iram0.literal) SORT_BY_ALIGNMENT(.iram.literal) SORT_BY_ALIGNMENT(.iram.text.literal) SORT_BY_ALIGNMENT(.iram0.text) SORT_BY_ALIGNMENT(.iram.text))
 *fill*         0x0000000040375e96        0x2 
 .iram0.text    0x0000000040375e98       0x2d arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040375e98                _Level1Vector
 *fill*         0x0000000040375ec5        0x0 
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040375ec5        0x3 
 .text.arch_cpu_idle
                0x0000000040375ec8        0xe arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                0x0000000040375ec8                arch_cpu_idle
 *fill*         0x0000000040375ed6        0x2 
 .text.xtensa_fatal_error
                0x0000000040375ed8       0x1e arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x22 (size before relaxing)
                0x0000000040375ed8                xtensa_fatal_error
 *fill*         0x0000000040375ef6        0x2 
 .text          0x0000000040375ef8      0x21c arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                0x0000000040375ef8                xtensa_spill_reg_windows
                0x0000000040375f18                xtensa_save_high_regs
                0x0000000040375f60                xtensa_restore_high_regs
                0x0000000040375f95                _restore_context
                0x0000000040375fcc                xtensa_arch_except
                0x0000000040375fcf                xtensa_arch_except_epc
                0x0000000040375fd4                xtensa_arch_kernel_oops
                0x0000000040375fd7                xtensa_arch_kernel_oops_epc
                0x0000000040375fdc                xtensa_switch
 .text.z_irq_spurious
                0x0000000040376114       0x12 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040376114                z_irq_spurious
 *fill*         0x0000000040376126        0x2 
 .text.arch_new_thread
                0x0000000040376128       0x38 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                0x0000000040376128                arch_new_thread
 .text.return_to
                0x0000000040376160       0x14 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x18 (size before relaxing)
 .text.xtensa_is_outside_stack_bounds
                0x0000000040376174       0x3d arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040376174                xtensa_is_outside_stack_bounds
 *fill*         0x00000000403761b1        0x3 
 .text.xtensa_is_frame_pointer_valid
                0x00000000403761b4       0x28 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x2c (size before relaxing)
                0x00000000403761b4                xtensa_is_frame_pointer_valid
 .text.xtensa_dump_stack
                0x00000000403761dc        0xa arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                          0xe (size before relaxing)
                0x00000000403761dc                xtensa_dump_stack
 *fill*         0x00000000403761e6        0x2 
 .text.xtensa_int2_c
                0x00000000403761e8       0x5a arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x00000000403761e8                xtensa_int2_c
 *fill*         0x0000000040376242        0x2 
 .text.xtensa_int3_c
                0x0000000040376244       0x82 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040376244                xtensa_int3_c
 *fill*         0x00000000403762c6        0x2 
 .text.xtensa_int4_c
                0x00000000403762c8       0x6a arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x00000000403762c8                xtensa_int4_c
 *fill*         0x0000000040376332        0x2 
 .text.xtensa_int5_c
                0x0000000040376334       0x5e arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040376334                xtensa_int5_c
 *fill*         0x0000000040376392        0x2 
 .text.xtensa_int6_c
                0x0000000040376394       0x15 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x0000000040376394                xtensa_int6_c
 *fill*         0x00000000403763a9        0x3 
 .text.xtensa_int7_c
                0x00000000403763ac       0x36 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                0x00000000403763ac                xtensa_int7_c
 *fill*         0x00000000403763e2        0x2 
 .text.xtensa_excint1_c
                0x00000000403763e4      0x1be arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x1c6 (size before relaxing)
                0x00000000403763e4                xtensa_excint1_c
 *fill*         0x00000000403765a2        0x2 
 .text.z_prep_c
                0x00000000403765a4       0x10 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x14 (size before relaxing)
                0x00000000403765a4                z_prep_c
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *fill*         0x00000000403765b4        0x0 
 *libkernel.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.z_impl_z_errno
                0x00000000403765b4        0xd kernel/libkernel.a(errno.c.obj)
                0x00000000403765b4                z_impl_z_errno
 *fill*         0x00000000403765c1        0x3 
 .text.k_sys_fatal_error_handler
                0x00000000403765c4        0x8 kernel/libkernel.a(fatal.c.obj)
                                          0xc (size before relaxing)
                0x00000000403765c4                k_sys_fatal_error_handler
 .text.z_fatal_error
                0x00000000403765cc       0x22 kernel/libkernel.a(fatal.c.obj)
                                         0x26 (size before relaxing)
                0x00000000403765cc                z_fatal_error
 *fill*         0x00000000403765ee        0x2 
 .text.z_sys_init_run_level
                0x00000000403765f0       0x30 kernel/libkernel.a(init.c.obj)
 .text.bg_thread_main
                0x0000000040376620       0xa2 kernel/libkernel.a(init.c.obj)
                                         0xb6 (size before relaxing)
 *fill*         0x00000000403766c2        0x2 
 .text.z_early_memset
                0x00000000403766c4       0x12 kernel/libkernel.a(init.c.obj)
                0x00000000403766c4                z_early_memset
 *fill*         0x00000000403766d6        0x2 
 .text.z_bss_zero
                0x00000000403766d8       0x13 kernel/libkernel.a(init.c.obj)
                                         0x16 (size before relaxing)
                0x00000000403766d8                z_bss_zero
 *fill*         0x00000000403766eb        0x1 
 .text.z_init_cpu
                0x00000000403766ec       0x5b kernel/libkernel.a(init.c.obj)
                0x00000000403766ec                z_init_cpu
 *fill*         0x0000000040376747        0x1 
 .text.z_cstart
                0x0000000040376748       0x97 kernel/libkernel.a(init.c.obj)
                                         0xbb (size before relaxing)
                0x0000000040376748                z_cstart
 *fill*         0x00000000403767df        0x1 
 .text.k_heap_init
                0x00000000403767e0       0x17 kernel/libkernel.a(kheap.c.obj)
                0x00000000403767e0                k_heap_init
 *fill*         0x00000000403767f7        0x1 
 .text.statics_init
                0x00000000403767f8       0x22 kernel/libkernel.a(kheap.c.obj)
 *fill*         0x000000004037681a        0x2 
 .text.k_heap_aligned_alloc
                0x000000004037681c       0x5a kernel/libkernel.a(kheap.c.obj)
                                         0x62 (size before relaxing)
                0x000000004037681c                k_heap_aligned_alloc
 *fill*         0x0000000040376876        0x2 
 .text.k_heap_free
                0x0000000040376878       0x2c kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040376878                k_heap_free
 .text.idle     0x00000000403768a4        0xc kernel/libkernel.a(idle.c.obj)
                                          0xf (size before relaxing)
                0x00000000403768a4                idle
 *fill*         0x00000000403768b0        0x0 
 .text.adjust_owner_prio$isra$0
                0x00000000403768b0       0x1c kernel/libkernel.a(mutex.c.obj)
 .text.z_impl_k_mutex_lock
                0x00000000403768cc       0xc7 kernel/libkernel.a(mutex.c.obj)
                                         0xcf (size before relaxing)
                0x00000000403768cc                z_impl_k_mutex_lock
 *fill*         0x0000000040376993        0x1 
 .text.z_impl_k_mutex_unlock
                0x0000000040376994       0x88 kernel/libkernel.a(mutex.c.obj)
                                         0x98 (size before relaxing)
                0x0000000040376994                z_impl_k_mutex_unlock
 .text.z_impl_k_sem_give
                0x0000000040376a1c       0x5e kernel/libkernel.a(sem.c.obj)
                                         0x66 (size before relaxing)
                0x0000000040376a1c                z_impl_k_sem_give
 *fill*         0x0000000040376a7a        0x2 
 .text.z_impl_k_sem_take
                0x0000000040376a7c       0x3a kernel/libkernel.a(sem.c.obj)
                                         0x3d (size before relaxing)
                0x0000000040376a7c                z_impl_k_sem_take
 *fill*         0x0000000040376ab6        0x2 
 .text.z_impl_k_thread_start
                0x0000000040376ab8        0xa kernel/libkernel.a(thread.c.obj)
                                          0xe (size before relaxing)
                0x0000000040376ab8                z_impl_k_thread_start
 *fill*         0x0000000040376ac2        0x2 
 .text.z_setup_new_thread
                0x0000000040376ac4       0x5d kernel/libkernel.a(thread.c.obj)
                0x0000000040376ac4                z_setup_new_thread
 *fill*         0x0000000040376b21        0x3 
 .text.unpend_thread_no_timeout
                0x0000000040376b24       0x19 kernel/libkernel.a(sched.c.obj)
                                         0x1d (size before relaxing)
 *fill*         0x0000000040376b3d        0x3 
 .text.unready_thread
                0x0000000040376b40       0x5e kernel/libkernel.a(sched.c.obj)
                                         0x62 (size before relaxing)
 *fill*         0x0000000040376b9e        0x2 
 .text.z_swap   0x0000000040376ba0       0x3a kernel/libkernel.a(sched.c.obj)
                                         0x3e (size before relaxing)
 *fill*         0x0000000040376bda        0x2 
 .text.ready_thread
                0x0000000040376bdc       0xa4 kernel/libkernel.a(sched.c.obj)
 .text.z_thread_halt
                0x0000000040376c80      0x110 kernel/libkernel.a(sched.c.obj)
                                        0x128 (size before relaxing)
 .text.add_to_waitq_locked
                0x0000000040376d90       0x58 kernel/libkernel.a(sched.c.obj)
                                         0x5c (size before relaxing)
 .text.move_thread_to_end_of_prio_q
                0x0000000040376de8       0xa2 kernel/libkernel.a(sched.c.obj)
                                         0xaa (size before relaxing)
                0x0000000040376de8                move_thread_to_end_of_prio_q
 *fill*         0x0000000040376e8a        0x2 
 .text.z_ready_thread
                0x0000000040376e8c       0x13 kernel/libkernel.a(sched.c.obj)
                                         0x16 (size before relaxing)
                0x0000000040376e8c                z_ready_thread
 *fill*         0x0000000040376e9f        0x1 
 .text.z_impl_k_thread_suspend
                0x0000000040376ea0       0x29 kernel/libkernel.a(sched.c.obj)
                                         0x2c (size before relaxing)
                0x0000000040376ea0                z_impl_k_thread_suspend
 *fill*         0x0000000040376ec9        0x3 
 .text.z_unpend_thread_no_timeout
                0x0000000040376ecc       0x18 kernel/libkernel.a(sched.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040376ecc                z_unpend_thread_no_timeout
 .text.z_sched_wake_thread
                0x0000000040376ee4       0x39 kernel/libkernel.a(sched.c.obj)
                                         0x40 (size before relaxing)
                0x0000000040376ee4                z_sched_wake_thread
 *fill*         0x0000000040376f1d        0x3 
 .text.z_thread_timeout
                0x0000000040376f20        0xd kernel/libkernel.a(sched.c.obj)
                                         0x10 (size before relaxing)
                0x0000000040376f20                z_thread_timeout
 *fill*         0x0000000040376f2d        0x3 
 .text.z_pend_curr
                0x0000000040376f30       0x34 kernel/libkernel.a(sched.c.obj)
                                         0x3c (size before relaxing)
                0x0000000040376f30                z_pend_curr
 .text.z_unpend_thread
                0x0000000040376f64       0x10 kernel/libkernel.a(sched.c.obj)
                                         0x17 (size before relaxing)
                0x0000000040376f64                z_unpend_thread
 *fill*         0x0000000040376f74        0x0 
 .text.z_thread_prio_set
                0x0000000040376f74       0xa9 kernel/libkernel.a(sched.c.obj)
                                         0xad (size before relaxing)
                0x0000000040376f74                z_thread_prio_set
 *fill*         0x000000004037701d        0x3 
 .text.z_reschedule
                0x0000000040377020       0x2c kernel/libkernel.a(sched.c.obj)
                                         0x30 (size before relaxing)
                0x0000000040377020                z_reschedule
 .text.z_sched_start
                0x000000004037704c       0x32 kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x000000004037704c                z_sched_start
 *fill*         0x000000004037707e        0x2 
 .text.z_reschedule_irqlock
                0x0000000040377080       0x40 kernel/libkernel.a(sched.c.obj)
                                         0x44 (size before relaxing)
                0x0000000040377080                z_reschedule_irqlock
 .text.k_sched_lock
                0x00000000403770c0       0x1b kernel/libkernel.a(sched.c.obj)
                0x00000000403770c0                k_sched_lock
 *fill*         0x00000000403770db        0x1 
 .text.k_sched_unlock
                0x00000000403770dc       0x5e kernel/libkernel.a(sched.c.obj)
                                         0x61 (size before relaxing)
                0x00000000403770dc                k_sched_unlock
 *fill*         0x000000004037713a        0x2 
 .text.z_swap_next_thread
                0x000000004037713c        0xa kernel/libkernel.a(sched.c.obj)
                0x000000004037713c                z_swap_next_thread
 *fill*         0x0000000040377146        0x2 
 .text.z_get_next_switch_handle
                0x0000000040377148       0x14 kernel/libkernel.a(sched.c.obj)
                0x0000000040377148                z_get_next_switch_handle
 .text.z_unpend_all
                0x000000004037715c       0x26 kernel/libkernel.a(sched.c.obj)
                                         0x2a (size before relaxing)
                0x000000004037715c                z_unpend_all
 *fill*         0x0000000040377182        0x2 
 .text.z_sched_init
                0x0000000040377184        0xf kernel/libkernel.a(sched.c.obj)
                0x0000000040377184                z_sched_init
 *fill*         0x0000000040377193        0x1 
 .text.z_impl_k_yield
                0x0000000040377194       0x98 kernel/libkernel.a(sched.c.obj)
                                         0x9c (size before relaxing)
                0x0000000040377194                z_impl_k_yield
 .text.z_tick_sleep
                0x000000004037722c       0x6a kernel/libkernel.a(sched.c.obj)
                                         0x7a (size before relaxing)
 *fill*         0x0000000040377296        0x2 
 .text.z_impl_k_sleep
                0x0000000040377298       0x42 kernel/libkernel.a(sched.c.obj)
                0x0000000040377298                z_impl_k_sleep
 *fill*         0x00000000403772da        0x2 
 .text.z_impl_k_sched_current_thread_query
                0x00000000403772dc        0xa kernel/libkernel.a(sched.c.obj)
                0x00000000403772dc                z_impl_k_sched_current_thread_query
 *fill*         0x00000000403772e6        0x2 
 .text.z_thread_abort
                0x00000000403772e8       0x2f kernel/libkernel.a(sched.c.obj)
                                         0x36 (size before relaxing)
                0x00000000403772e8                z_thread_abort
 *fill*         0x0000000040377317        0x1 
 .text.z_impl_k_thread_abort
                0x0000000040377318        0xa kernel/libkernel.a(sched.c.obj)
                                          0xe (size before relaxing)
                0x0000000040377318                z_impl_k_thread_abort
 *fill*         0x0000000040377322        0x2 
 .text.slice_timeout
                0x0000000040377324       0x1e kernel/libkernel.a(timeslicing.c.obj)
 *fill*         0x0000000040377342        0x2 
 .text.thread_is_sliceable
                0x0000000040377344       0x45 kernel/libkernel.a(timeslicing.c.obj)
                0x0000000040377344                thread_is_sliceable
 *fill*         0x0000000040377389        0x3 
 .text.z_reset_time_slice
                0x000000004037738c       0x3f kernel/libkernel.a(timeslicing.c.obj)
                                         0x47 (size before relaxing)
                0x000000004037738c                z_reset_time_slice
 *fill*         0x00000000403773cb        0x1 
 .text.z_time_slice
                0x00000000403773cc       0x3b kernel/libkernel.a(timeslicing.c.obj)
                                         0x42 (size before relaxing)
                0x00000000403773cc                z_time_slice
 *fill*         0x0000000040377407        0x1 
 .text.elapsed  0x0000000040377408       0x14 kernel/libkernel.a(timeout.c.obj)
                                         0x18 (size before relaxing)
 .text.remove_timeout
                0x000000004037741c       0x3a kernel/libkernel.a(timeout.c.obj)
 *fill*         0x0000000040377456        0x2 
 .text.next_timeout
                0x0000000040377458       0x4b kernel/libkernel.a(timeout.c.obj)
 *fill*         0x00000000403774a3        0x1 
 .text.z_add_timeout
                0x00000000403774a4      0x10c kernel/libkernel.a(timeout.c.obj)
                                        0x114 (size before relaxing)
                0x00000000403774a4                z_add_timeout
 .text.z_abort_timeout
                0x00000000403775b0       0x1e kernel/libkernel.a(timeout.c.obj)
                                         0x22 (size before relaxing)
                0x00000000403775b0                z_abort_timeout
 *fill*         0x00000000403775ce        0x2 
 .text.sys_clock_announce
                0x00000000403775d0       0xd5 kernel/libkernel.a(timeout.c.obj)
                                         0xdd (size before relaxing)
                0x00000000403775d0                sys_clock_announce
 *fill*         0x00000000403776a5        0x3 
 .text.sys_clock_tick_get
                0x00000000403776a8       0x28 kernel/libkernel.a(timeout.c.obj)
                                         0x2c (size before relaxing)
                0x00000000403776a8                sys_clock_tick_get
 .text.sys_clock_tick_get_32
                0x00000000403776d0        0xa kernel/libkernel.a(timeout.c.obj)
                                          0xd (size before relaxing)
                0x00000000403776d0                sys_clock_tick_get_32
 *fill*         0x00000000403776da        0x2 
 .text.z_impl_k_uptime_ticks
                0x00000000403776dc        0xf kernel/libkernel.a(timeout.c.obj)
                0x00000000403776dc                z_impl_k_uptime_ticks
 *fill*         0x00000000403776eb        0x1 
 .text.sys_timepoint_calc
                0x00000000403776ec       0x4a kernel/libkernel.a(timeout.c.obj)
                                         0x4e (size before relaxing)
                0x00000000403776ec                sys_timepoint_calc
 *fill*         0x0000000040377736        0x2 
 .text.sys_timepoint_timeout
                0x0000000040377738       0x4a kernel/libkernel.a(timeout.c.obj)
                0x0000000040377738                sys_timepoint_timeout
 *fill*         0x0000000040377782        0x2 
 .text.z_heap_aligned_alloc
                0x0000000040377784       0x25 kernel/libkernel.a(mempool.c.obj)
                                         0x29 (size before relaxing)
 *fill*         0x00000000403777a9        0x3 
 .text.k_free   0x00000000403777ac       0x14 kernel/libkernel.a(mempool.c.obj)
                0x00000000403777ac                k_free
 .text.k_aligned_alloc
                0x00000000403777c0       0x14 kernel/libkernel.a(mempool.c.obj)
                0x00000000403777c0                k_aligned_alloc
 .text.k_malloc
                0x00000000403777d4       0x11 kernel/libkernel.a(mempool.c.obj)
                0x00000000403777d4                k_malloc
 *fill*         0x00000000403777e5        0x3 
 .text.k_calloc
                0x00000000403777e8       0x2a kernel/libkernel.a(mempool.c.obj)
                0x00000000403777e8                k_calloc
 *fill*         0x0000000040377812        0x2 
 .text.k_thread_system_pool_assign
                0x0000000040377814        0xb kernel/libkernel.a(mempool.c.obj)
                0x0000000040377814                k_thread_system_pool_assign
 *fill*         0x000000004037781f        0x1 
 .text.boot_banner
                0x0000000040377820        0xb kernel/libkernel.a(banner.c.obj)
                                          0xe (size before relaxing)
                0x0000000040377820                boot_banner
 *fill*         0x000000004037782b        0x1 
 .text.z_device_state_init
                0x000000004037782c        0x5 kernel/libkernel.a(device.c.obj)
                0x000000004037782c                z_device_state_init
 *fill*         0x0000000040377831        0x3 
 .text.z_impl_device_is_ready
                0x0000000040377834       0x1a kernel/libkernel.a(device.c.obj)
                0x0000000040377834                z_impl_device_is_ready
 *fill*         0x000000004037784e        0x0 
 *fill*         0x000000004037784e        0x2 
 .text.arch_system_halt
                0x0000000040377850        0x9 kernel/libkernel.a(fatal.c.obj)
                0x0000000040377850                arch_system_halt
 *fill*         0x0000000040377859        0x0 
 *fill*         0x0000000040377859        0x3 
 .text.do_device_init
                0x000000004037785c       0x33 kernel/libkernel.a(init.c.obj)
 *fill*         0x000000004037788f        0x0 
 *fill*         0x000000004037788f        0x0 
 *fill*         0x000000004037788f        0x0 
 *fill*         0x000000004037788f        0x0 
 *fill*         0x000000004037788f        0x0 
 *fill*         0x000000004037788f        0x1 
 .text.z_init_static
                0x0000000040377890        0x5 kernel/libkernel.a(init_static.c.obj)
                0x0000000040377890                z_init_static
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x0 
 *fill*         0x0000000040377895        0x3 
 .text.k_is_in_isr
                0x0000000040377898       0x11 kernel/libkernel.a(thread.c.obj)
                0x0000000040377898                k_is_in_isr
 *fill*         0x00000000403778a9        0x0 
 *fill*         0x00000000403778a9        0x0 
 *fill*         0x00000000403778a9        0x3 
 .text.sys_dlist_remove
                0x00000000403778ac       0x13 kernel/libkernel.a(sched.c.obj)
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *fill*         0x00000000403778bf        0x0 
 *libgcc.a:lib2funcs.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_packaged.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:windowspill_asm.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_noos.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000403778bf        0x1 
 .text.esp_log_impl_lock
                0x00000000403778c0       0x16 libzephyr.a(log_noos.c.obj)
                0x00000000403778c0                esp_log_impl_lock
 *fill*         0x00000000403778d6        0x2 
 .text.esp_log_impl_lock_timeout
                0x00000000403778d8        0xa libzephyr.a(log_noos.c.obj)
                                          0xd (size before relaxing)
                0x00000000403778d8                esp_log_impl_lock_timeout
 *fill*         0x00000000403778e2        0x2 
 .text.esp_log_impl_unlock
                0x00000000403778e4       0x17 libzephyr.a(log_noos.c.obj)
                0x00000000403778e4                esp_log_impl_unlock
 *fill*         0x00000000403778fb        0x1 
 .text.esp_log_early_timestamp
                0x00000000403778fc       0x1d libzephyr.a(log_noos.c.obj)
                0x00000000403778fc                esp_log_timestamp
                0x00000000403778fc                esp_log_early_timestamp
 *fill*         0x0000000040377919        0x0 
 *fill*         0x0000000040377919        0x0 
 *fill*         0x0000000040377919        0x0 
 *fill*         0x0000000040377919        0x0 
 *libdrivers__timer.a:xtensa_sys_timer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377919        0x3 
 .text.ccompare_isr
                0x000000004037791c       0x32 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x000000004037794e        0x2 
 .text.sys_clock_set_timeout
                0x0000000040377950       0x68 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x0000000040377950                sys_clock_set_timeout
 .text.sys_clock_elapsed
                0x00000000403779b8       0x22 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                0x00000000403779b8                sys_clock_elapsed
 *fill*         0x00000000403779da        0x0 
 *fill*         0x00000000403779da        0x2 
 .text.sys_clock_driver_init
                0x00000000403779dc       0x23 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *fill*         0x00000000403779ff        0x0 
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:printk.*(SORT_BY_ALIGNMENT(.literal.printk) SORT_BY_ALIGNMENT(.literal.vprintk) SORT_BY_ALIGNMENT(.literal.char_out) SORT_BY_ALIGNMENT(.text.printk) SORT_BY_ALIGNMENT(.text.vprintk) SORT_BY_ALIGNMENT(.text.char_out))
 *fill*         0x00000000403779ff        0x1 
 .text.char_out
                0x0000000040377a00       0x11 libzephyr.a(printk.c.obj)
 *fill*         0x0000000040377a11        0x3 
 .text.vprintk  0x0000000040377a14       0x2c libzephyr.a(printk.c.obj)
                0x0000000040377a14                vprintk
 .text.printk   0x0000000040377a40       0x22 libzephyr.a(printk.c.obj)
                                         0x26 (size before relaxing)
                0x0000000040377a40                printk
 *fill*         0x0000000040377a62        0x0 
 *fill*         0x0000000040377a62        0x0 
 *libzephyr.a:log_msg.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_list.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libdrivers__console.a:uart_console.*(SORT_BY_ALIGNMENT(.literal.console_out) SORT_BY_ALIGNMENT(.text.console_out))
 *fill*         0x0000000040377a62        0x2 
 .text.console_out
                0x0000000040377a64       0x22 drivers/console/libdrivers__console.a(uart_console.c.obj)
 *fill*         0x0000000040377a86        0x0 
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:log_minimal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377a86        0x2 
 .text.map_rom_segments
                0x0000000040377a88      0x320 libzephyr.a(loader.c.obj)
                                        0x33c (size before relaxing)
                0x0000000040377a88                map_rom_segments
 .text.__start  0x0000000040377da8       0x5a libzephyr.a(loader.c.obj)
                                         0x6a (size before relaxing)
                0x0000000040377da8                __start
 *fill*         0x0000000040377e02        0x0 
 *libzephyr.a:esp_mmu_map.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040377e02        0x2 
 .text.esp_mmu_map_init
                0x0000000040377e04      0x14e libzephyr.a(esp_mmu_map.c.obj)
                0x0000000040377e04                esp_mmu_map_init
 *fill*         0x0000000040377f52        0x2 
 .text.esp_mmu_map
                0x0000000040377f54      0x385 libzephyr.a(esp_mmu_map.c.obj)
                                        0x3a1 (size before relaxing)
                0x0000000040377f54                esp_mmu_map
 *fill*         0x00000000403782d9        0x3 
 .text.esp_mmu_unmap
                0x00000000403782dc       0xe8 libzephyr.a(esp_mmu_map.c.obj)
                                         0xf8 (size before relaxing)
                0x00000000403782dc                esp_mmu_unmap
 *fill*         0x00000000403783c4        0x0 
 *fill*         0x00000000403783c4        0x0 
 *fill*         0x00000000403783c4        0x0 
 *libdrivers__interrupt_controller.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_intr_lock
                0x00000000403783c4        0xd drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000403783d1        0x3 
 .text.esp_intr_unlock
                0x00000000403783d4       0x10 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .text.find_desc_for_int
                0x00000000403783e4       0x23 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000040378407        0x1 
 .text.is_vect_desc_usable
                0x0000000040378408       0xaa drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x00000000403784b2        0x2 
 .text.get_desc_for_int
                0x00000000403784b4       0x94 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .text.set_interrupt_handler
                0x0000000040378548       0x2b drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000040378573        0x1 
 .text.esp_intr_initialize
                0x0000000040378574       0x1a drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                0x0000000040378574                esp_intr_initialize
 *fill*         0x000000004037858e        0x2 
 .text.esp_intr_alloc_intrstatus
                0x0000000040378590      0x393 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0x3bb (size before relaxing)
                0x0000000040378590                esp_intr_alloc_intrstatus
 *fill*         0x0000000040378923        0x1 
 .text.esp_intr_alloc
                0x0000000040378924       0x18 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x1c (size before relaxing)
                0x0000000040378924                esp_intr_alloc
 .text.z_xt_ints_off
                0x000000004037893c       0x16 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *fill*         0x0000000040378952        0x0 
 *liblib__libc__minimal.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__newlib.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *liblib__libc__picolibc.a:string.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libphy.a:(SORT_BY_ALIGNMENT(.phyiram) SORT_BY_ALIGNMENT(.phyiram.*))
 *libgcov.a:(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040378952        0x2 
 .text.mmu_hal_unmap_all
                0x0000000040378954       0x17 libzephyr.a(mmu_hal.c.obj)
                0x0000000040378954                mmu_hal_unmap_all
 *fill*         0x000000004037896b        0x1 
 .text.mmu_hal_init
                0x000000004037896c        0xe libzephyr.a(mmu_hal.c.obj)
                                         0x11 (size before relaxing)
                0x000000004037896c                mmu_hal_init
 *fill*         0x000000004037897a        0x2 
 .text.mmu_hal_map_region
                0x000000004037897c       0x43 libzephyr.a(mmu_hal.c.obj)
                0x000000004037897c                mmu_hal_map_region
 *fill*         0x00000000403789bf        0x1 
 .text.mmu_hal_unmap_region
                0x00000000403789c0       0x2f libzephyr.a(mmu_hal.c.obj)
                0x00000000403789c0                mmu_hal_unmap_region
 *fill*         0x00000000403789ef        0x1 
 .text.mmu_hal_paddr_to_vaddr
                0x00000000403789f0       0x5d libzephyr.a(mmu_hal.c.obj)
                0x00000000403789f0                mmu_hal_paddr_to_vaddr
 *fill*         0x0000000040378a4d        0x3 
 .text.mmu_hal_check_valid_ext_vaddr_region
                0x0000000040378a50       0x6c libzephyr.a(mmu_hal.c.obj)
                0x0000000040378a50                mmu_hal_check_valid_ext_vaddr_region
 *fill*         0x0000000040378abc        0x0 
 *fill*         0x0000000040378abc        0x0 
 *fill*         0x0000000040378abc        0x0 
 *fill*         0x0000000040378abc        0x0 
 *fill*         0x0000000040378abc        0x0 
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.spimem_flash_ll_set_buffer_data
                0x0000000040378abc       0x40 libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spimem_flash_ll_get_buffer_data
                0x0000000040378afc       0x54 libzephyr.a(spi_flash_hal_iram.c.obj)
 .text.spi_flash_hal_configure_host_io_mode
                0x0000000040378b50      0x2d9 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378b50                spi_flash_hal_configure_host_io_mode
 *fill*         0x0000000040378e29        0x3 
 .text.spi_flash_hal_common_command
                0x0000000040378e2c      0x118 libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x120 (size before relaxing)
                0x0000000040378e2c                spi_flash_hal_common_command
 .text.spi_flash_hal_read
                0x0000000040378f44       0x80 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378f44                spi_flash_hal_read
 .text.spi_flash_hal_erase_sector
                0x0000000040378fc4       0x73 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040378fc4                spi_flash_hal_erase_sector
 *fill*         0x0000000040379037        0x1 
 .text.spi_flash_hal_erase_block
                0x0000000040379038       0x6c libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379038                spi_flash_hal_erase_block
 .text.spi_flash_hal_program_page
                0x00000000403790a4       0x86 libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x8a (size before relaxing)
                0x00000000403790a4                spi_flash_hal_program_page
 *fill*         0x000000004037912a        0x2 
 .text.spi_flash_hal_setup_read_suspend
                0x000000004037912c       0x16 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x000000004037912c                spi_flash_hal_setup_read_suspend
 *fill*         0x0000000040379142        0x2 
 .text.spi_flash_hal_setup_auto_suspend_mode
                0x0000000040379144       0x53 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379144                spi_flash_hal_setup_auto_suspend_mode
 *fill*         0x0000000040379197        0x1 
 .text.spi_flash_hal_disable_auto_suspend_mode
                0x0000000040379198       0x53 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379198                spi_flash_hal_disable_auto_suspend_mode
 *fill*         0x00000000403791eb        0x1 
 .text.spi_flash_hal_device_config
                0x00000000403791ec      0x111 libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x115 (size before relaxing)
                0x00000000403791ec                spi_flash_hal_device_config
 *fill*         0x00000000403792fd        0x3 
 .text.spi_flash_hal_poll_cmd_done
                0x0000000040379300        0xf libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379300                spi_flash_hal_poll_cmd_done
 *fill*         0x000000004037930f        0x0 
 *fill*         0x000000004037930f        0x1 
 .text.spi_flash_hal_erase_chip
                0x0000000040379310       0x28 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379310                spi_flash_hal_erase_chip
 *fill*         0x0000000040379338        0x0 
 *fill*         0x0000000040379338        0x0 
 .text.spi_flash_hal_set_write_protect
                0x0000000040379338       0x30 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379338                spi_flash_hal_set_write_protect
 .text.spi_flash_hal_check_status
                0x0000000040379368       0x25 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379368                spi_flash_hal_check_status
 *fill*         0x000000004037938d        0x0 
 *fill*         0x000000004037938d        0x0 
 *fill*         0x000000004037938d        0x0 
 *fill*         0x000000004037938d        0x0 
 *fill*         0x000000004037938d        0x3 
 .text.spi_flash_hal_resume
                0x0000000040379390       0x18 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x0000000040379390                spi_flash_hal_resume
 .text.spi_flash_hal_suspend
                0x00000000403793a8       0x18 libzephyr.a(spi_flash_hal_iram.c.obj)
                0x00000000403793a8                spi_flash_hal_suspend
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.spi_flash_encryption_hal_enable
                0x00000000403793c0       0x21 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793c0                spi_flash_encryption_hal_enable
 *fill*         0x00000000403793e1        0x3 
 .text.spi_flash_encryption_hal_disable
                0x00000000403793e4       0x17 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793e4                spi_flash_encryption_hal_disable
 *fill*         0x00000000403793fb        0x1 
 .text.spi_flash_encryption_hal_prepare
                0x00000000403793fc       0x34 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x00000000403793fc                spi_flash_encryption_hal_prepare
 .text.spi_flash_encryption_hal_done
                0x0000000040379430       0x22 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040379430                spi_flash_encryption_hal_done
 *fill*         0x0000000040379452        0x2 
 .text.spi_flash_encryption_hal_destroy
                0x0000000040379454        0xf libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040379454                spi_flash_encryption_hal_destroy
 *fill*         0x0000000040379463        0x0 
 *fill*         0x0000000040379463        0x0 
 *fill*         0x0000000040379463        0x0 
 *fill*         0x0000000040379463        0x1 
 .text.spi_flash_encryption_hal_check
                0x0000000040379464        0xf libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                0x0000000040379464                spi_flash_encryption_hal_check
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379473        0x1 
 .text.cache_hal_init
                0x0000000040379474       0x5c libzephyr.a(cache_hal.c.obj)
                0x0000000040379474                cache_hal_init
 .text.cache_hal_disable
                0x00000000403794d0       0x22 libzephyr.a(cache_hal.c.obj)
                0x00000000403794d0                cache_hal_disable
 *fill*         0x00000000403794f2        0x2 
 .text.cache_hal_enable
                0x00000000403794f4       0x2c libzephyr.a(cache_hal.c.obj)
                0x00000000403794f4                cache_hal_enable
 .text.cache_hal_invalidate_addr
                0x0000000040379520       0x1a libzephyr.a(cache_hal.c.obj)
                                         0x1e (size before relaxing)
                0x0000000040379520                cache_hal_invalidate_addr
 *fill*         0x000000004037953a        0x0 
 *fill*         0x000000004037953a        0x0 
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037953a        0x2 
 .text.ledc_hal_set_duty_start
                0x000000004037953c       0x2d libzephyr.a(ledc_hal_iram.c.obj)
                0x000000004037953c                ledc_hal_set_duty_start
 *fill*         0x0000000040379569        0x3 
 .text.ledc_hal_set_duty_int_part
                0x000000004037956c       0x35 libzephyr.a(ledc_hal_iram.c.obj)
                0x000000004037956c                ledc_hal_set_duty_int_part
 *fill*         0x00000000403795a1        0x3 
 .text.ledc_hal_set_duty_direction
                0x00000000403795a4       0x30 libzephyr.a(ledc_hal_iram.c.obj)
                0x00000000403795a4                ledc_hal_set_duty_direction
 .text.ledc_hal_set_duty_num
                0x00000000403795d4       0x30 libzephyr.a(ledc_hal_iram.c.obj)
                0x00000000403795d4                ledc_hal_set_duty_num
 .text.ledc_hal_set_duty_cycle
                0x0000000040379604       0x30 libzephyr.a(ledc_hal_iram.c.obj)
                0x0000000040379604                ledc_hal_set_duty_cycle
 *fill*         0x0000000040379634        0x0 
 .text.ledc_hal_ls_channel_update
                0x0000000040379634       0x26 libzephyr.a(ledc_hal_iram.c.obj)
                0x0000000040379634                ledc_hal_ls_channel_update
 *fill*         0x000000004037965a        0x0 
 *fill*         0x000000004037965a        0x0 
 *fill*         0x000000004037965a        0x2 
 .text.ledc_hal_set_hpoint
                0x000000004037965c       0x2f libzephyr.a(ledc_hal_iram.c.obj)
                0x000000004037965c                ledc_hal_set_hpoint
 *fill*         0x000000004037968b        0x1 
 .text.ledc_hal_set_duty_scale
                0x000000004037968c       0x2d libzephyr.a(ledc_hal_iram.c.obj)
                0x000000004037968c                ledc_hal_set_duty_scale
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x00000000403796b9        0x3 
 .text.wdt_hal_write_protect_disable
                0x00000000403796bc       0x1d libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000403796bc                wdt_hal_write_protect_disable
 *fill*         0x00000000403796d9        0x3 
 .text.wdt_hal_disable
                0x00000000403796dc       0x31 libzephyr.a(wdt_hal_iram.c.obj)
                0x00000000403796dc                wdt_hal_disable
 *fill*         0x000000004037970d        0x3 
 .text.wdt_hal_set_flashboot_en
                0x0000000040379710       0x42 libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040379710                wdt_hal_set_flashboot_en
 *fill*         0x0000000040379752        0x0 
 *fill*         0x0000000040379752        0x2 
 .text.wdt_hal_write_protect_enable
                0x0000000040379754       0x1c libzephyr.a(wdt_hal_iram.c.obj)
                0x0000000040379754                wdt_hal_write_protect_enable
 *fill*         0x0000000040379770        0x0 
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.systimer_hal_init
                0x0000000040379770       0x1c libzephyr.a(systimer_hal.c.obj)
                0x0000000040379770                systimer_hal_init
 .text.systimer_hal_select_alarm_mode
                0x000000004037978c       0x3f libzephyr.a(systimer_hal.c.obj)
                0x000000004037978c                systimer_hal_select_alarm_mode
 *fill*         0x00000000403797cb        0x1 
 .text.systimer_hal_connect_alarm_counter
                0x00000000403797cc       0x22 libzephyr.a(systimer_hal.c.obj)
                0x00000000403797cc                systimer_hal_connect_alarm_counter
 *fill*         0x00000000403797ee        0x2 
 .text.systimer_hal_set_tick_rate_ops
                0x00000000403797f0        0xd libzephyr.a(systimer_hal.c.obj)
                0x00000000403797f0                systimer_hal_set_tick_rate_ops
 *fill*         0x00000000403797fd        0x3 
 .text.systimer_hal_enable_counter
                0x0000000040379800       0x21 libzephyr.a(systimer_hal.c.obj)
                0x0000000040379800                systimer_hal_enable_counter
 *fill*         0x0000000040379821        0x0 
 *fill*         0x0000000040379821        0x0 
 *libzephyr.a:spi_flash_hal_gpspi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379821        0x3 
 .text.gpspi_flash_ll_get_buffer_data
                0x0000000040379824       0x58 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .text.spi_flash_hal_gpspi_device_config
                0x000000004037987c      0x138 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x000000004037987c                spi_flash_hal_gpspi_device_config
 .text.spi_flash_hal_gpspi_configure_host_io_mode
                0x00000000403799b4      0x263 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x00000000403799b4                spi_flash_hal_gpspi_configure_host_io_mode
 *fill*         0x0000000040379c17        0x1 
 .text.spi_flash_hal_gpspi_common_command
                0x0000000040379c18      0x1ac libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                        0x1b0 (size before relaxing)
                0x0000000040379c18                spi_flash_hal_gpspi_common_command
 .text.spi_flash_hal_gpspi_read
                0x0000000040379dc4       0xc8 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379dc4                spi_flash_hal_gpspi_read
 *fill*         0x0000000040379e8c        0x0 
 .text.spi_flash_hal_gpspi_poll_cmd_done
                0x0000000040379e8c        0xf libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379e8c                spi_flash_hal_gpspi_poll_cmd_done
 *fill*         0x0000000040379e9b        0x0 
 *fill*         0x0000000040379e9b        0x1 
 .text.spi_flash_hal_gpspi_supports_direct_write
                0x0000000040379e9c        0x7 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379e9c                spi_flash_hal_gpspi_supports_direct_write
 *fill*         0x0000000040379ea3        0x1 
 .text.spi_flash_hal_gpspi_supports_direct_read
                0x0000000040379ea4        0x7 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379ea4                spi_flash_hal_gpspi_supports_direct_read
 *fill*         0x0000000040379eab        0x1 
 .text.spi_flash_hal_gpspi_check_status
                0x0000000040379eac       0x14 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                0x0000000040379eac                spi_flash_hal_gpspi_check_status
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_write) SORT_BY_ALIGNMENT(.text.esp_log_write))
 .text.esp_log_write
                0x0000000040379ec0       0x26 libzephyr.a(log.c.obj)
                0x0000000040379ec0                esp_log_write
 *(SORT_BY_ALIGNMENT(.literal.esp_log_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_early_timestamp) SORT_BY_ALIGNMENT(.text.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_lock_timeout) SORT_BY_ALIGNMENT(.text.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.literal.esp_log_impl_unlock) SORT_BY_ALIGNMENT(.text.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379ee6        0x2 
 .text.spi_flash_chip_boya_probe
                0x0000000040379ee8       0x22 libzephyr.a(spi_flash_chip_boya.c.obj)
                0x0000000040379ee8                spi_flash_chip_boya_probe
 *fill*         0x0000000040379f0a        0x2 
 .text.spi_flash_chip_boya_get_caps
                0x0000000040379f0c        0x7 libzephyr.a(spi_flash_chip_boya.c.obj)
                0x0000000040379f0c                spi_flash_chip_boya_get_caps
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379f13        0x1 
 .text.spi_flash_chip_gd_detect_size
                0x0000000040379f14       0x2d libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379f14                spi_flash_chip_gd_detect_size
 *fill*         0x0000000040379f41        0x3 
 .text.spi_flash_chip_gd_get_io_mode
                0x0000000040379f44       0x1e libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379f44                spi_flash_chip_gd_get_io_mode
 *fill*         0x0000000040379f62        0x2 
 .text.spi_flash_chip_gd_set_io_mode
                0x0000000040379f64       0x3e libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379f64                spi_flash_chip_gd_set_io_mode
 *fill*         0x0000000040379fa2        0x2 
 .text.spi_flash_chip_gd_get_caps
                0x0000000040379fa4       0x19 libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379fa4                spi_flash_chip_gd_get_caps
 *fill*         0x0000000040379fbd        0x0 
 *fill*         0x0000000040379fbd        0x0 
 *fill*         0x0000000040379fbd        0x3 
 .text.spi_flash_chip_gd_probe
                0x0000000040379fc0       0x22 libzephyr.a(spi_flash_chip_gd.c.obj)
                0x0000000040379fc0                spi_flash_chip_gd_probe
 *fill*         0x0000000040379fe2        0x0 
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x0000000040379fe2        0x2 
 .text.spi_flash_chip_generic_detect_size
                0x0000000040379fe4       0x41 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x0000000040379fe4                spi_flash_chip_generic_detect_size
 *fill*         0x000000004037a025        0x3 
 .text.spi_flash_chip_generic_reset
                0x000000004037a028       0x55 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a028                spi_flash_chip_generic_reset
 *fill*         0x000000004037a07d        0x3 
 .text.spi_flash_chip_generic_config_host_io_mode
                0x000000004037a080       0xfa libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a080                spi_flash_chip_generic_config_host_io_mode
 *fill*         0x000000004037a17a        0x2 
 .text.spi_flash_chip_generic_read
                0x000000004037a17c       0x9e libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0xa6 (size before relaxing)
                0x000000004037a17c                spi_flash_chip_generic_read
 *fill*         0x000000004037a21a        0x2 
 .text.spi_flash_chip_generic_write
                0x000000004037a21c       0x82 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a21c                spi_flash_chip_generic_write
 *fill*         0x000000004037a29e        0x2 
 .text.spi_flash_chip_generic_get_write_protect
                0x000000004037a2a0       0x2c libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a2a0                spi_flash_chip_generic_get_write_protect
 .text.spi_flash_chip_generic_yield
                0x000000004037a2cc       0x48 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a2cc                spi_flash_chip_generic_yield
 .text.spi_flash_chip_generic_read_unique_id
                0x000000004037a314       0x84 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a314                spi_flash_chip_generic_read_unique_id
 .text.spi_flash_chip_generic_write_encrypted
                0x000000004037a398       0xa0 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a398                spi_flash_chip_generic_write_encrypted
 .text.spi_flash_chip_generic_suspend_cmd_conf
                0x000000004037a438       0x44 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a438                spi_flash_chip_generic_suspend_cmd_conf
 .text.spi_flash_common_read_qe_sr$constprop$0$isra$0
                0x000000004037a47c       0x31 libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x000000004037a4ad        0x3 
 .text.spi_flash_common_read_status_16b_rdsr_rdsr2
                0x000000004037a4b0       0x30 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x34 (size before relaxing)
                0x000000004037a4b0                spi_flash_common_read_status_16b_rdsr_rdsr2
 .text.spi_flash_common_write_qe_sr$isra$0
                0x000000004037a4e0       0x2e libzephyr.a(spi_flash_chip_generic.c.obj)
 *fill*         0x000000004037a50e        0x2 
 .text.spi_flash_common_write_status_16b_wrsr
                0x000000004037a510       0x15 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a510                spi_flash_common_write_status_16b_wrsr
 *fill*         0x000000004037a525        0x3 
 .text.spi_flash_common_read_status_8b_rdsr2
                0x000000004037a528       0x10 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037a528                spi_flash_common_read_status_8b_rdsr2
 .text.spi_flash_chip_generic_get_io_mode
                0x000000004037a538       0x1e libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a538                spi_flash_chip_generic_get_io_mode
 *fill*         0x000000004037a556        0x2 
 .text.spi_flash_common_read_status_8b_rdsr
                0x000000004037a558       0x10 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037a558                spi_flash_common_read_status_8b_rdsr
 .text.spi_flash_common_write_status_8b_wrsr
                0x000000004037a568       0x15 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a568                spi_flash_common_write_status_8b_wrsr
 *fill*         0x000000004037a57d        0x3 
 .text.spi_flash_common_write_status_8b_wrsr2
                0x000000004037a580       0x15 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a580                spi_flash_common_write_status_8b_wrsr2
 *fill*         0x000000004037a595        0x3 
 .text.spi_flash_chip_generic_set_io_mode
                0x000000004037a598       0x18 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a598                spi_flash_chip_generic_set_io_mode
 *fill*         0x000000004037a5b0        0x0 
 *fill*         0x000000004037a5b0        0x0 
 .text.spi_flash_chip_generic_probe
                0x000000004037a5b0        0x7 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a5b0                spi_flash_chip_generic_probe
 *fill*         0x000000004037a5b7        0x0 
 *fill*         0x000000004037a5b7        0x1 
 .text.spi_flash_chip_generic_erase_chip
                0x000000004037a5b8       0x88 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a5b8                spi_flash_chip_generic_erase_chip
 .text.spi_flash_chip_generic_erase_sector
                0x000000004037a640       0x90 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a640                spi_flash_chip_generic_erase_sector
 .text.spi_flash_chip_generic_erase_block
                0x000000004037a6d0       0x90 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a6d0                spi_flash_chip_generic_erase_block
 .text.spi_flash_chip_generic_set_write_protect
                0x000000004037a760       0x52 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a760                spi_flash_chip_generic_set_write_protect
 *fill*         0x000000004037a7b2        0x2 
 .text.spi_flash_chip_generic_read_reg
                0x000000004037a7b4       0x12 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a7b4                spi_flash_chip_generic_read_reg
 *fill*         0x000000004037a7c6        0x2 
 .text.spi_flash_chip_generic_wait_idle
                0x000000004037a7c8       0x80 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a7c8                spi_flash_chip_generic_wait_idle
 *fill*         0x000000004037a848        0x0 
 .text.spi_flash_chip_generic_get_caps
                0x000000004037a848       0x17 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a848                spi_flash_chip_generic_get_caps
 *fill*         0x000000004037a85f        0x0 
 *fill*         0x000000004037a85f        0x0 
 *fill*         0x000000004037a85f        0x1 
 .text.spi_flash_chip_generic_page_program
                0x000000004037a860       0x65 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a860                spi_flash_chip_generic_page_program
 *fill*         0x000000004037a8c5        0x0 
 *fill*         0x000000004037a8c5        0x0 
 *fill*         0x000000004037a8c5        0x0 
 *fill*         0x000000004037a8c5        0x3 
 .text.spi_flash_chip_generic_read_unique_id_none
                0x000000004037a8c8        0x8 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a8c8                spi_flash_chip_generic_read_unique_id_none
 *fill*         0x000000004037a8d0        0x0 
 *fill*         0x000000004037a8d0        0x0 
 *fill*         0x000000004037a8d0        0x0 
 .text.spi_flash_common_set_io_mode
                0x000000004037a8d0       0x8e libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000004037a8d0                spi_flash_common_set_io_mode
 *fill*         0x000000004037a95e        0x0 
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a95e        0x2 
 .text.spi_flash_chip_issi_set_io_mode
                0x000000004037a960       0x14 libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x18 (size before relaxing)
                0x000000004037a960                spi_flash_chip_issi_set_io_mode
 .text.spi_flash_chip_issi_get_io_mode
                0x000000004037a974       0x1c libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x20 (size before relaxing)
                0x000000004037a974                spi_flash_chip_issi_get_io_mode
 .text.spi_flash_chip_issi_probe
                0x000000004037a990       0x22 libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000004037a990                spi_flash_chip_issi_probe
 *fill*         0x000000004037a9b2        0x2 
 .text.spi_flash_chip_issi_get_caps
                0x000000004037a9b4        0x7 libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000004037a9b4                spi_flash_chip_issi_get_caps
 *fill*         0x000000004037a9bb        0x0 
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a9bb        0x1 
 .text.spi_flash_chip_mxic_probe
                0x000000004037a9bc       0x20 libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004037a9bc                spi_flash_chip_mxic_probe
 .text.spi_flash_chip_mxic_get_caps
                0x000000004037a9dc        0x7 libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000004037a9dc                spi_flash_chip_mxic_get_caps
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037a9e3        0x1 
 .text.spi_flash_chip_mxic_opi_detect_size
                0x000000004037a9e4       0x2d libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037a9e4                spi_flash_chip_mxic_opi_detect_size
 *fill*         0x000000004037aa11        0x3 
 .text.spi_flash_chip_mxic_opi_set_write_protect
                0x000000004037aa14       0x6c libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037aa14                spi_flash_chip_mxic_opi_set_write_protect
 .text.spi_flash_chip_mxic_opi_erase_chip
                0x000000004037aa80       0x84 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037aa80                spi_flash_chip_mxic_opi_erase_chip
 .text.spi_flash_chip_mxic_opi_erase_sector
                0x000000004037ab04       0x89 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ab04                spi_flash_chip_mxic_opi_erase_sector
 *fill*         0x000000004037ab8d        0x3 
 .text.spi_flash_chip_mxic_opi_erase_block
                0x000000004037ab90       0x89 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ab90                spi_flash_chip_mxic_opi_erase_block
 *fill*         0x000000004037ac19        0x3 
 .text.spi_flash_chip_xmic_opi_config_host_io_mode
                0x000000004037ac1c       0x34 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ac1c                spi_flash_chip_xmic_opi_config_host_io_mode
 .text.spi_flash_chip_mxic_opi_get_data_length_zoom
                0x000000004037ac50       0x1a libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 *fill*         0x000000004037ac6a        0x2 
 .text.spi_flash_chip_mxic_opi_read_id
                0x000000004037ac6c       0xcf libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0xd3 (size before relaxing)
                0x000000004037ac6c                spi_flash_chip_mxic_opi_read_id
 *fill*         0x000000004037ad3b        0x1 
 .text.spi_flash_chip_mxic_opi_read_reg
                0x000000004037ad3c       0x50 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x54 (size before relaxing)
                0x000000004037ad3c                spi_flash_chip_mxic_opi_read_reg
 .text.spi_flash_chip_mxic_opi_get_io_mode
                0x000000004037ad8c       0x64 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x68 (size before relaxing)
                0x000000004037ad8c                spi_flash_chip_mxic_opi_get_io_mode
 .text.spi_flash_chip_mxic_opi_get_write_protect
                0x000000004037adf0       0x2c libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037adf0                spi_flash_chip_mxic_opi_get_write_protect
 .text.spi_flash_chip_mxic_opi_write
                0x000000004037ae1c       0x82 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037ae1c                spi_flash_chip_mxic_opi_write
 *fill*         0x000000004037ae9e        0x2 
 .text.spi_flash_chip_mxic_opi_page_program
                0x000000004037aea0       0x81 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037aea0                spi_flash_chip_mxic_opi_page_program
 *fill*         0x000000004037af21        0x3 
 .text.spi_flash_chip_mxic_opi_probe
                0x000000004037af24       0x20 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037af24                spi_flash_chip_mxic_opi_probe
 *fill*         0x000000004037af44        0x0 
 .text.spi_flash_chip_mxic_opi_get_caps
                0x000000004037af44        0x7 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037af44                spi_flash_chip_mxic_opi_get_caps
 *fill*         0x000000004037af4b        0x0 
 *fill*         0x000000004037af4b        0x0 
 *fill*         0x000000004037af4b        0x1 
 .text.spi_flash_chip_xmic_opi_set_io_mode
                0x000000004037af4c        0x7 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000004037af4c                spi_flash_chip_xmic_opi_set_io_mode
 *fill*         0x000000004037af53        0x0 
 *fill*         0x000000004037af53        0x0 
 *fill*         0x000000004037af53        0x0 
 *fill*         0x000000004037af53        0x0 
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037af53        0x1 
 .text.spi_flash_chip_th_probe
                0x000000004037af54       0x22 libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000004037af54                spi_flash_chip_th_probe
 *fill*         0x000000004037af76        0x2 
 .text.spi_flash_chip_th_get_caps
                0x000000004037af78        0x7 libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000004037af78                spi_flash_chip_th_get_caps
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037af7f        0x1 
 .text.spi_flash_chip_winbond_read
                0x000000004037af80       0xaa libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0xae (size before relaxing)
                0x000000004037af80                spi_flash_chip_winbond_read
 *fill*         0x000000004037b02a        0x2 
 .text.spi_flash_chip_winbond_erase_block
                0x000000004037b02c       0x84 libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b02c                spi_flash_chip_winbond_erase_block
 .text.spi_flash_chip_winbond_erase_sector
                0x000000004037b0b0       0x84 libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b0b0                spi_flash_chip_winbond_erase_sector
 .text.spi_flash_chip_winbond_page_program
                0x000000004037b134       0x64 libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b134                spi_flash_chip_winbond_page_program
 *fill*         0x000000004037b198        0x0 
 .text.spi_flash_chip_winbond_probe
                0x000000004037b198       0x16 libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b198                spi_flash_chip_winbond_probe
 *fill*         0x000000004037b1ae        0x2 
 .text.spi_flash_chip_winbond_get_caps
                0x000000004037b1b0       0x19 libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000004037b1b0                spi_flash_chip_winbond_get_caps
 *fill*         0x000000004037b1c9        0x0 
 *fill*         0x000000004037b1c9        0x0 
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b1c9        0x3 
 .text.memspi_host_read_status_hs
                0x000000004037b1cc       0x38 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b1cc                memspi_host_read_status_hs
 .text.memspi_host_erase_chip
                0x000000004037b204       0x23 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b204                memspi_host_erase_chip
 *fill*         0x000000004037b227        0x1 
 .text.memspi_host_set_write_protect
                0x000000004037b228       0x2c libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b228                memspi_host_set_write_protect
 .text.memspi_host_read_id_hs
                0x000000004037b254       0x8e libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b254                memspi_host_read_id_hs
 *fill*         0x000000004037b2e2        0x2 
 .text.memspi_host_flush_cache
                0x000000004037b2e4       0x19 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b2e4                memspi_host_flush_cache
 *fill*         0x000000004037b2fd        0x3 
 .text.memspi_host_erase_sector
                0x000000004037b300       0x36 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b300                memspi_host_erase_sector
 *fill*         0x000000004037b336        0x2 
 .text.memspi_host_erase_block
                0x000000004037b338       0x36 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b338                memspi_host_erase_block
 *fill*         0x000000004037b36e        0x2 
 .text.memspi_host_program_page
                0x000000004037b370       0x3e libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b370                memspi_host_program_page
 *fill*         0x000000004037b3ae        0x2 
 .text.memspi_host_init_pointers
                0x000000004037b3b0       0x42 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b3b0                memspi_host_init_pointers
 *fill*         0x000000004037b3f2        0x2 
 .text.memspi_host_write_data_slicer
                0x000000004037b3f4       0x30 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b3f4                memspi_host_write_data_slicer
 .text.memspi_host_read_data_slicer
                0x000000004037b424       0x27 libzephyr.a(memspi_host_driver.c.obj)
                0x000000004037b424                memspi_host_read_data_slicer
 *fill*         0x000000004037b44b        0x0 
 *fill*         0x000000004037b44b        0x0 
 *fill*         0x000000004037b44b        0x0 
 *fill*         0x000000004037b44b        0x0 
 *fill*         0x000000004037b44b        0x0 
 *fill*         0x000000004037b44b        0x0 
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b44b        0x1 
 .text.spi_flash_hpm_probe_chip_with_cmd
                0x000000004037b44c       0x1f libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b46b        0x1 
 .text.spi_flash_hpm_probe_chip_with_dummy
                0x000000004037b46c       0x2c libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x30 (size before relaxing)
 .text.spi_flash_hpm_probe_chip_with_write_hpf_bit_5
                0x000000004037b498       0x13 libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b4ab        0x1 
 .text.spi_flash_high_performance_check_dummy_sr
                0x000000004037b4ac       0x18 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .text.spi_flash_high_performance_check_hpf_bit_5
                0x000000004037b4c4        0xd libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x10 (size before relaxing)
 *fill*         0x000000004037b4d1        0x3 
 .text.spi_flash_turn_high_performance_write_hpf_bit_5
                0x000000004037b4d4       0x2e libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x000000004037b502        0x2 
 .text.spi_flash_turn_high_performance_reconfig_dummy
                0x000000004037b504       0x2e libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x000000004037b532        0x2 
 .text.spi_flash_enable_high_performance_send_cmd
                0x000000004037b534       0x22 libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b556        0x2 
 .text.spi_flash_enable_high_performance_mode
                0x000000004037b558      0x142 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                        0x146 (size before relaxing)
                0x000000004037b558                spi_flash_enable_high_performance_mode
 *fill*         0x000000004037b69a        0x0 
 *fill*         0x000000004037b69a        0x2 
 .text.spi_flash_hpm_chip_hpm_requirement_check_with_cmd
                0x000000004037b69c        0xe libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b6aa        0x2 
 .text.spi_flash_hpm_chip_hpm_requirement_check_with_dummy
                0x000000004037b6ac        0xf libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b6bb        0x1 
 .text.spi_flash_hpm_get_dummy_xmc
                0x000000004037b6bc       0x18 libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b6d4        0x0 
 .text.spi_flash_hpm_chip_hpm_requirement_check_with_write_hpf_bit_5
                0x000000004037b6d4        0xf libzephyr.a(spi_flash_hpm_enable.c.obj)
 *fill*         0x000000004037b6e3        0x1 
 .text.spi_flash_hpm_get_dummy_generic
                0x000000004037b6e4       0x1a libzephyr.a(spi_flash_hpm_enable.c.obj)
                0x000000004037b6e4                spi_flash_hpm_get_dummy_generic
 *fill*         0x000000004037b6fe        0x0 
 *fill*         0x000000004037b6fe        0x0 
 *fill*         0x000000004037b6fe        0x0 
 *fill*         0x000000004037b6fe        0x0 
 *libzephyr.a:spi_flash_oct_flash_init*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b6fe        0x2 
 .text.s_probe_mxic_chip
                0x000000004037b700       0x42 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x46 (size before relaxing)
 *fill*         0x000000004037b742        0x2 
 .text.s_mxic_set_required_regs
                0x000000004037b744       0x1e libzephyr.a(spi_flash_oct_flash_init.c.obj)
 *fill*         0x000000004037b762        0x2 
 .text.s_flash_init_mxic
                0x000000004037b764      0x148 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .text.esp_opiflash_init
                0x000000004037b8ac       0x67 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                0x000000004037b8ac                esp_opiflash_init
 *fill*         0x000000004037b913        0x0 
 *fill*         0x000000004037b913        0x0 
 *fill*         0x000000004037b913        0x0 
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037b913        0x1 
 .text._esp_error_check_failed
                0x000000004037b914       0x4b libzephyr.a(esp_err.c.obj)
                                         0x4f (size before relaxing)
                0x000000004037b914                _esp_error_check_failed
 *fill*         0x000000004037b95f        0x0 
 *(SORT_BY_ALIGNMENT(.literal.esp_system_abort) SORT_BY_ALIGNMENT(.text.esp_system_abort))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_stall) SORT_BY_ALIGNMENT(.text.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_unstall) SORT_BY_ALIGNMENT(.text.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_reset) SORT_BY_ALIGNMENT(.text.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_wait_for_intr) SORT_BY_ALIGNMENT(.text.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.literal.esp_cpu_compare_and_set) SORT_BY_ALIGNMENT(.text.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_reserve_pins) SORT_BY_ALIGNMENT(.text.esp_gpio_reserve_pins))
 *fill*         0x000000004037b95f        0x1 
 .text.esp_gpio_reserve_pins
                0x000000004037b960       0x1c libzephyr.a(esp_gpio_reserve.c.obj)
                0x000000004037b960                esp_gpio_reserve_pins
 *fill*         0x000000004037b97c        0x0 
 *(SORT_BY_ALIGNMENT(.literal.esp_gpio_is_pin_reserved) SORT_BY_ALIGNMENT(.text.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_get_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.literal.rtc_vddsdio_set_config) SORT_BY_ALIGNMENT(.text.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.rtc_clk_bbpll_disable
                0x000000004037b97c       0x1f libzephyr.a(rtc_clk.c.obj)
 *fill*         0x000000004037b99b        0x1 
 .text.rtc_clk_32k_enable
                0x000000004037b99c       0xbe libzephyr.a(rtc_clk.c.obj)
                0x000000004037b99c                rtc_clk_32k_enable
 *fill*         0x000000004037ba5a        0x2 
 .text.rtc_clk_32k_enable_external
                0x000000004037ba5c       0x97 libzephyr.a(rtc_clk.c.obj)
                0x000000004037ba5c                rtc_clk_32k_enable_external
 *fill*         0x000000004037baf3        0x1 
 .text.rtc_clk_8m_enable
                0x000000004037baf4       0x85 libzephyr.a(rtc_clk.c.obj)
                0x000000004037baf4                rtc_clk_8m_enable
 *fill*         0x000000004037bb79        0x3 
 .text.rtc_clk_slow_src_set
                0x000000004037bb7c       0x7c libzephyr.a(rtc_clk.c.obj)
                0x000000004037bb7c                rtc_clk_slow_src_set
 .text.rtc_clk_slow_src_get
                0x000000004037bbf8       0x10 libzephyr.a(rtc_clk.c.obj)
                0x000000004037bbf8                rtc_clk_slow_src_get
 .text.rtc_clk_fast_src_set
                0x000000004037bc08       0x47 libzephyr.a(rtc_clk.c.obj)
                0x000000004037bc08                rtc_clk_fast_src_set
 *fill*         0x000000004037bc4f        0x1 
 .text.rtc_clk_fast_src_get
                0x000000004037bc50       0x10 libzephyr.a(rtc_clk.c.obj)
                0x000000004037bc50                rtc_clk_fast_src_get
 .text.rtc_clk_cpu_freq_to_xtal
                0x000000004037bc60       0x9c libzephyr.a(rtc_clk.c.obj)
                                         0xa4 (size before relaxing)
                0x000000004037bc60                rtc_clk_cpu_freq_to_xtal
 .text.rtc_clk_xtal_freq_get
                0x000000004037bcfc       0x44 libzephyr.a(rtc_clk.c.obj)
                0x000000004037bcfc                rtc_get_xtal
                0x000000004037bcfc                rtc_clk_xtal_freq_get
 .text.rtc_clk_cpu_freq_mhz_to_config
                0x000000004037bd40       0x53 libzephyr.a(rtc_clk.c.obj)
                                         0x57 (size before relaxing)
                0x000000004037bd40                rtc_clk_cpu_freq_mhz_to_config
 *fill*         0x000000004037bd93        0x1 
 .text.rtc_clk_cpu_freq_get_config
                0x000000004037bd94       0xb2 libzephyr.a(rtc_clk.c.obj)
                                         0xba (size before relaxing)
                0x000000004037bd94                rtc_clk_cpu_freq_get_config
 *fill*         0x000000004037be46        0x2 
 .text.rtc_clk_cpu_freq_to_pll_mhz
                0x000000004037be48      0x1c3 libzephyr.a(rtc_clk.c.obj)
                                        0x1cb (size before relaxing)
 *fill*         0x000000004037c00b        0x1 
 .text.rtc_clk_cpu_freq_set_config
                0x000000004037c00c      0x263 libzephyr.a(rtc_clk.c.obj)
                                        0x28b (size before relaxing)
                0x000000004037c00c                rtc_clk_cpu_freq_set_config
 *fill*         0x000000004037c26f        0x1 
 .text.rtc_clk_cpu_set_to_default_config
                0x000000004037c270        0xf libzephyr.a(rtc_clk.c.obj)
                                         0x13 (size before relaxing)
                0x000000004037c270                rtc_clk_cpu_set_to_default_config
 *fill*         0x000000004037c27f        0x1 
 .text.rtc_clk_cpu_freq_set_xtal
                0x000000004037c280        0xb libzephyr.a(rtc_clk.c.obj)
                                         0x11 (size before relaxing)
                0x000000004037c280                rtc_clk_cpu_freq_set_xtal
 *fill*         0x000000004037c28b        0x1 
 .text.rtc_clk_xtal_freq_update
                0x000000004037c28c       0x29 libzephyr.a(rtc_clk.c.obj)
                0x000000004037c28c                rtc_clk_xtal_freq_update
 *fill*         0x000000004037c2b5        0x3 
 .text.rtc_clk_apb_freq_update
                0x000000004037c2b8        0xa libzephyr.a(rtc_clk.c.obj)
                0x000000004037c2b8                rtc_clk_apb_freq_update
 *fill*         0x000000004037c2c2        0x2 
 .text.rtc_clk_apb_freq_get
                0x000000004037c2c4        0xa libzephyr.a(rtc_clk.c.obj)
                0x000000004037c2c4                rtc_clk_apb_freq_get
 *fill*         0x000000004037c2ce        0x2 
 .text.rtc_clk_divider_set
                0x000000004037c2d0       0x49 libzephyr.a(rtc_clk.c.obj)
                0x000000004037c2d0                rtc_clk_divider_set
 *fill*         0x000000004037c319        0x3 
 .text.rtc_clk_8m_divider_set
                0x000000004037c31c       0x44 libzephyr.a(rtc_clk.c.obj)
                0x000000004037c31c                rtc_clk_8m_divider_set
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *fill*         0x000000004037c360        0x0 
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.rtc_clk_init
                0x000000004037c360      0x132 libzephyr.a(rtc_clk_init.c.obj)
                                        0x156 (size before relaxing)
                0x000000004037c360                rtc_clk_init
 *libzephyr.a:rtc_sleep.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c492        0x2 
 .text.rtc_sleep_pu
                0x000000004037c494      0x19d libzephyr.a(rtc_sleep.c.obj)
                0x000000004037c494                rtc_sleep_pu
 *fill*         0x000000004037c631        0x0 
 *libzephyr.a:rtc_time.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c631        0x3 
 .text.rtc_clk_cal_internal
                0x000000004037c634      0x262 libzephyr.a(rtc_time.c.obj)
                                        0x266 (size before relaxing)
                0x000000004037c634                rtc_clk_cal_internal
 *fill*         0x000000004037c896        0x2 
 .text.rtc_clk_cal
                0x000000004037c898       0xb1 libzephyr.a(rtc_time.c.obj)
                                         0xb9 (size before relaxing)
                0x000000004037c898                rtc_clk_cal
 *fill*         0x000000004037c949        0x3 
 .text.rtc_time_us_to_slowclk
                0x000000004037c94c       0x1f libzephyr.a(rtc_time.c.obj)
                0x000000004037c94c                rtc_time_us_to_slowclk
 *fill*         0x000000004037c96b        0x1 
 .text.rtc_time_get
                0x000000004037c96c       0x2a libzephyr.a(rtc_time.c.obj)
                0x000000004037c96c                rtc_time_get
 *fill*         0x000000004037c996        0x2 
 .text.rtc_clk_freq_cal
                0x000000004037c998       0x1c libzephyr.a(rtc_time.c.obj)
                0x000000004037c998                rtc_clk_freq_cal
 *fill*         0x000000004037c9b4        0x0 
 *fill*         0x000000004037c9b4        0x0 
 *fill*         0x000000004037c9b4        0x0 
 *fill*         0x000000004037c9b4        0x0 
 *fill*         0x000000004037c9b4        0x0 
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 .text.systimer_ticks_to_us
                0x000000004037c9b4       0x11 libzephyr.a(systimer.c.obj)
                0x000000004037c9b4                systimer_ticks_to_us
 *fill*         0x000000004037c9c5        0x3 
 .text.systimer_us_to_ticks
                0x000000004037c9c8       0x11 libzephyr.a(systimer.c.obj)
                0x000000004037c9c8                systimer_us_to_ticks
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037c9d9        0x3 
 .text.mspi_timing_config_set_core_clock
                0x000000004037c9dc       0x32 libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037c9dc                mspi_timing_config_set_core_clock
 *fill*         0x000000004037ca0e        0x2 
 .text.mspi_timing_config_set_flash_clock
                0x000000004037ca10       0x3a libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037ca10                mspi_timing_config_set_flash_clock
 *fill*         0x000000004037ca4a        0x2 
 .text.mspi_timing_config_set_psram_clock
                0x000000004037ca4c       0x33 libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037ca4c                mspi_timing_config_set_psram_clock
 *fill*         0x000000004037ca7f        0x1 
 .text.mspi_timing_config_get_core_clock
                0x000000004037ca80        0x7 libzephyr.a(mspi_timing_config.c.obj)
                0x000000004037ca80                mspi_timing_config_get_core_clock
 *fill*         0x000000004037ca87        0x0 
 *fill*         0x000000004037ca87        0x0 
 *fill*         0x000000004037ca87        0x0 
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037ca87        0x1 
 .text.mspi_timing_set_pin_drive_strength
                0x000000004037ca88       0x65 libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037ca88                mspi_timing_set_pin_drive_strength
 *fill*         0x000000004037caed        0x3 
 .text.mspi_timing_enter_low_speed_mode
                0x000000004037caf0       0x2a libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x32 (size before relaxing)
                0x000000004037caf0                mspi_timing_enter_low_speed_mode
 *fill*         0x000000004037cb1a        0x2 
 .text.mspi_timing_enter_high_speed_mode
                0x000000004037cb1c       0x2e libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x3a (size before relaxing)
                0x000000004037cb1c                mspi_timing_enter_high_speed_mode
 *fill*         0x000000004037cb4a        0x2 
 .text.mspi_timing_change_speed_mode_cache_safe
                0x000000004037cb4c       0x2f libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x3e (size before relaxing)
                0x000000004037cb4c                mspi_timing_change_speed_mode_cache_safe
 *fill*         0x000000004037cb7b        0x1 
 .text.spi_timing_get_flash_timing_param
                0x000000004037cb7c        0x9 libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037cb7c                spi_timing_get_flash_timing_param
 *fill*         0x000000004037cb85        0x0 
 *fill*         0x000000004037cb85        0x3 
 .text.mspi_timing_flash_tuning
                0x000000004037cb88        0x5 libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037cb88                mspi_timing_flash_tuning
 *fill*         0x000000004037cb8d        0x0 
 *fill*         0x000000004037cb8d        0x0 
 *fill*         0x000000004037cb8d        0x0 
 *fill*         0x000000004037cb8d        0x3 
 .text.spi_timing_is_tuned
                0x000000004037cb90        0x7 libzephyr.a(mspi_timing_tuning.c.obj)
                0x000000004037cb90                spi_timing_is_tuned
 *fill*         0x000000004037cb97        0x0 
 *(SORT_BY_ALIGNMENT(.literal.sar_periph_ctrl_power_enable) SORT_BY_ALIGNMENT(.text.sar_periph_ctrl_power_enable))
 *(SORT_BY_ALIGNMENT(.literal.GPIO_HOLD_MASK) SORT_BY_ALIGNMENT(.text.GPIO_HOLD_MASK))
 *libzephyr.a:esp_rom_cache_esp32s2_esp32s3.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037cb97        0x1 
 .text.Cache_Suspend_ICache
                0x000000004037cb98       0x1b libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037cb98                Cache_Suspend_ICache
 *fill*         0x000000004037cbb3        0x1 
 .text.Cache_Suspend_DCache
                0x000000004037cbb4       0x1b libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037cbb4                Cache_Suspend_DCache
 *fill*         0x000000004037cbcf        0x1 
 .text.Cache_Freeze_ICache_Enable
                0x000000004037cbd0       0x1c libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037cbd0                Cache_Freeze_ICache_Enable
 .text.Cache_Freeze_DCache_Enable
                0x000000004037cbec       0x1c libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                0x000000004037cbec                Cache_Freeze_DCache_Enable
 *fill*         0x000000004037cc08        0x0 
 *fill*         0x000000004037cc08        0x0 
 *fill*         0x000000004037cc08        0x0 
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_soc.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_ana_super_wdt_reset_config
                0x000000004037cc08       0x3b libzephyr.a(bootloader_soc.c.obj)
                0x000000004037cc08                bootloader_ana_super_wdt_reset_config
 *fill*         0x000000004037cc43        0x1 
 .text.bootloader_ana_bod_reset_config
                0x000000004037cc44       0x3a libzephyr.a(bootloader_soc.c.obj)
                0x000000004037cc44                bootloader_ana_bod_reset_config
 *fill*         0x000000004037cc7e        0x2 
 .text.bootloader_ana_clock_glitch_reset_config
                0x000000004037cc80       0x3a libzephyr.a(bootloader_soc.c.obj)
                0x000000004037cc80                bootloader_ana_clock_glitch_reset_config
 *fill*         0x000000004037ccba        0x0 
 *fill*         0x000000004037ccba        0x0 
 *libzephyr.a:bootloader_random*.*(SORT_BY_ALIGNMENT(.literal.bootloader_random_disable) SORT_BY_ALIGNMENT(.text.bootloader_random_disable))
 *fill*         0x000000004037ccba        0x2 
 .text.bootloader_random_disable
                0x000000004037ccbc       0xa7 libzephyr.a(bootloader_random_esp32s3.c.obj)
                                         0xb3 (size before relaxing)
                0x000000004037ccbc                bootloader_random_disable
 *fill*         0x000000004037cd63        0x0 
 *libzephyr.a:bootloader_random*.*(SORT_BY_ALIGNMENT(.literal.bootloader_random_enable) SORT_BY_ALIGNMENT(.text.bootloader_random_enable))
 *fill*         0x000000004037cd63        0x1 
 .text.bootloader_random_enable
                0x000000004037cd64      0x232 libzephyr.a(bootloader_random_esp32s3.c.obj)
                                        0x23e (size before relaxing)
                0x000000004037cd64                bootloader_random_enable
 *fill*         0x000000004037cf96        0x0 
                0x000000004037cf98                . = ALIGN (0x4)
 *fill*         0x000000004037cf96        0x2 

.loader.text    0x000000004037cf98      0xe74 load address 0x0000000000008f98
                0x000000004037cf98                . = ALIGN (0x4)
                0x000000004037cf98                _loader_text_start = ABSOLUTE (.)
 *libzephyr.a:bootloader_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.bootloader_read_bootloader_header
                0x000000004037cf98       0x14 libzephyr.a(bootloader_init.c.obj)
                                         0x1c (size before relaxing)
 .literal.bootloader_check_bootloader_validity
                0x000000004037cfac        0x8 libzephyr.a(bootloader_init.c.obj)
                                         0x24 (size before relaxing)
 .literal.bootloader_config_wdt
                0x000000004037cfb4        0x8 libzephyr.a(bootloader_init.c.obj)
                                         0x20 (size before relaxing)
 .literal.bootloader_enable_random
                0x000000004037cfbc        0x4 libzephyr.a(bootloader_init.c.obj)
                                         0x18 (size before relaxing)
 .literal.bootloader_print_banner
                0x000000004037cfc0        0xc libzephyr.a(bootloader_init.c.obj)
                                         0x2c (size before relaxing)
 .literal.bootloader_init
                0x000000004037cfcc       0x60 libzephyr.a(bootloader_esp32s3.c.obj)
                                         0xc8 (size before relaxing)
 .literal.bootloader_clock_configure
                0x000000004037d02c       0x1c libzephyr.a(bootloader_clock_init.c.obj)
                                         0x28 (size before relaxing)
 .literal.bootloader_flash_read
                0x000000004037d048        0x0 libzephyr.a(bootloader_flash.c.obj)
                                          0xc (size before relaxing)
 .literal.bootloader_enable_wp
                0x000000004037d048        0x0 libzephyr.a(bootloader_flash.c.obj)
                                          0x4 (size before relaxing)
 .literal.bootloader_flash_update_id
                0x000000004037d048        0x4 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                          0x8 (size before relaxing)
 .literal.bootloader_init_spi_flash
                0x000000004037d04c       0x44 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x80 (size before relaxing)
 .literal.bootloader_common_check_chip_validity
                0x000000004037d090       0x14 libzephyr.a(bootloader_common_loader.c.obj)
                                         0x38 (size before relaxing)
 .literal.bootloader_init_mem
                0x000000004037d0a4        0x0 libzephyr.a(bootloader_mem.c.obj)
                                          0x4 (size before relaxing)
 .literal.bootloader_console_init
                0x000000004037d0a4        0x4 libzephyr.a(bootloader_console.c.obj)
                                         0x18 (size before relaxing)
 .literal.get_flash_clock_divider
                0x000000004037d0a8       0x2c libzephyr.a(spi_flash_hal.c.obj)
                                         0x4c (size before relaxing)
 .literal.spi_flash_hal_init
                0x000000004037d0d4       0x18 libzephyr.a(spi_flash_hal.c.obj)
                                         0x28 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_write
                0x000000004037d0ec        0x0 libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.spi_flash_hal_supports_direct_read
                0x000000004037d0ec        0x0 libzephyr.a(spi_flash_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_read_chip_id
                0x000000004037d0ec        0x0 libzephyr.a(esp_flash_api.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_flash_init_default_chip
                0x000000004037d0ec       0x28 libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x58 (size before relaxing)
 .literal.esp_flash_app_init
                0x000000004037d114        0xc libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_efuse_read_field_blob
                0x000000004037d120        0xc libzephyr.a(esp_efuse_api.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_efuse_utility_process
                0x000000004037d12c       0x10 libzephyr.a(esp_efuse_utility.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_efuse_utility_read_reg
                0x000000004037d13c        0x4 libzephyr.a(esp_efuse_utility.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_efuse_utility_fill_buff
                0x000000004037d140        0xc libzephyr.a(esp_efuse_utility.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_efuse_utility_count_once
                0x000000004037d14c        0x4 libzephyr.a(esp_efuse_utility.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_cpu_configure_region_protection
                0x000000004037d150        0x8 libzephyr.a(cpu_region_protect.c.obj)
                                         0x10 (size before relaxing)
 .text.bootloader_read_bootloader_header
                0x000000004037d158       0x32 libzephyr.a(bootloader_init.c.obj)
                                         0x36 (size before relaxing)
                0x000000004037d158                bootloader_read_bootloader_header
 *fill*         0x000000004037d18a        0x2 
 .text.bootloader_check_bootloader_validity
                0x000000004037d18c       0x50 libzephyr.a(bootloader_init.c.obj)
                                         0x54 (size before relaxing)
                0x000000004037d18c                bootloader_check_bootloader_validity
 .text.bootloader_config_wdt
                0x000000004037d1dc       0x3e libzephyr.a(bootloader_init.c.obj)
                                         0x4e (size before relaxing)
                0x000000004037d1dc                bootloader_config_wdt
 *fill*         0x000000004037d21a        0x2 
 .text.bootloader_enable_random
                0x000000004037d21c       0x21 libzephyr.a(bootloader_init.c.obj)
                                         0x28 (size before relaxing)
                0x000000004037d21c                bootloader_enable_random
 *fill*         0x000000004037d23d        0x3 
 .text.bootloader_print_banner
                0x000000004037d240       0x4a libzephyr.a(bootloader_init.c.obj)
                                         0x56 (size before relaxing)
                0x000000004037d240                bootloader_print_banner
 *fill*         0x000000004037d28a        0x0 
 *fill*         0x000000004037d28a        0x0 
 *libzephyr.a:bootloader_esp32s3.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d28a        0x2 
 .text.bootloader_init
                0x000000004037d28c      0x1c1 libzephyr.a(bootloader_esp32s3.c.obj)
                                        0x201 (size before relaxing)
                0x000000004037d28c                bootloader_init
 *fill*         0x000000004037d44d        0x0 
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d44d        0x3 
 .text.bootloader_clock_configure
                0x000000004037d450       0xa0 libzephyr.a(bootloader_clock_init.c.obj)
                                         0xa8 (size before relaxing)
                0x000000004037d450                bootloader_clock_configure
 *fill*         0x000000004037d4f0        0x0 
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_flash_read
                0x000000004037d4f0       0x2e libzephyr.a(bootloader_flash.c.obj)
                                         0x36 (size before relaxing)
                0x000000004037d4f0                bootloader_flash_read
 *fill*         0x000000004037d51e        0x2 
 .text.bootloader_enable_wp
                0x000000004037d520       0x13 libzephyr.a(bootloader_flash.c.obj)
                0x000000004037d520                bootloader_enable_wp
 *fill*         0x000000004037d533        0x0 
 *libzephyr.a:bootloader_flash_config_esp32s3.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d533        0x1 
 .text.bootloader_flash_update_id
                0x000000004037d534       0x12 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                0x000000004037d534                bootloader_flash_update_id
 *fill*         0x000000004037d546        0x2 
 .text.bootloader_init_spi_flash
                0x000000004037d548       0xee libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                        0x10a (size before relaxing)
                0x000000004037d548                bootloader_init_spi_flash
 *fill*         0x000000004037d636        0x0 
 *fill*         0x000000004037d636        0x0 
 *libzephyr.a:bootloader_clock_loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_common_loader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d636        0x2 
 .text.bootloader_common_check_chip_validity
                0x000000004037d638      0x104 libzephyr.a(bootloader_common_loader.c.obj)
                                        0x114 (size before relaxing)
                0x000000004037d638                bootloader_common_check_chip_validity
 *fill*         0x000000004037d73c        0x0 
 *libzephyr.a:bootloader_mem.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.bootloader_init_mem
                0x000000004037d73c        0x8 libzephyr.a(bootloader_mem.c.obj)
                                          0xb (size before relaxing)
                0x000000004037d73c                bootloader_init_mem
 *libzephyr.a:bootloader_random.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_sha.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:bootloader_console.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d744        0x0 
 .text.bootloader_console_init
                0x000000004037d744       0x27 libzephyr.a(bootloader_console.c.obj)
                                         0x33 (size before relaxing)
                0x000000004037d744                bootloader_console_init
 *fill*         0x000000004037d76b        0x0 
 *libzephyr.a:bootloader_panic.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_image_format.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encrypt.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_encryption_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_partitions.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:flash_qio_mode.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037d76b        0x1 
 .text.get_flash_clock_divider
                0x000000004037d76c       0xa4 libzephyr.a(spi_flash_hal.c.obj)
                                         0xb0 (size before relaxing)
 .text.spi_flash_hal_init
                0x000000004037d810      0x16d libzephyr.a(spi_flash_hal.c.obj)
                                        0x171 (size before relaxing)
                0x000000004037d810                spi_flash_hal_init
 *fill*         0x000000004037d97d        0x3 
 .text.spi_flash_hal_supports_direct_write
                0x000000004037d980       0x14 libzephyr.a(spi_flash_hal.c.obj)
                0x000000004037d980                spi_flash_hal_supports_direct_write
 .text.spi_flash_hal_supports_direct_read
                0x000000004037d994       0x14 libzephyr.a(spi_flash_hal.c.obj)
                0x000000004037d994                spi_flash_hal_supports_direct_read
 *fill*         0x000000004037d9a8        0x0 
 *fill*         0x000000004037d9a8        0x0 
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_read_chip_id
                0x000000004037d9a8       0x10 libzephyr.a(esp_flash_api.c.obj)
                                         0x14 (size before relaxing)
                0x000000004037d9a8                esp_flash_read_chip_id
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .text.esp_flash_init_default_chip
                0x000000004037d9b8       0xde libzephyr.a(esp_flash_spi_init.c.obj)
                                         0xf2 (size before relaxing)
                0x000000004037d9b8                esp_flash_init_default_chip
 *fill*         0x000000004037da96        0x2 
 .text.esp_flash_app_init
                0x000000004037da98       0x1c libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x1f (size before relaxing)
                0x000000004037da98                esp_flash_app_init
 *fill*         0x000000004037dab4        0x0 
 *libzephyr.a:secure_boot.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_secure_features.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:secure_boot_signatures_bootloader.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_table.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_fields.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:esp_efuse_api.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037dab4        0x0 
 .text.esp_efuse_read_field_blob
                0x000000004037dab4       0x54 libzephyr.a(esp_efuse_api.c.obj)
                                         0x5c (size before relaxing)
                0x000000004037dab4                esp_efuse_read_field_blob
 *fill*         0x000000004037db08        0x0 
 .text.esp_efuse_get_field_size
                0x000000004037db08       0x1e libzephyr.a(esp_efuse_api.c.obj)
                0x000000004037db08                esp_efuse_get_field_size
 *libzephyr.a:esp_efuse_utility.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037db26        0x2 
 .text.esp_efuse_utility_process
                0x000000004037db28      0x144 libzephyr.a(esp_efuse_utility.c.obj)
                0x000000004037db28                esp_efuse_utility_process
 .text.esp_efuse_utility_read_reg
                0x000000004037dc6c       0x2b libzephyr.a(esp_efuse_utility.c.obj)
                0x000000004037dc6c                esp_efuse_utility_read_reg
 *fill*         0x000000004037dc97        0x1 
 .text.esp_efuse_utility_fill_buff
                0x000000004037dc98       0xb1 libzephyr.a(esp_efuse_utility.c.obj)
                0x000000004037dc98                esp_efuse_utility_fill_buff
 *fill*         0x000000004037dd49        0x3 
 .text.esp_efuse_utility_count_once
                0x000000004037dd4c       0x38 libzephyr.a(esp_efuse_utility.c.obj)
                                         0x3c (size before relaxing)
                0x000000004037dd4c                esp_efuse_utility_count_once
 *fill*         0x000000004037dd84        0x0 
 .text.esp_efuse_utility_get_number_of_items
                0x000000004037dd84       0x16 libzephyr.a(esp_efuse_utility.c.obj)
                0x000000004037dd84                esp_efuse_utility_get_number_of_items
 *fill*         0x000000004037dd9a        0x0 
 *fill*         0x000000004037dd9a        0x0 
 *fill*         0x000000004037dd9a        0x0 
 *libzephyr.a:esp_efuse_api_key_esp32xx.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *libzephyr.a:mpu_hal.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037dd9a        0x2 
 .text.mpu_hal_set_region_access
                0x000000004037dd9c       0x3d libzephyr.a(mpu_hal.c.obj)
                0x000000004037dd9c                mpu_hal_set_region_access
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 *fill*         0x000000004037ddd9        0x3 
 .text.esp_cpu_configure_region_protection
                0x000000004037dddc       0x2f libzephyr.a(cpu_region_protect.c.obj)
                                         0x33 (size before relaxing)
                0x000000004037dddc                esp_cpu_configure_region_protection
 *fill*         0x000000004037de0b        0x0 
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
                0x000000004037de0c                . = ALIGN (0x4)
 *fill*         0x000000004037de0b        0x1 
                0x000000004037de0c                _loader_text_end = ABSOLUTE (.)

.iram0.text_end
                0x000000004037de0c       0x10 load address 0x0000000000009e0c
                0x000000004037de1c                . = (ALIGN (0x4) + 0x10)
 *fill*         0x000000004037de0c       0x10 
                0x000000004037de1c                _iram_text_end = ABSOLUTE (.)

.iram0.data     0x000000004037de1c        0x0 load address 0x0000000000009e0c
                0x000000004037de1c                . = ALIGN (0x4)
                0x000000004037de1c                _iram_data_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram.data))
 *(SORT_BY_ALIGNMENT(.iram.data*))
                0x000000004037de1c                _iram_data_end = ABSOLUTE (.)

.iram0.bss      0x000000004037de1c        0x0 load address 0x0000000000009e0c
                0x000000004037de1c                . = ALIGN (0x4)
                0x000000004037de1c                _iram_bss_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.iram.bss))
 *(SORT_BY_ALIGNMENT(.iram.bss*))
                0x000000004037de1c                _iram_bss_end = ABSOLUTE (.)
                0x000000004037de1c                . = ALIGN (0x4)
                0x000000004037de1c                _iram_end = ABSOLUTE (.)

.dram0.dummy    0x000000003fc88000     0x5e2c
                0x000000003fc8de1c                . = ((ORIGIN (dram0_0_seg) + MAX (_iram_end, 0x40378000)) - 0x40378000)
 *fill*         0x000000003fc88000     0x5e1c 
                0x000000003fc8de2c                . = (ALIGN (0x4) + 0x10)
 *fill*         0x000000003fc8de1c       0x10 

.dram0.data     0x000000003fc8de2c     0x1160 load address 0x0000000000009e0c
                0x000000003fc8de30                . = ALIGN (0x8)
 *fill*         0x000000003fc8de2c        0x4 
                0x000000003fc8de30                _data_start = ABSOLUTE (.)
                0x000000003fc8de30                __data_start = ABSOLUTE (.)
                0x000000003fc8de30                _btdm_data_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.data) SORT_BY_ALIGNMENT(.data.*))
                0x000000003fc8de30                . = ALIGN (0x4)
                0x000000003fc8de30                _btdm_data_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.data))
 *(SORT_BY_ALIGNMENT(.data.*))
 .data._char_out
                0x000000003fc8de30        0x4 libzephyr.a(printk.c.obj)
 .data.rom_func$0
                0x000000003fc8de34       0x34 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data.registered_chip_funcs
                0x000000003fc8de68        0x8 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .data.esp_flash_registered_chips
                0x000000003fc8de70        0x4 libzephyr.a(spi_flash_chip_drivers.c.obj)
                0x000000003fc8de70                esp_flash_registered_chips
 .data.default_registered_chips
                0x000000003fc8de74       0x24 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .data.s_previous_init_code
                0x000000003fc8de98        0x8 libzephyr.a(adc_hal_common.c.obj)
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN2
                0x000000003fc8dea0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dea0                ESP_EFUSE_ADC2_CAL_VOL_ATTEN2
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN1
                0x000000003fc8dea8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dea8                ESP_EFUSE_ADC2_CAL_VOL_ATTEN1
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN0
                0x000000003fc8deb0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8deb0                ESP_EFUSE_ADC2_CAL_VOL_ATTEN0
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN3
                0x000000003fc8deb8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8deb8                ESP_EFUSE_ADC1_CAL_VOL_ATTEN3
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN2
                0x000000003fc8dec0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dec0                ESP_EFUSE_ADC1_CAL_VOL_ATTEN2
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN1
                0x000000003fc8dec8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dec8                ESP_EFUSE_ADC1_CAL_VOL_ATTEN1
 .data.ESP_EFUSE_ADC1_CAL_VOL_ATTEN0
                0x000000003fc8ded0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8ded0                ESP_EFUSE_ADC1_CAL_VOL_ATTEN0
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN3
                0x000000003fc8ded8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8ded8                ESP_EFUSE_ADC2_INIT_CODE_ATTEN3
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN2
                0x000000003fc8dee0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dee0                ESP_EFUSE_ADC2_INIT_CODE_ATTEN2
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN1
                0x000000003fc8dee8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8dee8                ESP_EFUSE_ADC2_INIT_CODE_ATTEN1
 .data.ESP_EFUSE_ADC2_INIT_CODE_ATTEN0
                0x000000003fc8def0        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8def0                ESP_EFUSE_ADC2_INIT_CODE_ATTEN0
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN3
                0x000000003fc8def8        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8def8                ESP_EFUSE_ADC1_INIT_CODE_ATTEN3
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN2
                0x000000003fc8df00        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8df00                ESP_EFUSE_ADC1_INIT_CODE_ATTEN2
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN1
                0x000000003fc8df08        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8df08                ESP_EFUSE_ADC1_INIT_CODE_ATTEN1
 .data.ESP_EFUSE_ADC1_INIT_CODE_ATTEN0
                0x000000003fc8df10        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8df10                ESP_EFUSE_ADC1_INIT_CODE_ATTEN0
 .data.ESP_EFUSE_BLK_VERSION_MAJOR
                0x000000003fc8df18        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8df18                ESP_EFUSE_BLK_VERSION_MAJOR
 .data.ESP_EFUSE_ADC2_CAL_VOL_ATTEN3
                0x000000003fc8df20        0x8 libzephyr.a(esp_efuse_table.c.obj)
                0x000000003fc8df20                ESP_EFUSE_ADC2_CAL_VOL_ATTEN3
 .data.g_rtc_dbias_pvt_non_240m
                0x000000003fc8df28        0x4 libzephyr.a(rtc_init.c.obj)
                0x000000003fc8df28                g_rtc_dbias_pvt_non_240m
 .data.g_dig_dbias_pvt_non_240m
                0x000000003fc8df2c        0x4 libzephyr.a(rtc_init.c.obj)
                0x000000003fc8df2c                g_dig_dbias_pvt_non_240m
 .data.g_rtc_dbias_pvt_240m
                0x000000003fc8df30        0x4 libzephyr.a(rtc_init.c.obj)
                0x000000003fc8df30                g_rtc_dbias_pvt_240m
 .data.g_dig_dbias_pvt_240m
                0x000000003fc8df34        0x4 libzephyr.a(rtc_init.c.obj)
                0x000000003fc8df34                g_dig_dbias_pvt_240m
 .data.s_log_print_func
                0x000000003fc8df38        0x4 libzephyr.a(log.c.obj)
 .data.esp_log_default_level
                0x000000003fc8df3c        0x4 libzephyr.a(log.c.obj)
                0x000000003fc8df3c                esp_log_default_level
 .data.__stdout
                0x000000003fc8df40       0x10 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .data.z_malloc_heap_mutex
                0x000000003fc8df50       0x14 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                0x000000003fc8df50                z_malloc_heap_mutex
 .data.gpio_config_1
                0x000000003fc8df64       0x10 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.gpio_config_0
                0x000000003fc8df74       0x10 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .data.pwm_ledc_esp32_data
                0x000000003fc8df84       0x18 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .data.pwm_ledc_esp32_config
                0x000000003fc8df9c       0x14 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .data.channel_config
                0x000000003fc8dfb0       0x48 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .data.uart_esp32_data_0
                0x000000003fc8dff8        0xc drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .data.timeout_list
                0x000000003fc8e004        0x8 kernel/libkernel.a(timeout.c.obj)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.d.*))
 *(SORT_BY_ALIGNMENT(.data1))
 *(SORT_BY_ALIGNMENT(.sdata))
 *(SORT_BY_ALIGNMENT(.sdata.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s.*))
 *(SORT_BY_ALIGNMENT(.sdata2))
 *(SORT_BY_ALIGNMENT(.sdata2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.s2.*))
 *(SORT_BY_ALIGNMENT(.srodata))
 *(SORT_BY_ALIGNMENT(.srodata.*))
 *libarch__xtensa__core.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:fatal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libkernel.a:init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.levels$0
                0x000000003fc8e00c       0x18 kernel/libkernel.a(init.c.obj)
 .rodata.z_cstart.str1.1
                0x000000003fc8e024        0x5 kernel/libkernel.a(init.c.obj)
 *libzephyr.a:cbprintf_complete.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_core.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_backend_uart.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_output.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:log_minimal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:loader.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e029        0x3 
 .rodata._app_drom_vaddr
                0x000000003fc8e02c        0x4 libzephyr.a(loader.c.obj)
 .rodata._app_irom_vaddr
                0x000000003fc8e030        0x4 libzephyr.a(loader.c.obj)
 .rodata._app_drom_size
                0x000000003fc8e034        0x4 libzephyr.a(loader.c.obj)
 .rodata._app_drom_start
                0x000000003fc8e038        0x4 libzephyr.a(loader.c.obj)
 .rodata._app_irom_size
                0x000000003fc8e03c        0x4 libzephyr.a(loader.c.obj)
 .rodata._app_irom_start
                0x000000003fc8e040        0x4 libzephyr.a(loader.c.obj)
 .rodata.map_rom_segments.str1.1
                0x000000003fc8e044      0x122 libzephyr.a(loader.c.obj)
 .rodata.__start.str1.1
                0x000000003fc8e166       0x25 libzephyr.a(loader.c.obj)
 *libdrivers__serial.a:uart_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e18b        0x1 
 .rodata.__pinctrl_dev_config__device_dts_ord_78
                0x000000003fc8e18c        0x8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_78
                0x000000003fc8e194        0x8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_78
                0x000000003fc8e19c       0x10 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .rodata.str1.1
                0x000000003fc8e1ac        0xe drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *libdrivers__flash.a:flash_esp32.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_mmu_map.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_mmu_map_get_max_consecutive_free_block_size.str1.1
                0x000000003fc8e1ba       0x42 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map_reserve_block_with_caps.str1.1
                0x000000003fc8e1fc       0x20 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_map.str1.1
                0x000000003fc8e21c      0x108 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.esp_mmu_unmap.str1.1
                0x000000003fc8e324       0x88 libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$2
                0x000000003fc8e3ac        0xe libzephyr.a(esp_mmu_map.c.obj)
 .rodata.__FUNCTION__$3
                0x000000003fc8e3ba        0xc libzephyr.a(esp_mmu_map.c.obj)
 .rodata.str1.1
                0x000000003fc8e3c6        0x5 libzephyr.a(esp_mmu_map.c.obj)
 *libdrivers__interrupt_controller.a:(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.str1.1
                0x000000003fc8e3cb       0x23 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .rodata.CSWTCH$62
                0x000000003fc8e3ee        0x6 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 *libzephyr.a:mmu_psram_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_octal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_psram_impl_quad.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mmu_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.spi_flash_hal_configure_host_io_mode
                0x000000003fc8e3f4       0x48 libzephyr.a(spi_flash_hal_iram.c.obj)
 *libzephyr.a:spi_flash_encrypt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:cache_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:ledc_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:i2c_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:wdt_hal_iram.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:systimer_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hal_gpspi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.spi_flash_hal_gpspi_configure_host_io_mode
                0x000000003fc8e43c       0x18 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 *libzephyr.a:lldesc.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_write))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_early_timestamp))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_lock_timeout))
 *(SORT_BY_ALIGNMENT(.rodata.esp_log_impl_unlock))
 *libzephyr.a:spi_flash_chip_boya.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_chip_boya
                0x000000003fc8e454       0x7c libzephyr.a(spi_flash_chip_boya.c.obj)
                0x000000003fc8e454                esp_flash_chip_boya
 .rodata.chip_name
                0x000000003fc8e4d0        0x5 libzephyr.a(spi_flash_chip_boya.c.obj)
 *libzephyr.a:spi_flash_chip_gd.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e4d5        0x3 
 .rodata.esp_flash_chip_gd
                0x000000003fc8e4d8       0x7c libzephyr.a(spi_flash_chip_gd.c.obj)
                0x000000003fc8e4d8                esp_flash_chip_gd
 .rodata.chip_name
                0x000000003fc8e554        0x3 libzephyr.a(spi_flash_chip_gd.c.obj)
 *libzephyr.a:spi_flash_chip_generic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e557        0x1 
 .rodata.spi_flash_chip_generic_config_host_io_mode
                0x000000003fc8e558       0x18 libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.esp_flash_chip_generic
                0x000000003fc8e570       0x7c libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8e570                esp_flash_chip_generic
 .rodata.spi_flash_chip_generic_read.str1.1
                0x000000003fc8e5ec       0x38 libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_read_unique_id.str1.1
                0x000000003fc8e624       0x47 libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.spi_flash_chip_generic_suspend_cmd_conf.str1.1
                0x000000003fc8e66b       0x54 libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.chip_name
                0x000000003fc8e6bf        0x8 libzephyr.a(spi_flash_chip_generic.c.obj)
 .rodata.TAG    0x000000003fc8e6c7        0xd libzephyr.a(spi_flash_chip_generic.c.obj)
 *libzephyr.a:spi_flash_chip_issi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_chip_issi
                0x000000003fc8e6d4       0x7c libzephyr.a(spi_flash_chip_issi.c.obj)
                0x000000003fc8e6d4                esp_flash_chip_issi
 .rodata.chip_name
                0x000000003fc8e750        0x5 libzephyr.a(spi_flash_chip_issi.c.obj)
 *libzephyr.a:spi_flash_chip_mxic.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e755        0x3 
 .rodata.esp_flash_chip_mxic
                0x000000003fc8e758       0x7c libzephyr.a(spi_flash_chip_mxic.c.obj)
                0x000000003fc8e758                esp_flash_chip_mxic
 .rodata.chip_name
                0x000000003fc8e7d4        0x5 libzephyr.a(spi_flash_chip_mxic.c.obj)
 *libzephyr.a:spi_flash_chip_mxic_opi.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e7d9        0x3 
 .rodata.esp_flash_chip_mxic_opi
                0x000000003fc8e7dc       0x7c libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                0x000000003fc8e7dc                esp_flash_chip_mxic_opi
 .rodata.spi_flash_chip_mxic_opi_read_id.str1.1
                0x000000003fc8e858       0x19 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .rodata.chip_name
                0x000000003fc8e858        0xb libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 *libzephyr.a:spi_flash_chip_th.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e863        0x1 
 .rodata.esp_flash_chip_th
                0x000000003fc8e864       0x7c libzephyr.a(spi_flash_chip_th.c.obj)
                0x000000003fc8e864                esp_flash_chip_th
 .rodata.chip_name
                0x000000003fc8e8e0        0x3 libzephyr.a(spi_flash_chip_th.c.obj)
 *libzephyr.a:spi_flash_chip_winbond.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8e8e3        0x1 
 .rodata.esp_flash_chip_winbond
                0x000000003fc8e8e4       0x7c libzephyr.a(spi_flash_chip_winbond.c.obj)
                0x000000003fc8e8e4                esp_flash_chip_winbond
 .rodata.spi_flash_chip_winbond_read.str1.1
                0x000000003fc8e960       0x38 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.chip_name
                0x000000003fc8e960        0x8 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .rodata.TAG    0x000000003fc8e968        0x8 libzephyr.a(spi_flash_chip_winbond.c.obj)
 *libzephyr.a:memspi_host_driver.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.esp_flash_gpspi_host
                0x000000003fc8e970       0x58 libzephyr.a(memspi_host_driver.c.obj)
 .rodata.memspi_host_read_id_hs.str1.1
                0x000000003fc8e9c8       0x19 libzephyr.a(memspi_host_driver.c.obj)
 .rodata.TAG    0x000000003fc8e9e1        0x7 libzephyr.a(memspi_host_driver.c.obj)
 *libzephyr.a:flash_brownout_hook.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_wrap.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:spi_flash_hpm_enable.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.spi_flash_enable_high_performance_mode.str1.1
                0x000000003fc8e9e8       0xcc libzephyr.a(spi_flash_hpm_enable.c.obj)
 .rodata.str1.1
                0x000000003fc8eab4       0x22 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .rodata.spi_flash_hpm_enable_list
                0x000000003fc8ead6       0x60 libzephyr.a(spi_flash_hpm_enable.c.obj)
                0x000000003fc8ead6                spi_flash_hpm_enable_list
 *libzephyr.a:spi_flash_oct_flash_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8eb36        0x2 
 .rodata.opiflash_cmd_def_mxic$1
                0x000000003fc8eb38       0x5c libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.opi_flash_func_mxic
                0x000000003fc8eb94        0xc libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.s_probe_mxic_chip.str1.1
                0x000000003fc8eba0       0x4a libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .rodata.esp_opiflash_init.str1.1
                0x000000003fc8ebea       0x60 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 *libzephyr.a:flash_qio_mode.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_cache.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_stall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_unstall))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_reset))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_wait_for_intr))
 *(SORT_BY_ALIGNMENT(.rodata.esp_cpu_compare_and_set))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_reserve_pins))
 *(SORT_BY_ALIGNMENT(.rodata.esp_gpio_is_pin_reserved))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_get_config))
 *(SORT_BY_ALIGNMENT(.rodata.rtc_vddsdio_set_config))
 *libzephyr.a:esp_memory_utils.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:rtc_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_xtal_freq_get.str1.1
                0x000000003fc8ec4a       0x42 libzephyr.a(rtc_clk.c.obj)
 .rodata.rtc_clk_cpu_freq_get_config.str1.1
                0x000000003fc8ec8c       0x30 libzephyr.a(rtc_clk.c.obj)
 *libzephyr.a:rtc_clk_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata.rtc_clk_init.str1.1
                0x000000003fc8ecbc       0x35 libzephyr.a(rtc_clk_init.c.obj)
 *libzephyr.a:systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_config.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:mspi_timing_tuning.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003fc8ecf1        0x3 
 .rodata        0x000000003fc8ecf4       0x24 libzephyr.a(mspi_timing_tuning.c.obj)
 *(SORT_BY_ALIGNMENT(.rodata.sar_periph_ctrl_power_enable))
 *(SORT_BY_ALIGNMENT(.rodata.GPIO_HOLD_MASK))
 *libzephyr.a:esp_rom_cache_esp32s2_esp32s3.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_spiflash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_systimer.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_rom_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 *libzephyr.a:esp_err.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*))
 .rodata._esp_error_check_failed_without_abort.str1.1
                0x000000003fc8ed18       0x70 libzephyr.a(esp_err.c.obj)
 .rodata._esp_error_check_failed.str1.1
                0x000000003fc8ed88       0x10 libzephyr.a(esp_err.c.obj)
 *(SORT_BY_ALIGNMENT(.rodata.esp_system_abort))
                0x000000003fc8ed98                . = ALIGN (0x4)
                0x000000003fc8ed98                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.jcr))
 *(SORT_BY_ALIGNMENT(.dram1) SORT_BY_ALIGNMENT(.dram1.*))
 .dram1.2       0x000000003fc8ed98        0x4 libzephyr.a(esp_flash_api.c.obj)
                0x000000003fc8ed98                rom_spiflash_api_funcs
 .dram1.1       0x000000003fc8ed9c       0x10 libzephyr.a(esp_flash_api.c.obj)
 .dram1.2       0x000000003fc8edac       0x20 libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.1       0x000000003fc8edcc       0x28 libzephyr.a(esp_flash_spi_init.c.obj)
 .dram1.0       0x000000003fc8edf4        0x8 libzephyr.a(flash_ops.c.obj)
                0x000000003fc8edf4                g_flash_guard_default_ops
 .dram1.0       0x000000003fc8edfc       0x58 libzephyr.a(memspi_host_driver.c.obj)
 .dram1.5       0x000000003fc8ee54       0x14 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8ee54                spi_flash_chip_generic_timeout
 .dram1.4       0x000000003fc8ee68       0x18 libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.3       0x000000003fc8ee80        0x4 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8ee80                rom_flash_chip_dummy_hpm
 .dram1.2       0x000000003fc8ee84        0x4 libzephyr.a(spi_flash_chip_generic.c.obj)
                0x000000003fc8ee84                rom_flash_chip_dummy
 .dram1.5       0x000000003fc8ee88       0x28 libzephyr.a(spi_flash_os_func_noos.c.obj)
                0x000000003fc8ee88                esp_flash_noos_functions
 .dram1.11      0x000000003fc8eeb0       0x28 libzephyr.a(spi_flash_os_func_app.c.obj)
 .dram1.10      0x000000003fc8eed8       0x10 libzephyr.a(spi_flash_os_func_app.c.obj)
 .dram1.3       0x000000003fc8eee8        0x4 libzephyr.a(rtc_module.c.obj)
 .dram1.2       0x000000003fc8eeec        0x4 libzephyr.a(rtc_module.c.obj)
 .dram1.1       0x000000003fc8eef0        0x4 libzephyr.a(rtc_module.c.obj)
 .dram1.0       0x000000003fc8eef4        0x4 libzephyr.a(esp_mmu_map.c.obj)
 .dram1.1       0x000000003fc8eef8       0x1c drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.0       0x000000003fc8ef14       0x14 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .dram1.0       0x000000003fc8ef28        0xa libzephyr.a(esp_flash_api.c.obj)
 .dram1.1       0x000000003fc8ef32        0x6 libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.0       0x000000003fc8ef38        0x6 libzephyr.a(spi_flash_chip_generic.c.obj)
 .dram1.11      0x000000003fc8ef3e       0x1e libzephyr.a(bootloader_flash.c.obj)
 .dram1.10      0x000000003fc8ef5c       0x1e libzephyr.a(bootloader_flash.c.obj)
 .dram1.5       0x000000003fc8ef7a       0x11 libzephyr.a(bootloader_flash.c.obj)
                0x000000003fc8ef8c                . = ALIGN (0x4)
 *fill*         0x000000003fc8ef8b        0x1 

.loader.data    0x000000003fc8ef8c      0x700 load address 0x000000000000af6c
                0x000000003fc8ef8c                . = ALIGN (0x4)
                0x000000003fc8ef8c                _loader_data_start = ABSOLUTE (.)
 *libzephyr.a:bootloader_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata        0x000000003fc8ef8c        0x8 libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_read_bootloader_header.str1.1
                0x000000003fc8ef94       0x39 libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_check_bootloader_validity.str1.1
                0x000000003fc8efcd       0x22 libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_enable_random.str1.1
                0x000000003fc8efef       0x31 libzephyr.a(bootloader_init.c.obj)
 .rodata.bootloader_print_banner.str1.1
                0x000000003fc8f020       0x69 libzephyr.a(bootloader_init.c.obj)
 *libzephyr.a:bootloader_esp32s3.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.bootloader_init.str1.1
                0x000000003fc8f089       0x9d libzephyr.a(bootloader_esp32s3.c.obj)
 *libzephyr.a:bootloader_clock_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003fc8f126        0x2 
 .rodata        0x000000003fc8f128        0x8 libzephyr.a(bootloader_clock_init.c.obj)
 *libzephyr.a:bootloader_wdt.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_flash.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:bootloader_flash_config_esp32s3.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.CSWTCH$21
                0x000000003fc8f130       0x20 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.CSWTCH$20
                0x000000003fc8f150       0x40 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.bootloader_init_spi_flash.str1.1
                0x000000003fc8f190       0x86 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x97 (size before relaxing)
 .rodata.CSWTCH$23
                0x000000003fc8f216        0x8 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .rodata.str1.1
                0x000000003fc8f21e       0x33 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x3b (size before relaxing)
 *libzephyr.a:bootloader_efuse.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:cpu_util.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_clk.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:cpu_region_protect.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *fill*         0x000000003fc8f251        0x3 
 .rodata        0x000000003fc8f254       0x14 libzephyr.a(cpu_region_protect.c.obj)
 *libzephyr.a:spi_flash_hal.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.get_flash_clock_divider.str1.1
                0x000000003fc8f268       0x77 libzephyr.a(spi_flash_hal.c.obj)
 *libzephyr.a:spi_flash_hal_common.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 *libzephyr.a:esp_flash_api.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.str1.1
                0x000000003fc8f2df      0x186 libzephyr.a(esp_flash_api.c.obj)
 .rodata.esp_flash_read_unique_chip_id.str1.1
                0x000000003fc8f465       0x79 libzephyr.a(esp_flash_api.c.obj)
 .rodata.io_mode_str
                0x000000003fc8f4de       0xb4 libzephyr.a(esp_flash_api.c.obj)
 *libzephyr.a:esp_flash_spi_init.*(SORT_BY_ALIGNMENT(.rodata) SORT_BY_ALIGNMENT(.rodata.*) SORT_BY_ALIGNMENT(.sdata2) SORT_BY_ALIGNMENT(.sdata2.*) SORT_BY_ALIGNMENT(.srodata) SORT_BY_ALIGNMENT(.srodata.*))
 .rodata.esp_flash_init_default_chip.str1.1
                0x000000003fc8f592       0xea libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.CSWTCH$35
                0x000000003fc8f67c        0x4 libzephyr.a(esp_flash_spi_init.c.obj)
 .rodata.TAG    0x000000003fc8f680        0xa libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003fc8f68c                . = ALIGN (0x4)
 *fill*         0x000000003fc8f68a        0x2 
                0x000000003fc8f68c                _loader_data_end = ABSOLUTE (.)

sw_isr_table    0x000000003fc8f68c      0x100 load address 0x000000000000b66c
                0x000000003fc8f68c                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sw_isr_table*))
 .gnu.linkonce.sw_isr_table
                0x000000003fc8f68c      0x100 arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003fc8f68c                _sw_isr_table

device_states   0x000000003fc8f78c        0xc load address 0x000000000000b76c
                0x000000003fc8f78c                __device_states_start = .
 *(SORT_BY_ALIGNMENT(.z_devstate))
 .z_devstate    0x000000003fc8f78c        0x2 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .z_devstate    0x000000003fc8f78e        0x2 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_devstate    0x000000003fc8f790        0x4 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_devstate    0x000000003fc8f794        0x2 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .z_devstate    0x000000003fc8f796        0x2 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.z_devstate.*))
                0x000000003fc8f798                __device_states_end = .

log_mpsc_pbuf_area
                0x000000003fc8f798        0x0 load address 0x000000000000b778
                0x000000003fc8f798                _log_mpsc_pbuf_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_mpsc_pbuf.static.*)))
                0x000000003fc8f798                _log_mpsc_pbuf_list_end = .

log_msg_ptr_area
                0x000000003fc8f798        0x0 load address 0x000000000000b778
                0x000000003fc8f798                _log_msg_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_msg_ptr.static.*)))
                0x000000003fc8f798                _log_msg_ptr_list_end = .

log_dynamic_area
                0x000000003fc8f798        0x0 load address 0x000000000000b778
                0x000000003fc8f798                _log_dynamic_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_dynamic.static.*)))
                0x000000003fc8f798                _log_dynamic_list_end = .

k_timer_area    0x000000003fc8f798        0x0 load address 0x000000000000b778
                0x000000003fc8f798                _k_timer_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_timer.static.*)))
                0x000000003fc8f798                _k_timer_list_end = .

k_mem_slab_area
                0x000000003fc8f798        0x0 load address 0x000000000000b778
                0x000000003fc8f798                _k_mem_slab_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mem_slab.static.*)))
                0x000000003fc8f798                _k_mem_slab_list_end = .

k_heap_area     0x000000003fc8f798       0x14 load address 0x000000000000b778
                0x000000003fc8f798                _k_heap_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_heap.static.*)))
 ._k_heap.static._system_heap_
                0x000000003fc8f798       0x14 kernel/libkernel.a(mempool.c.obj)
                0x000000003fc8f798                _system_heap
                0x000000003fc8f7ac                _k_heap_list_end = .

k_mutex_area    0x000000003fc8f7ac       0x14 load address 0x000000000000b78c
                0x000000003fc8f7ac                _k_mutex_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mutex.static.*)))
 ._k_mutex.static.adc1_dma_lock_
                0x000000003fc8f7ac       0x14 libzephyr.a(adc_legacy.c.obj)
                0x000000003fc8f7ac                adc1_dma_lock
                0x000000003fc8f7c0                _k_mutex_list_end = .

k_stack_area    0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_stack_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_stack.static.*)))
                0x000000003fc8f7c0                _k_stack_list_end = .

k_msgq_area     0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_msgq_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_msgq.static.*)))
                0x000000003fc8f7c0                _k_msgq_list_end = .

k_mbox_area     0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_mbox_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_mbox.static.*)))
                0x000000003fc8f7c0                _k_mbox_list_end = .

k_pipe_area     0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_pipe_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_pipe.static.*)))
                0x000000003fc8f7c0                _k_pipe_list_end = .

k_sem_area      0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_sem_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_sem.static.*)))
                0x000000003fc8f7c0                _k_sem_list_end = .

k_event_area    0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_event_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_event.static.*)))
                0x000000003fc8f7c0                _k_event_list_end = .

k_queue_area    0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_queue_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_queue.static.*)))
                0x000000003fc8f7c0                _k_queue_list_end = .

k_fifo_area     0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_fifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_fifo.static.*)))
                0x000000003fc8f7c0                _k_fifo_list_end = .

k_lifo_area     0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_lifo_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_lifo.static.*)))
                0x000000003fc8f7c0                _k_lifo_list_end = .

k_condvar_area  0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _k_condvar_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_condvar.static.*)))
                0x000000003fc8f7c0                _k_condvar_list_end = .

sys_mem_blocks_ptr_area
                0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _sys_mem_blocks_ptr_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._sys_mem_blocks_ptr.static.*)))
                0x000000003fc8f7c0                _sys_mem_blocks_ptr_list_end = .

net_buf_pool_area
                0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _net_buf_pool_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._net_buf_pool.static.*)))
                0x000000003fc8f7c0                _net_buf_pool_list_end = .

log_strings_area
                0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _log_strings_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_strings.static.*)))
                0x000000003fc8f7c0                _log_strings_list_end = .

log_const_area  0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _log_const_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_const.static.*)))
                0x000000003fc8f7c0                _log_const_list_end = .

log_backend_area
                0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _log_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_backend.static.*)))
                0x000000003fc8f7c0                _log_backend_list_end = .

log_link_area   0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                _log_link_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._log_link.static.*)))
                0x000000003fc8f7c0                _log_link_list_end = .

.dram0.end      0x000000003fc8f7c0        0x0 load address 0x000000000000b7a0
                0x000000003fc8f7c0                __data_end = ABSOLUTE (.)
                0x000000003fc8f7c0                _data_end = ABSOLUTE (.)

.dram0.bss      0x000000003fc8f7c0      0x670 load address 0x000000000000b7a0
                0x000000003fc8f7c0                . = ALIGN (0x8)
                0x000000003fc8f7c0                _bss_start = ABSOLUTE (.)
                0x000000003fc8f7c0                __bss_start = ABSOLUTE (.)
                0x000000003fc8f7c0                _btdm_bss_start = ABSOLUTE (.)
 *libbtdm_app.a:(SORT_BY_ALIGNMENT(.bss) SORT_BY_ALIGNMENT(.bss.*) SORT_BY_ALIGNMENT(COMMON))
                0x000000003fc8f7c0                . = ALIGN (0x4)
                0x000000003fc8f7c0                _btdm_bss_end = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.dynsbss))
 *(SORT_BY_ALIGNMENT(.sbss))
 *(SORT_BY_ALIGNMENT(.sbss.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb.*))
 *(SORT_BY_ALIGNMENT(.scommon))
 *(SORT_BY_ALIGNMENT(.sbss2))
 *(SORT_BY_ALIGNMENT(.sbss2.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.sb2.*))
 *(SORT_BY_ALIGNMENT(.dynbss))
 *(SORT_BY_ALIGNMENT(.bss))
 *(SORT_BY_ALIGNMENT(.bss.*))
 .bss.s_reserve_status
                0x000000003fc8f7c0        0x8 libzephyr.a(esp_gpio_reserve.c.obj)
 .bss.z_idle_threads
                0x000000003fc8f7c8       0x60 kernel/libkernel.a(init.c.obj)
                0x000000003fc8f7c8                z_idle_threads
 .bss.z_main_thread
                0x000000003fc8f828       0x60 kernel/libkernel.a(init.c.obj)
                0x000000003fc8f828                z_main_thread
 .bss._thread_dummy
                0x000000003fc8f888       0x60 kernel/libkernel.a(sched.c.obj)
                0x000000003fc8f888                _thread_dummy
 .bss.slice_timeouts
                0x000000003fc8f8e8       0x18 kernel/libkernel.a(timeslicing.c.obj)
 .bss.curr_tick
                0x000000003fc8f900        0x8 kernel/libkernel.a(timeout.c.obj)
 .bss.esp_heap_runtime
                0x000000003fc8f908       0x14 libzephyr.a(esp_heap_runtime.c.obj)
 .bss.s_chip_func
                0x000000003fc8f91c        0x4 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss.s_chip_id
                0x000000003fc8f920        0x4 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .bss.esp_flash_default_chip
                0x000000003fc8f924        0x4 libzephyr.a(esp_flash_spi_init.c.obj)
                0x000000003fc8f924                esp_flash_default_chip
 .bss.s_flash_guard_ops
                0x000000003fc8f928        0x4 libzephyr.a(flash_ops.c.obj)
 .bss.chip_hpm  0x000000003fc8f92c        0x4 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss.s_adc_cali_param
                0x000000003fc8f930       0x20 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .bss.s_burn_counter
                0x000000003fc8f950        0x4 libzephyr.a(esp_efuse_utility.c.obj)
 .bss.bootloader_image_hdr
                0x000000003fc8f954       0x18 libzephyr.a(bootloader_init.c.obj)
                0x000000003fc8f954                bootloader_image_hdr
 .bss.mux       0x000000003fc8f96c        0x4 libzephyr.a(regi2c_ctrl.c.obj)
 .bss.periph_spinlock
                0x000000003fc8f970        0x4 libzephyr.a(periph_ctrl.c.obj)
 .bss.rtc_spinlock
                0x000000003fc8f974        0x4 libzephyr.a(rtc_module.c.obj)
                0x000000003fc8f974                rtc_spinlock
 .bss.s_calibrated_freq
                0x000000003fc8f978        0x8 libzephyr.a(esp_clk_tree_common.c.obj)
 .bss.s_bbpll_digi_consumers_ref_count
                0x000000003fc8f980        0x4 libzephyr.a(rtc_clk.c.obj)
 .bss.s_apb_freq
                0x000000003fc8f984        0x4 libzephyr.a(rtc_clk.c.obj)
 .bss.s_cur_pll_freq
                0x000000003fc8f988        0x4 libzephyr.a(rtc_clk.c.obj)
 .bss.s_sar_power_on_cnt
                0x000000003fc8f98c        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
 .bss.s_mmu_ctx
                0x000000003fc8f990       0x2c libzephyr.a(esp_mmu_map.c.obj)
 .bss.s_reset_reason
                0x000000003fc8f9bc        0x4 libzephyr.a(reset_reason.c.obj)
 .bss.systimer_hal
                0x000000003fc8f9c0        0xc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .bss.ctx       0x000000003fc8f9cc        0x8 libzephyr.a(cache_hal.c.obj)
 .bss.s_lock    0x000000003fc8f9d4        0x4 libzephyr.a(log_noos.c.obj)
 .bss.s_log_cache_misses
                0x000000003fc8f9d8        0x4 libzephyr.a(log.c.obj)
 .bss.s_log_cache_entry_count
                0x000000003fc8f9dc        0x4 libzephyr.a(log.c.obj)
 .bss.s_log_cache_max_generation
                0x000000003fc8f9e0        0x4 libzephyr.a(log.c.obj)
 .bss.s_log_cache
                0x000000003fc8f9e4       0xf8 libzephyr.a(log.c.obj)
 .bss.s_log_tags
                0x000000003fc8fadc        0x4 libzephyr.a(log.c.obj)
 .bss.s_intr_saved_state
                0x000000003fc8fae0        0x4 libzephyr.a(cache_utils.c.obj)
 .bss.s_cache_ops_saved_state
                0x000000003fc8fae4        0x8 libzephyr.a(cache_utils.c.obj)
 .bss.alloc_failed_callback
                0x000000003fc8faec        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .bss._stdout_hook
                0x000000003fc8faf0        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .bss.z_malloc_heap
                0x000000003fc8faf4        0xc lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .bss.non_iram_int_disabled
                0x000000003fc8fb00        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.non_iram_int_mask
                0x000000003fc8fb04        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.vector_desc_head
                0x000000003fc8fb08        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.intr_alloc_table
                0x000000003fc8fb0c      0x100 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.esp_intc_csec
                0x000000003fc8fc0c        0x4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.adc_esp32_data_0
                0x000000003fc8fc10      0x1a8 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .bss.gpio_data_1
                0x000000003fc8fdb8        0xc drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.gpio_data_0
                0x000000003fc8fdc4        0xc drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.last_count
                0x000000003fc8fdd0        0x4 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .bss._kernel   0x000000003fc8fdd4       0x20 kernel/libkernel.a(init.c.obj)
                0x000000003fc8fdd4                _kernel
 .bss.slice_max_prio
                0x000000003fc8fdf4        0x4 kernel/libkernel.a(timeslicing.c.obj)
 .bss.slice_ticks
                0x000000003fc8fdf8        0x4 kernel/libkernel.a(timeslicing.c.obj)
 .bss.announce_remaining
                0x000000003fc8fdfc        0x4 kernel/libkernel.a(timeout.c.obj)
 .bss.hpm_dummy_changed
                0x000000003fc8fe00        0x1 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .bss.ref_counts
                0x000000003fc8fe01       0x29 libzephyr.a(periph_ctrl.c.obj)
 .bss.non_iram_int_disabled_flag
                0x000000003fc8fe2a        0x1 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .bss.isr_connected$0
                0x000000003fc8fe2b        0x1 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .bss.z_sys_post_kernel
                0x000000003fc8fe2c        0x1 kernel/libkernel.a(init.c.obj)
                0x000000003fc8fe2c                z_sys_post_kernel
 .bss.lock      0x000000003fc8fe2d        0x0 kernel/libkernel.a(mutex.c.obj)
 .bss.lock      0x000000003fc8fe2d        0x0 kernel/libkernel.a(sem.c.obj)
 .bss._sched_spinlock
                0x000000003fc8fe2d        0x0 kernel/libkernel.a(sched.c.obj)
                0x000000003fc8fe2d                _sched_spinlock
 .bss.slice_expired
                0x000000003fc8fe2d        0x1 kernel/libkernel.a(timeslicing.c.obj)
 *(SORT_BY_ALIGNMENT(.share.mem))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.b.*))
 *(SORT_BY_ALIGNMENT(COMMON))
                0x000000003fc8fe30                . = ALIGN (0x8)
 *fill*         0x000000003fc8fe2e        0x2 
                0x000000003fc8fe30                _bss_end = ABSOLUTE (.)
                0x000000003fc8fe30                __bss_end = ABSOLUTE (.)

.dram0.noinit   0x000000003fc8fe30     0x2400 load address 0x000000000000b7a0
                0x000000003fc8fe30                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.noinit))
 *(SORT_BY_ALIGNMENT(.noinit.*))
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".2
                0x000000003fc8fe30      0x800 kernel/libkernel.a(init.c.obj)
                0x000000003fc8fe30                z_interrupt_stacks
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".1
                0x000000003fc90630      0x400 kernel/libkernel.a(init.c.obj)
 .noinit."WEST_TOPDIR/zephyr/kernel/init.c".0
                0x000000003fc90a30      0x800 kernel/libkernel.a(init.c.obj)
                0x000000003fc90a30                z_main_stack
 .noinit."WEST_TOPDIR/zephyr/kernel/mempool.c".kheap_buf__system_heap
                0x000000003fc91230     0x1000 kernel/libkernel.a(mempool.c.obj)
                0x000000003fc91230                kheap__system_heap
                0x000000003fc92230                . = ALIGN (0x4)
                0x000000003fc84000                _image_ram_start = (_iram_start - 0x6f0000)

.last_ram_section
                0x000000003fc92230        0x0 load address 0x000000000000b7a0
                0x000000003fc92230                _image_ram_end = .
                0x000000000000e230                _image_ram_size = (_image_ram_end - _image_ram_start)
                0x000000003fc92230                _end = .
                0x000000003fc92230                z_mapped_end = .
                0x0000000000000001                ASSERT (((_end - ORIGIN (dram0_0_seg)) <= LENGTH (dram0_0_seg)), DRAM segment data does not fit.)
                0x0000000000010000                _image_irom_start = LOADADDR (.flash.text)
                0x000000000000579a                _image_irom_size = ((LOADADDR (.flash.text) + SIZEOF (.flash.text)) - _image_irom_start)
                0x0000000042000000                _image_irom_vaddr = ADDR (.flash.text)

.flash.text_dummy
                0x000000000000b7a0     0x4860
                0x0000000000010000                . = ALIGN (0x10000)
 *fill*         0x000000000000b7a0     0x4860 

.flash.text     0x0000000042000000     0x579a load address 0x0000000000010000
                0x0000000042000000                _stext = .
                0x0000000042000000                _instruction_reserved_start = ABSOLUTE (.)
                0x0000000042000000                _text_start = ABSOLUTE (.)
                0x0000000042000000                __text_region_start = ABSOLUTE (.)
                0x0000000042000000                __rom_region_start = ABSOLUTE (.)
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifi0iram) SORT_BY_ALIGNMENT(.wifi0iram.*) SORT_BY_ALIGNMENT(.wifislpiram) SORT_BY_ALIGNMENT(.wifislpiram.*) SORT_BY_ALIGNMENT(.wifiorslpiram) SORT_BY_ALIGNMENT(.wifiorslpiram.*))
 *libnet80211.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *libpp.a:(SORT_BY_ALIGNMENT(.wifirxiram) SORT_BY_ALIGNMENT(.wifirxiram.*) SORT_BY_ALIGNMENT(.wifislprxiram) SORT_BY_ALIGNMENT(.wifislprxiram.*))
 *(SORT_BY_ALIGNMENT(.stub) SORT_BY_ALIGNMENT(.gnu.warning) SORT_BY_ALIGNMENT(.gnu.linkonce.literal.*) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*.literal) SORT_BY_ALIGNMENT(.gnu.linkonce.t.*))
 *(SORT_BY_ALIGNMENT(.irom0.text))
 *(SORT_BY_ALIGNMENT(.fini.literal))
 *(.fini)
 *(SORT_BY_ALIGNMENT(.gnu.version))
 *(SORT_BY_ALIGNMENT(.literal) SORT_BY_ALIGNMENT(.text) SORT_BY_ALIGNMENT(.literal.*) SORT_BY_ALIGNMENT(.text.*))
 .literal.pwm_set$constprop$0
                0x0000000042000000        0xc ../app/libapp.a(main.c.obj)
                                         0x10 (size before relaxing)
 .literal.main  0x000000004200000c       0x40 ../app/libapp.a(main.c.obj)
                                         0x60 (size before relaxing)
 .literal.chunk_field
                0x000000004200004c        0x4 libzephyr.a(heap.c.obj)
 .literal.chunk_set
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.chunk_size
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_used
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.set_chunk_size
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.mem_to_chunkid
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.bucket_idx$isra$0
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0x4 (size before relaxing)
 .literal.free_list_remove_bidx
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.free_list_remove
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.alloc_chunk
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x10 (size before relaxing)
 .literal.split_chunks
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.merge_chunks
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x14 (size before relaxing)
 .literal.free_list_add
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x24 (size before relaxing)
 .literal.free_chunk
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.sys_heap_free
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                          0xc (size before relaxing)
 .literal.sys_heap_alloc
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x18 (size before relaxing)
 .literal.sys_heap_aligned_alloc
                0x0000000042000050        0x0 libzephyr.a(heap.c.obj)
                                         0x28 (size before relaxing)
 .literal.sys_heap_init
                0x0000000042000050        0x4 libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .literal.__printk_hook_install
                0x0000000042000054        0x4 libzephyr.a(printk.c.obj)
 .literal.z_thread_entry
                0x0000000042000058        0x8 libzephyr.a(thread_entry.c.obj)
 .literal.esp_heap_runtime_init
                0x0000000042000060       0x24 libzephyr.a(esp_heap_runtime.c.obj)
 .literal.spi_flash_mmap
                0x0000000042000084        0x8 libzephyr.a(flash_mmap.c.obj)
                                         0x14 (size before relaxing)
 .literal.spi_flash_munmap
                0x000000004200008c        0x4 libzephyr.a(flash_mmap.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_mspi_get_io
                0x0000000042000090        0xc libzephyr.a(flash_ops.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_flash_app_enable_os_functions
                0x000000004200009c        0x8 libzephyr.a(spi_flash_os_func_app.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_set_hw_flow_ctrl
                0x00000000420000a4        0xc libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_txfifo_empty_thr
                0x00000000420000b0        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_mode
                0x00000000420000b4        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_inverse_signal
                0x00000000420000b8        0x4 libzephyr.a(uart_hal.c.obj)
 .literal.uart_hal_set_rx_timeout
                0x00000000420000bc        0x8 libzephyr.a(uart_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.uart_hal_rxfifo_rst
                0x00000000420000c4        0x4 libzephyr.a(uart_hal_iram.c.obj)
 .literal.ledc_hal_init
                0x00000000420000c8        0x4 libzephyr.a(ledc_hal.c.obj)
 .literal.read_cal_channel
                0x00000000420000cc        0x8 libzephyr.a(adc_hal_common.c.obj)
                                          0xc (size before relaxing)
 .literal.adc_hal_set_controller
                0x00000000420000d4        0x8 libzephyr.a(adc_hal_common.c.obj)
                                         0x10 (size before relaxing)
 .literal.adc_hal_arbiter_config
                0x00000000420000dc        0xc libzephyr.a(adc_hal_common.c.obj)
 .literal.adc_hal_calibration_init
                0x00000000420000e8        0x4 libzephyr.a(adc_hal_common.c.obj)
 .literal.adc_hal_set_calibration_param
                0x00000000420000ec        0x4 libzephyr.a(adc_hal_common.c.obj)
                                         0x10 (size before relaxing)
 .literal.adc_hal_self_calibration
                0x00000000420000f0       0x10 libzephyr.a(adc_hal_common.c.obj)
                                         0x60 (size before relaxing)
 .literal.adc_common_gpio_init
                0x0000000042000100       0x24 libzephyr.a(adc_legacy.c.obj)
                                         0x4c (size before relaxing)
 .literal.adc_set_data_width
                0x0000000042000124        0xc libzephyr.a(adc_legacy.c.obj)
                                         0x18 (size before relaxing)
 .literal.adc1_config_channel_atten
                0x0000000042000130        0xc libzephyr.a(adc_legacy.c.obj)
                                         0x30 (size before relaxing)
 .literal.adc1_rtc_mode_acquire
                0x000000004200013c        0x8 libzephyr.a(adc_legacy.c.obj)
                                         0x18 (size before relaxing)
 .literal.adc1_lock_release
                0x0000000042000144        0xc libzephyr.a(adc_legacy.c.obj)
                                         0x20 (size before relaxing)
 .literal.adc1_get_raw
                0x0000000042000150        0xc libzephyr.a(adc_legacy.c.obj)
                                         0x38 (size before relaxing)
 .literal.adc2_config_channel_atten
                0x000000004200015c       0x10 libzephyr.a(adc_legacy.c.obj)
                                         0x34 (size before relaxing)
 .literal.adc2_get_raw
                0x000000004200016c       0x10 libzephyr.a(adc_legacy.c.obj)
                                         0x4c (size before relaxing)
 .literal.adc_calc_hw_calibration_code
                0x000000004200017c        0x4 libzephyr.a(adc_share_hw_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.esp_adc_cal_check_efuse
                0x0000000042000180        0x0 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_adc_cal_characterize
                0x0000000042000180       0x1c libzephyr.a(esp_adc_cal_legacy.c.obj)
                                         0x40 (size before relaxing)
 .literal.esp_adc_cal_raw_to_voltage
                0x000000004200019c       0x14 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                         0x24 (size before relaxing)
 .literal.esp_adc_cal_get_reading_error
                0x00000000420001b0        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                                         0x18 (size before relaxing)
 .literal.rtcio_ll_input_enable
                0x00000000420001b0        0x4 libzephyr.a(rtc_io_hal.c.obj)
 .literal.rtcio_ll_input_disable
                0x00000000420001b4        0x0 libzephyr.a(rtc_io_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.rtcio_hal_set_direction
                0x00000000420001b4        0x8 libzephyr.a(rtc_io_hal.c.obj)
                                         0x10 (size before relaxing)
 .literal.rtc_gpio_is_valid_gpio
                0x00000000420001bc        0x4 libzephyr.a(rtc_io.c.obj)
 .literal.rtc_gpio_init
                0x00000000420001c0       0x14 libzephyr.a(rtc_io.c.obj)
                                         0x30 (size before relaxing)
 .literal.rtc_gpio_set_direction
                0x00000000420001d4        0x4 libzephyr.a(rtc_io.c.obj)
                                         0x24 (size before relaxing)
 .literal.rtc_gpio_pullup_dis
                0x00000000420001d8        0x8 libzephyr.a(rtc_io.c.obj)
                                         0x28 (size before relaxing)
 .literal.rtc_gpio_pulldown_dis
                0x00000000420001e0        0x4 libzephyr.a(rtc_io.c.obj)
                                         0x24 (size before relaxing)
 .literal.esp_efuse_rtc_calib_get_ver
                0x00000000420001e4       0x20 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_efuse_rtc_calib_get_init_code
                0x0000000042000204       0x14 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_efuse_rtc_calib_get_cal_voltage
                0x0000000042000218        0xc libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0x28 (size before relaxing)
 .literal.esp_cpu_intr_get_desc
                0x0000000042000224        0x4 libzephyr.a(cpu.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_slowclk_cal_set
                0x0000000042000228        0x4 libzephyr.a(esp_clk.c.obj)
 .literal.periph_ll_get_rst_en_mask
                0x000000004200022c        0x4 libzephyr.a(periph_ctrl.c.obj)
 .literal.periph_module_enable
                0x0000000042000230       0x1c libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.periph_module_disable
                0x000000004200024c        0x0 libzephyr.a(periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x000000004200024c       0x10 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x18 (size before relaxing)
 .literal.esp_clk_tree_xtal32k_get_freq_hz
                0x000000004200025c        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_lp_slow_get_freq_hz
                0x000000004200025c        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_clk_tree_rc_fast_get_freq_hz
                0x000000004200025c        0x4 libzephyr.a(esp_clk_tree_common.c.obj)
                                          0x8 (size before relaxing)
 .literal.esp_clk_tree_lp_fast_get_freq_hz
                0x0000000042000260        0x4 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_clk_tree_src_get_freq_hz
                0x0000000042000264       0x28 libzephyr.a(esp_clk_tree.c.obj)
                                         0x64 (size before relaxing)
 .literal.get_rtc_dbias_by_efuse$constprop$0
                0x000000004200028c        0xc libzephyr.a(rtc_init.c.obj)
 .literal.rtc_init
                0x0000000042000298       0xd4 libzephyr.a(rtc_init.c.obj)
                                        0x158 (size before relaxing)
 .literal.s_sar_power_acquire
                0x000000004200036c        0x4 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .literal.s_sar_power_release
                0x0000000042000370       0x10 libzephyr.a(sar_periph_ctrl.c.obj)
                                         0x24 (size before relaxing)
 .literal.sar_periph_ctrl_init
                0x0000000042000380        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0x8 (size before relaxing)
 .literal.sar_periph_ctrl_adc_oneshot_power_acquire
                0x0000000042000380        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0x4 (size before relaxing)
 .literal.sar_periph_ctrl_adc_oneshot_power_release
                0x0000000042000380        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_rom_efuse_get_opiconfig
                0x0000000042000380        0x8 libzephyr.a(esp_rom_efuse.c.obj)
                                         0x10 (size before relaxing)
 .literal.esp_reset_reason_get_hint
                0x0000000042000388        0x4 libzephyr.a(reset_reason.c.obj)
 .literal.esp_reset_reason_init
                0x000000004200038c        0xc libzephyr.a(reset_reason.c.obj)
                                         0x14 (size before relaxing)
 .literal.esp_timer_early_init
                0x0000000042000398        0x0 libzephyr.a(esp_timer.c.obj)
                                          0x4 (size before relaxing)
 .literal.esp_timer_impl_early_init
                0x0000000042000398       0x1c libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x20 (size before relaxing)
 .literal.clk_hal_lp_slow_get_freq_hz
                0x00000000420003b4        0x4 libzephyr.a(clk_tree_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.clk_hal_xtal_get_freq_mhz
                0x00000000420003b8       0x10 libzephyr.a(clk_tree_hal.c.obj)
                                         0x18 (size before relaxing)
 .literal.clk_hal_soc_root_get_freq_mhz
                0x00000000420003c8        0x0 libzephyr.a(clk_tree_hal.c.obj)
                                          0x8 (size before relaxing)
 .literal.clk_hal_cpu_get_freq_hz
                0x00000000420003c8        0x8 libzephyr.a(clk_tree_hal.c.obj)
                                         0x20 (size before relaxing)
 .literal.clk_hal_ahb_get_freq_hz
                0x00000000420003d0        0x0 libzephyr.a(clk_tree_hal.c.obj)
                                          0xc (size before relaxing)
 .literal.clk_hal_apb_get_freq_hz
                0x00000000420003d0        0x0 libzephyr.a(clk_tree_hal.c.obj)
                                          0x4 (size before relaxing)
 .literal.heap_bubble_down
                0x00000000420003d0        0x4 libzephyr.a(log.c.obj)
 .literal.s_log_level_get_and_unlock
                0x00000000420003d4       0x18 libzephyr.a(log.c.obj)
                                         0x2c (size before relaxing)
 .literal.esp_log_writev
                0x00000000420003ec        0x8 libzephyr.a(log.c.obj)
                                          0xc (size before relaxing)
 .literal.heap_caps_alloc_failed
                0x00000000420003f4        0x4 libzephyr.a(heap_caps_zephyr.c.obj)
 .literal.heap_caps_calloc
                0x00000000420003f8        0x8 libzephyr.a(heap_caps_zephyr.c.obj)
                                          0xc (size before relaxing)
 .literal.z_isr_install
                0x0000000042000400        0x4 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x8 (size before relaxing)
 .literal.arch_irq_connect_dynamic
                0x0000000042000404        0x0 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                          0x4 (size before relaxing)
 .literal.z_impl_zephyr_fputc
                0x0000000042000404        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.picolibc_put
                0x0000000042000408        0x0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x4 (size before relaxing)
 .literal.__stdout_hook_install
                0x0000000042000408        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                          0x8 (size before relaxing)
 .literal.z_errno_wrap
                0x000000004200040c        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .literal.abort
                0x0000000042000410        0x8 lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                          0xc (size before relaxing)
 .literal.malloc_prepare
                0x0000000042000418        0x8 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.malloc_lock
                0x0000000042000420        0x4 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                          0x8 (size before relaxing)
 .literal.malloc_unlock
                0x0000000042000424        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                          0x8 (size before relaxing)
 .literal.malloc
                0x0000000042000424        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x14 (size before relaxing)
 .literal.free  0x0000000042000424        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x10 (size before relaxing)
 .literal.adc_esp32_read
                0x0000000042000424        0x4 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.adc_esp32_channel_setup
                0x0000000042000428        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.adc_esp32_init
                0x0000000042000428        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.clock_control_esp32_get_status
                0x0000000042000428        0x8 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.esp32_select_rtc_slow_clk
                0x0000000042000430       0x10 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .literal.esp32_cpu_clock_configure
                0x0000000042000440       0x28 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x48 (size before relaxing)
 .literal.clock_control_esp32_off
                0x0000000042000468        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.clock_control_esp32_on
                0x0000000042000468        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_configure
                0x0000000042000468        0x8 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x14 (size before relaxing)
 .literal.clock_control_esp32_get_rate
                0x0000000042000470        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.clock_control_esp32_init
                0x0000000042000470       0x28 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x54 (size before relaxing)
 .literal.uart_console_init
                0x0000000042000498        0x8 drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x14 (size before relaxing)
 .literal.gpio_esp32_port_get_raw
                0x00000000420004a0        0x4 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_port_set_masked_raw
                0x00000000420004a4        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_set_bits_raw
                0x00000000420004a4        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_clear_bits_raw
                0x00000000420004a4        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_port_toggle_bits
                0x00000000420004a4        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_pin_interrupt_configure
                0x00000000420004a4        0x8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0xc (size before relaxing)
 .literal.gpio_esp32_get_pending_int
                0x00000000420004ac        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.gpio_esp32_init
                0x00000000420004ac        0xc drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .literal.gpio_esp32_config
                0x00000000420004b8       0x1c drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x40 (size before relaxing)
 .literal.pinctrl_configure_pins
                0x00000000420004d4       0x10 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                         0x50 (size before relaxing)
 .literal.pwm_led_esp32_init
                0x00000000420004e4        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.pwm_led_esp32_get_cycles_per_sec
                0x00000000420004e4        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                          0x8 (size before relaxing)
 .literal.pwm_led_esp32_set_cycles
                0x00000000420004e4       0x48 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                         0x84 (size before relaxing)
 .literal.uart_esp32_config_get
                0x000000004200052c        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x20 (size before relaxing)
 .literal.uart_esp32_poll_out
                0x000000004200052c        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_poll_in
                0x000000004200052c        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.uart_esp32_configure
                0x000000004200052c        0xc drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x50 (size before relaxing)
 .literal.uart_esp32_init
                0x0000000042000538        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                          0x4 (size before relaxing)
 .literal.__l_vfprintf
                0x0000000042000538       0x14 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                         0x18 (size before relaxing)
 .literal.vprintf
                0x000000004200054c        0x4 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                                          0x8 (size before relaxing)
 .text.pwm_set$constprop$0
                0x0000000042000550       0x84 ../app/libapp.a(main.c.obj)
 .text.main     0x00000000420005d4      0x119 ../app/libapp.a(main.c.obj)
                                        0x11d (size before relaxing)
                0x00000000420005d4                main
 *fill*         0x00000000420006ed        0x3 
 .text.chunk_field
                0x00000000420006f0       0x20 libzephyr.a(heap.c.obj)
 .text.chunk_set
                0x0000000042000710       0x20 libzephyr.a(heap.c.obj)
 .text.chunk_size
                0x0000000042000730       0x11 libzephyr.a(heap.c.obj)
                                         0x15 (size before relaxing)
 *fill*         0x0000000042000741        0x3 
 .text.set_chunk_used
                0x0000000042000744       0x3b libzephyr.a(heap.c.obj)
 *fill*         0x000000004200077f        0x1 
 .text.set_chunk_size
                0x0000000042000780       0x13 libzephyr.a(heap.c.obj)
 *fill*         0x0000000042000793        0x1 
 .text.mem_to_chunkid
                0x0000000042000794       0x1b libzephyr.a(heap.c.obj)
 *fill*         0x00000000420007af        0x1 
 .text.bucket_idx$isra$0
                0x00000000420007b0       0x21 libzephyr.a(heap.c.obj)
 *fill*         0x00000000420007d1        0x3 
 .text.free_list_remove_bidx
                0x00000000420007d4       0x56 libzephyr.a(heap.c.obj)
                                         0x62 (size before relaxing)
 *fill*         0x000000004200082a        0x2 
 .text.free_list_remove
                0x000000004200082c       0x28 libzephyr.a(heap.c.obj)
                                         0x30 (size before relaxing)
 .text.alloc_chunk
                0x0000000042000854       0x74 libzephyr.a(heap.c.obj)
                                         0x7c (size before relaxing)
 .text.split_chunks
                0x00000000420008c8       0x46 libzephyr.a(heap.c.obj)
                                         0x56 (size before relaxing)
 *fill*         0x000000004200090e        0x2 
 .text.merge_chunks
                0x0000000042000910       0x32 libzephyr.a(heap.c.obj)
                                         0x42 (size before relaxing)
 *fill*         0x0000000042000942        0x2 
 .text.free_list_add
                0x0000000042000944       0x88 libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.free_chunk
                0x00000000420009cc       0x78 libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .text.sys_heap_free
                0x0000000042000a44       0x24 libzephyr.a(heap.c.obj)
                                         0x2c (size before relaxing)
                0x0000000042000a44                sys_heap_free
 .text.sys_heap_alloc
                0x0000000042000a68       0x72 libzephyr.a(heap.c.obj)
                                         0x7e (size before relaxing)
                0x0000000042000a68                sys_heap_alloc
 *fill*         0x0000000042000ada        0x2 
 .text.sys_heap_aligned_alloc
                0x0000000042000adc       0xe6 libzephyr.a(heap.c.obj)
                                         0xfe (size before relaxing)
                0x0000000042000adc                sys_heap_aligned_alloc
 *fill*         0x0000000042000bc2        0x2 
 .text.sys_heap_init
                0x0000000042000bc4       0xac libzephyr.a(heap.c.obj)
                                         0xc8 (size before relaxing)
                0x0000000042000bc4                sys_heap_init
 .text.__printk_hook_install
                0x0000000042000c70        0xa libzephyr.a(printk.c.obj)
                0x0000000042000c70                __printk_hook_install
 *fill*         0x0000000042000c7a        0x2 
 .text.z_thread_entry
                0x0000000042000c7c       0x18 libzephyr.a(thread_entry.c.obj)
                0x0000000042000c7c                z_thread_entry
 .text.esp_heap_runtime_init
                0x0000000042000c94       0x3e libzephyr.a(esp_heap_runtime.c.obj)
 *fill*         0x0000000042000cd2        0x2 
 .text.spi_flash_mmap
                0x0000000042000cd4       0x8c libzephyr.a(flash_mmap.c.obj)
                                         0x90 (size before relaxing)
                0x0000000042000cd4                spi_flash_mmap
 .text.spi_flash_munmap
                0x0000000042000d60       0x37 libzephyr.a(flash_mmap.c.obj)
                                         0x3a (size before relaxing)
                0x0000000042000d60                spi_flash_munmap
 *fill*         0x0000000042000d97        0x1 
 .text.esp_mspi_get_io
                0x0000000042000d98       0x63 libzephyr.a(flash_ops.c.obj)
                0x0000000042000d98                esp_mspi_get_io
 *fill*         0x0000000042000dfb        0x1 
 .text.esp_flash_app_enable_os_functions
                0x0000000042000dfc       0x1f libzephyr.a(spi_flash_os_func_app.c.obj)
                0x0000000042000dfc                esp_flash_app_enable_os_functions
 *fill*         0x0000000042000e1b        0x1 
 .text.uart_hal_set_hw_flow_ctrl
                0x0000000042000e1c       0x65 libzephyr.a(uart_hal.c.obj)
                0x0000000042000e1c                uart_hal_set_hw_flow_ctrl
 *fill*         0x0000000042000e81        0x3 
 .text.uart_hal_set_txfifo_empty_thr
                0x0000000042000e84       0x20 libzephyr.a(uart_hal.c.obj)
                0x0000000042000e84                uart_hal_set_txfifo_empty_thr
 .text.uart_hal_set_mode
                0x0000000042000ea4      0x19b libzephyr.a(uart_hal.c.obj)
                0x0000000042000ea4                uart_hal_set_mode
 *fill*         0x000000004200103f        0x1 
 .text.uart_hal_inverse_signal
                0x0000000042001040       0x87 libzephyr.a(uart_hal.c.obj)
                0x0000000042001040                uart_hal_inverse_signal
 *fill*         0x00000000420010c7        0x1 
 .text.uart_hal_set_rx_timeout
                0x00000000420010c8       0x52 libzephyr.a(uart_hal.c.obj)
                                         0x56 (size before relaxing)
                0x00000000420010c8                uart_hal_set_rx_timeout
 *fill*         0x000000004200111a        0x2 
 .text.uart_hal_rxfifo_rst
                0x000000004200111c       0x29 libzephyr.a(uart_hal_iram.c.obj)
                0x000000004200111c                uart_hal_rxfifo_rst
 *fill*         0x0000000042001145        0x3 
 .text.ledc_hal_init
                0x0000000042001148        0xc libzephyr.a(ledc_hal.c.obj)
                0x0000000042001148                ledc_hal_init
 .text.read_cal_channel
                0x0000000042001154       0xbe libzephyr.a(adc_hal_common.c.obj)
 *fill*         0x0000000042001212        0x2 
 .text.adc_hal_set_controller
                0x0000000042001214       0xf0 libzephyr.a(adc_hal_common.c.obj)
                0x0000000042001214                adc_hal_set_controller
 .text.adc_hal_arbiter_config
                0x0000000042001304      0x13f libzephyr.a(adc_hal_common.c.obj)
                0x0000000042001304                adc_hal_arbiter_config
 *fill*         0x0000000042001443        0x1 
 .text.adc_hal_calibration_init
                0x0000000042001444       0x1e libzephyr.a(adc_hal_common.c.obj)
                0x0000000042001444                adc_hal_calibration_init
 *fill*         0x0000000042001462        0x2 
 .text.adc_hal_set_calibration_param
                0x0000000042001464       0x60 libzephyr.a(adc_hal_common.c.obj)
                0x0000000042001464                adc_hal_set_calibration_param
 .text.adc_hal_self_calibration
                0x00000000420014c4      0x28d libzephyr.a(adc_hal_common.c.obj)
                                        0x295 (size before relaxing)
                0x00000000420014c4                adc_hal_self_calibration
 *fill*         0x0000000042001751        0x3 
 .text.adc_common_gpio_init
                0x0000000042001754       0xf0 libzephyr.a(adc_legacy.c.obj)
                                         0xf8 (size before relaxing)
                0x0000000042001754                adc_common_gpio_init
 .text.adc_set_data_width
                0x0000000042001844       0x4f libzephyr.a(adc_legacy.c.obj)
                0x0000000042001844                adc_set_data_width
 *fill*         0x0000000042001893        0x1 
 .text.adc1_config_channel_atten
                0x0000000042001894       0xd0 libzephyr.a(adc_legacy.c.obj)
                                         0xd4 (size before relaxing)
                0x0000000042001894                adc1_config_channel_atten
 .text.adc1_rtc_mode_acquire
                0x0000000042001964       0x5d libzephyr.a(adc_legacy.c.obj)
                                         0x61 (size before relaxing)
                0x0000000042001964                adc1_rtc_mode_acquire
 *fill*         0x00000000420019c1        0x3 
 .text.adc1_lock_release
                0x00000000420019c4       0x46 libzephyr.a(adc_legacy.c.obj)
                0x00000000420019c4                adc1_lock_release
 *fill*         0x0000000042001a0a        0x2 
 .text.adc1_get_raw
                0x0000000042001a0c      0x142 libzephyr.a(adc_legacy.c.obj)
                                        0x146 (size before relaxing)
                0x0000000042001a0c                adc1_get_raw
 *fill*         0x0000000042001b4e        0x2 
 .text.adc2_config_channel_atten
                0x0000000042001b50       0xe8 libzephyr.a(adc_legacy.c.obj)
                                         0xec (size before relaxing)
                0x0000000042001b50                adc2_config_channel_atten
 .text.adc2_get_raw
                0x0000000042001c38      0x158 libzephyr.a(adc_legacy.c.obj)
                                        0x164 (size before relaxing)
                0x0000000042001c38                adc2_get_raw
 .text.adc_calc_hw_calibration_code
                0x0000000042001d90       0x6f libzephyr.a(adc_share_hw_ctrl.c.obj)
                                         0x7b (size before relaxing)
                0x0000000042001d90                adc_calc_hw_calibration_code
 *fill*         0x0000000042001dff        0x1 
 .text.esp_adc_cal_check_efuse
                0x0000000042001e00       0x1d libzephyr.a(esp_adc_cal_legacy.c.obj)
                                         0x20 (size before relaxing)
                0x0000000042001e00                esp_adc_cal_check_efuse
 *fill*         0x0000000042001e1d        0x3 
 .text.esp_adc_cal_characterize
                0x0000000042001e20       0xd1 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                         0xd5 (size before relaxing)
                0x0000000042001e20                esp_adc_cal_characterize
 *fill*         0x0000000042001ef1        0x3 
 .text.esp_adc_cal_raw_to_voltage
                0x0000000042001ef4       0x5d libzephyr.a(esp_adc_cal_legacy.c.obj)
                0x0000000042001ef4                esp_adc_cal_raw_to_voltage
 *fill*         0x0000000042001f51        0x3 
 .text.esp_adc_cal_get_reading_error
                0x0000000042001f54       0xea libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                                         0xf2 (size before relaxing)
                0x0000000042001f54                esp_adc_cal_get_reading_error
 *fill*         0x000000004200203e        0x2 
 .text.rtcio_ll_input_enable
                0x0000000042002040       0x1f libzephyr.a(rtc_io_hal.c.obj)
 *fill*         0x000000004200205f        0x1 
 .text.rtcio_ll_input_disable
                0x0000000042002060       0x24 libzephyr.a(rtc_io_hal.c.obj)
 .text.rtcio_hal_set_direction
                0x0000000042002084       0xef libzephyr.a(rtc_io_hal.c.obj)
                0x0000000042002084                rtcio_hal_set_direction
 *fill*         0x0000000042002173        0x1 
 .text.rtc_gpio_is_valid_gpio
                0x0000000042002174       0x1e libzephyr.a(rtc_io.c.obj)
                0x0000000042002174                rtc_gpio_is_valid_gpio
 *fill*         0x0000000042002192        0x2 
 .text.rtc_gpio_init
                0x0000000042002194       0xb9 libzephyr.a(rtc_io.c.obj)
                                         0xbd (size before relaxing)
                0x0000000042002194                rtc_gpio_init
 *fill*         0x000000004200224d        0x3 
 .text.rtc_gpio_set_direction
                0x0000000042002250       0x54 libzephyr.a(rtc_io.c.obj)
                                         0x58 (size before relaxing)
                0x0000000042002250                rtc_gpio_set_direction
 .text.rtc_gpio_pullup_dis
                0x00000000420022a4       0x99 libzephyr.a(rtc_io.c.obj)
                                         0x9d (size before relaxing)
                0x00000000420022a4                rtc_gpio_pullup_dis
 *fill*         0x000000004200233d        0x3 
 .text.rtc_gpio_pulldown_dis
                0x0000000042002340       0x70 libzephyr.a(rtc_io.c.obj)
                                         0x74 (size before relaxing)
                0x0000000042002340                rtc_gpio_pulldown_dis
 .text.esp_efuse_rtc_calib_get_ver
                0x00000000420023b0       0x5a libzephyr.a(esp_efuse_rtc_calib.c.obj)
                0x00000000420023b0                esp_efuse_rtc_calib_get_ver
 *fill*         0x000000004200240a        0x2 
 .text.esp_efuse_rtc_calib_get_init_code
                0x000000004200240c       0xa3 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0xa7 (size before relaxing)
                0x000000004200240c                esp_efuse_rtc_calib_get_init_code
 *fill*         0x00000000420024af        0x1 
 .text.esp_efuse_rtc_calib_get_cal_voltage
                0x00000000420024b0       0xd6 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0xda (size before relaxing)
                0x00000000420024b0                esp_efuse_rtc_calib_get_cal_voltage
 *fill*         0x0000000042002586        0x2 
 .text.esp_cpu_intr_get_desc
                0x0000000042002588       0x25 libzephyr.a(cpu.c.obj)
                                         0x28 (size before relaxing)
                0x0000000042002588                esp_cpu_intr_get_desc
 *fill*         0x00000000420025ad        0x3 
 .text.esp_clk_slowclk_cal_set
                0x00000000420025b0        0xd libzephyr.a(esp_clk.c.obj)
                0x00000000420025b0                esp_clk_slowclk_cal_set
 *fill*         0x00000000420025bd        0x3 
 .text.periph_ll_get_rst_en_mask
                0x00000000420025c0       0xd5 libzephyr.a(periph_ctrl.c.obj)
 *fill*         0x0000000042002695        0x3 
 .text.periph_module_enable
                0x0000000042002698       0x9b libzephyr.a(periph_ctrl.c.obj)
                                         0x9f (size before relaxing)
                0x0000000042002698                periph_module_enable
 *fill*         0x0000000042002733        0x1 
 .text.periph_module_disable
                0x0000000042002734       0xa8 libzephyr.a(periph_ctrl.c.obj)
                0x0000000042002734                periph_module_disable
 .text.esp_clk_tree_rc_fast_d256_get_freq_hz
                0x00000000420027dc       0x4c libzephyr.a(esp_clk_tree_common.c.obj)
                0x00000000420027dc                esp_clk_tree_rc_fast_d256_get_freq_hz
 .text.esp_clk_tree_xtal32k_get_freq_hz
                0x0000000042002828       0x4c libzephyr.a(esp_clk_tree_common.c.obj)
                0x0000000042002828                esp_clk_tree_xtal32k_get_freq_hz
 .text.esp_clk_tree_lp_slow_get_freq_hz
                0x0000000042002874       0x44 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x48 (size before relaxing)
                0x0000000042002874                esp_clk_tree_lp_slow_get_freq_hz
 .text.esp_clk_tree_rc_fast_get_freq_hz
                0x00000000420028b8       0x13 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x16 (size before relaxing)
                0x00000000420028b8                esp_clk_tree_rc_fast_get_freq_hz
 *fill*         0x00000000420028cb        0x1 
 .text.esp_clk_tree_lp_fast_get_freq_hz
                0x00000000420028cc       0x37 libzephyr.a(esp_clk_tree_common.c.obj)
                0x00000000420028cc                esp_clk_tree_lp_fast_get_freq_hz
 *fill*         0x0000000042002903        0x1 
 .text.esp_clk_tree_src_get_freq_hz
                0x0000000042002904      0x11c libzephyr.a(esp_clk_tree.c.obj)
                                        0x128 (size before relaxing)
                0x0000000042002904                esp_clk_tree_src_get_freq_hz
 .text.get_rtc_dbias_by_efuse$constprop$0
                0x0000000042002a20       0xb4 libzephyr.a(rtc_init.c.obj)
 .text.rtc_init
                0x0000000042002ad4      0x6f6 libzephyr.a(rtc_init.c.obj)
                                        0x702 (size before relaxing)
                0x0000000042002ad4                rtc_init
 *fill*         0x00000000420031ca        0x2 
 .text.s_sar_power_acquire
                0x00000000420031cc       0x41 libzephyr.a(sar_periph_ctrl.c.obj)
 *fill*         0x000000004200320d        0x3 
 .text.s_sar_power_release
                0x0000000042003210       0x68 libzephyr.a(sar_periph_ctrl.c.obj)
                                         0x6c (size before relaxing)
 .text.sar_periph_ctrl_init
                0x0000000042003278       0x2c libzephyr.a(sar_periph_ctrl.c.obj)
                0x0000000042003278                sar_periph_ctrl_init
 .text.sar_periph_ctrl_adc_oneshot_power_acquire
                0x00000000420032a4        0x8 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0xb (size before relaxing)
                0x00000000420032a4                sar_periph_ctrl_adc_oneshot_power_acquire
 *fill*         0x00000000420032ac        0x0 
 .text.sar_periph_ctrl_adc_oneshot_power_release
                0x00000000420032ac        0x8 libzephyr.a(sar_periph_ctrl.c.obj)
                                          0xb (size before relaxing)
                0x00000000420032ac                sar_periph_ctrl_adc_oneshot_power_release
 *fill*         0x00000000420032b4        0x0 
 .text.esp_rom_efuse_get_opiconfig
                0x00000000420032b4       0x46 libzephyr.a(esp_rom_efuse.c.obj)
                0x00000000420032b4                esp_rom_efuse_get_opiconfig
 *fill*         0x00000000420032fa        0x2 
 .text.esp_reset_reason_get_hint
                0x00000000420032fc       0x1c libzephyr.a(reset_reason.c.obj)
                0x00000000420032fc                esp_reset_reason_get_hint
 .text.esp_reset_reason_init
                0x0000000042003318       0x96 libzephyr.a(reset_reason.c.obj)
                                         0x9a (size before relaxing)
                0x0000000042003318                esp_reset_reason_init
 *fill*         0x00000000420033ae        0x2 
 .text.esp_timer_early_init
                0x00000000420033b0        0xa libzephyr.a(esp_timer.c.obj)
                                          0xd (size before relaxing)
                0x00000000420033b0                esp_timer_early_init
 *fill*         0x00000000420033ba        0x2 
 .text.esp_timer_impl_early_init
                0x00000000420033bc       0x4e libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x52 (size before relaxing)
                0x00000000420033bc                esp_timer_impl_early_init
 *fill*         0x000000004200340a        0x2 
 .text.clk_hal_lp_slow_get_freq_hz
                0x000000004200340c       0x24 libzephyr.a(clk_tree_hal.c.obj)
                0x000000004200340c                clk_hal_lp_slow_get_freq_hz
 .text.clk_hal_xtal_get_freq_mhz
                0x0000000042003430       0x40 libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042003430                clk_hal_xtal_get_freq_mhz
 .text.clk_hal_soc_root_get_freq_mhz
                0x0000000042003470       0x30 libzephyr.a(clk_tree_hal.c.obj)
                                         0x34 (size before relaxing)
                0x0000000042003470                clk_hal_soc_root_get_freq_mhz
 .text.clk_hal_cpu_get_freq_hz
                0x00000000420034a0       0x8e libzephyr.a(clk_tree_hal.c.obj)
                0x00000000420034a0                clk_hal_cpu_get_freq_hz
 *fill*         0x000000004200352e        0x2 
 .text.clk_hal_ahb_get_freq_hz
                0x0000000042003530       0x1e libzephyr.a(clk_tree_hal.c.obj)
                0x0000000042003530                clk_hal_ahb_get_freq_hz
 *fill*         0x000000004200354e        0x2 
 .text.clk_hal_apb_get_freq_hz
                0x0000000042003550        0xa libzephyr.a(clk_tree_hal.c.obj)
                                          0xd (size before relaxing)
                0x0000000042003550                clk_hal_apb_get_freq_hz
 *fill*         0x000000004200355a        0x2 
 .text.heap_bubble_down
                0x000000004200355c       0x49 libzephyr.a(log.c.obj)
 *fill*         0x00000000420035a5        0x3 
 .text.s_log_level_get_and_unlock
                0x00000000420035a8       0xed libzephyr.a(log.c.obj)
                                         0xf1 (size before relaxing)
 *fill*         0x0000000042003695        0x3 
 .text.esp_log_writev
                0x0000000042003698       0x2e libzephyr.a(log.c.obj)
                                         0x32 (size before relaxing)
                0x0000000042003698                esp_log_writev
 *fill*         0x00000000420036c6        0x2 
 .text.heap_caps_alloc_failed
                0x00000000420036c8       0x16 libzephyr.a(heap_caps_zephyr.c.obj)
 *fill*         0x00000000420036de        0x2 
 .text.heap_caps_calloc
                0x00000000420036e0       0x2e libzephyr.a(heap_caps_zephyr.c.obj)
                0x00000000420036e0                heap_caps_calloc
 *fill*         0x000000004200370e        0x2 
 .text.z_isr_install
                0x0000000042003710       0x14 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x18 (size before relaxing)
                0x0000000042003710                z_isr_install
 .text.arch_irq_connect_dynamic
                0x0000000042003724        0xe arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x12 (size before relaxing)
                0x0000000042003724                arch_irq_connect_dynamic
 *fill*         0x0000000042003732        0x2 
 .text.z_impl_zephyr_fputc
                0x0000000042003734       0x12 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000042003734                z_impl_zephyr_fputc
 *fill*         0x0000000042003746        0x2 
 .text.picolibc_put
                0x0000000042003748       0x12 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 *fill*         0x000000004200375a        0x2 
 .text.__stdout_hook_install
                0x000000004200375c       0x18 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x000000004200375c                __stdout_hook_install
 .text.z_errno_wrap
                0x0000000042003774        0xd lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x0000000042003774                z_errno_wrap
 *fill*         0x0000000042003781        0x3 
 .text.abort    0x0000000042003784       0x14 lib/libc/common/liblib__libc__common.a(abort.c.obj)
                0x0000000042003784                abort
 .text.malloc_prepare
                0x0000000042003798       0x21 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x00000000420037b9        0x3 
 .text.malloc_lock
                0x00000000420037bc       0x12 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x00000000420037ce        0x2 
 .text.malloc_unlock
                0x00000000420037d0        0xe lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 *fill*         0x00000000420037de        0x2 
 .text.malloc   0x00000000420037e0       0x25 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x30 (size before relaxing)
                0x00000000420037e0                malloc
 *fill*         0x0000000042003805        0x3 
 .text.free     0x0000000042003808       0x14 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x1c (size before relaxing)
                0x0000000042003808                free
 .text.adc_esp32_read
                0x000000004200381c       0xee drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0xf2 (size before relaxing)
 *fill*         0x000000004200390a        0x2 
 .text.adc_esp32_channel_setup
                0x000000004200390c       0xb2 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0xbe (size before relaxing)
 *fill*         0x00000000420039be        0x2 
 .text.adc_esp32_init
                0x00000000420039c0       0x51 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0x59 (size before relaxing)
 *fill*         0x0000000042003a11        0x3 
 .text.clock_control_esp32_get_status
                0x0000000042003a14       0x41 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x0000000042003a55        0x3 
 .text.esp32_select_rtc_slow_clk
                0x0000000042003a58       0x75 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x79 (size before relaxing)
 *fill*         0x0000000042003acd        0x3 
 .text.esp32_cpu_clock_configure
                0x0000000042003ad0       0xf4 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .text.clock_control_esp32_off
                0x0000000042003bc4       0x18 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x1c (size before relaxing)
 .text.clock_control_esp32_on
                0x0000000042003bdc       0x32 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x36 (size before relaxing)
 *fill*         0x0000000042003c0e        0x2 
 .text.clock_control_esp32_configure
                0x0000000042003c10       0x61 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *fill*         0x0000000042003c71        0x3 
 .text.clock_control_esp32_get_rate
                0x0000000042003c74       0x2a drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x32 (size before relaxing)
 *fill*         0x0000000042003c9e        0x2 
 .text.clock_control_esp32_init
                0x0000000042003ca0      0x176 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x17e (size before relaxing)
 *fill*         0x0000000042003e16        0x2 
 .text.uart_console_init
                0x0000000042003e18       0x24 drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x28 (size before relaxing)
 .text.gpio_esp32_port_get_raw
                0x0000000042003e3c       0x26 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042003e62        0x2 
 .text.gpio_esp32_port_set_masked_raw
                0x0000000042003e64       0x5a drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042003ebe        0x2 
 .text.gpio_esp32_port_set_bits_raw
                0x0000000042003ec0       0x33 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042003ef3        0x1 
 .text.gpio_esp32_port_clear_bits_raw
                0x0000000042003ef4       0x33 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042003f27        0x1 
 .text.gpio_esp32_port_toggle_bits
                0x0000000042003f28       0x50 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_pin_interrupt_configure
                0x0000000042003f78       0xfc drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_get_pending_int
                0x0000000042004074       0x26 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x000000004200409a        0x2 
 .text.gpio_esp32_init
                0x000000004200409c       0x30 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.gpio_esp32_config
                0x00000000420040cc      0x2f0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .text.pinctrl_configure_pins
                0x00000000420043bc      0x3e2 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                0x00000000420043bc                pinctrl_configure_pins
 *fill*         0x000000004200479e        0x2 
 .text.pwm_led_esp32_init
                0x00000000420047a0       0x20 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                0x00000000420047a0                pwm_led_esp32_init
 .text.pwm_led_esp32_get_cycles_per_sec
                0x00000000420047c0       0x3d drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 *fill*         0x00000000420047fd        0x3 
 .text.pwm_led_esp32_set_cycles
                0x0000000042004800      0x300 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                        0x314 (size before relaxing)
 .text.uart_esp32_config_get
                0x0000000042004b00       0xae drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0xbe (size before relaxing)
 *fill*         0x0000000042004bae        0x2 
 .text.uart_esp32_poll_out
                0x0000000042004bb0       0x28 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.uart_esp32_poll_in
                0x0000000042004bd8       0x24 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .text.uart_esp32_configure
                0x0000000042004bfc      0x196 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x1ce (size before relaxing)
 *fill*         0x0000000042004d92        0x2 
 .text.uart_esp32_init
                0x0000000042004d94       0x14 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .text.__l_vfprintf
                0x0000000042004da8      0x5ba /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                0x0000000042004da8                __l_vfprintf
 *fill*         0x0000000042005362        0x2 
 .text.vprintf  0x0000000042005364       0x1a /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
                0x0000000042005364                vprintf
 *fill*         0x000000004200537e        0x2 
 .text._OffsetAbsSyms
                0x0000000042005380        0x5 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
                0x0000000042005380                _OffsetAbsSyms
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x0 
 *fill*         0x0000000042005385        0x3 
 .text._ConfigAbsSyms
                0x0000000042005388        0x5 libzephyr.a(configs.c.obj)
                0x0000000042005388                _ConfigAbsSyms
 *fill*         0x000000004200538d        0x0 
 *fill*         0x000000004200538d        0x3 
 .text.sys_trace_idle
                0x0000000042005390        0x5 libzephyr.a(tracing_none.c.obj)
                0x0000000042005390                sys_trace_idle
 *fill*         0x0000000042005395        0x0 
 *fill*         0x0000000042005395        0x0 
 *fill*         0x0000000042005395        0x0 
 *fill*         0x0000000042005395        0x3 
 .text.uart_hal_get_sclk
                0x0000000042005398       0x21 libzephyr.a(uart_hal.c.obj)
                0x0000000042005398                uart_hal_get_sclk
 *fill*         0x00000000420053b9        0x3 
 .text.uart_hal_get_baudrate
                0x00000000420053bc       0x38 libzephyr.a(uart_hal.c.obj)
                0x00000000420053bc                uart_hal_get_baudrate
 .text.uart_hal_set_stop_bits
                0x00000000420053f4       0x20 libzephyr.a(uart_hal.c.obj)
                0x00000000420053f4                uart_hal_set_stop_bits
 .text.uart_hal_get_stop_bits
                0x0000000042005414       0x11 libzephyr.a(uart_hal.c.obj)
                0x0000000042005414                uart_hal_get_stop_bits
 *fill*         0x0000000042005425        0x3 
 .text.uart_hal_set_data_bit_num
                0x0000000042005428       0x1f libzephyr.a(uart_hal.c.obj)
                0x0000000042005428                uart_hal_set_data_bit_num
 *fill*         0x0000000042005447        0x1 
 .text.uart_hal_get_data_bit_num
                0x0000000042005448       0x11 libzephyr.a(uart_hal.c.obj)
                0x0000000042005448                uart_hal_get_data_bit_num
 *fill*         0x0000000042005459        0x3 
 .text.uart_hal_set_parity
                0x000000004200545c       0x35 libzephyr.a(uart_hal.c.obj)
                0x000000004200545c                uart_hal_set_parity
 *fill*         0x0000000042005491        0x3 
 .text.uart_hal_get_parity
                0x0000000042005494       0x20 libzephyr.a(uart_hal.c.obj)
                0x0000000042005494                uart_hal_get_parity
 *fill*         0x00000000420054b4        0x0 
 .text.uart_hal_get_hw_flow_ctrl
                0x00000000420054b4       0x24 libzephyr.a(uart_hal.c.obj)
                0x00000000420054b4                uart_hal_get_hw_flow_ctrl
 .text.uart_hal_set_rxfifo_full_thr
                0x00000000420054d8       0x1d libzephyr.a(uart_hal.c.obj)
                0x00000000420054d8                uart_hal_set_rxfifo_full_thr
 *fill*         0x00000000420054f5        0x0 
 *fill*         0x00000000420054f5        0x3 
 .text.uart_hal_is_mode_rs485_half_duplex
                0x00000000420054f8       0x1b libzephyr.a(uart_hal.c.obj)
                0x00000000420054f8                uart_hal_is_mode_rs485_half_duplex
 *fill*         0x0000000042005513        0x0 
 *fill*         0x0000000042005513        0x1 
 .text.uart_hal_get_symb_len
                0x0000000042005514       0x46 libzephyr.a(uart_hal.c.obj)
                0x0000000042005514                uart_hal_get_symb_len
 *fill*         0x000000004200555a        0x0 
 *fill*         0x000000004200555a        0x0 
 *fill*         0x000000004200555a        0x2 
 .text.uart_hal_write_txfifo
                0x000000004200555c       0x3a libzephyr.a(uart_hal_iram.c.obj)
                0x000000004200555c                uart_hal_write_txfifo
 *fill*         0x0000000042005596        0x2 
 .text.uart_hal_read_rxfifo
                0x0000000042005598       0x2e libzephyr.a(uart_hal_iram.c.obj)
                0x0000000042005598                uart_hal_read_rxfifo
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x0 
 *fill*         0x00000000420055c6        0x2 
 .text.spi_flash_init_lock
                0x00000000420055c8        0x5 libzephyr.a(cache_utils.c.obj)
                0x00000000420055c8                spi_flash_init_lock
 *fill*         0x00000000420055cd        0x0 
 *fill*         0x00000000420055cd        0x0 
 *fill*         0x00000000420055cd        0x3 
 .text.z_get_sw_isr_table_idx
                0x00000000420055d0        0x5 arch/common/libarch__common.a(sw_isr_common.c.obj)
                0x00000000420055d0                z_get_sw_isr_table_idx
 *fill*         0x00000000420055d5        0x0 
 *fill*         0x00000000420055d5        0x0 
 *fill*         0x00000000420055d5        0x0 
 *fill*         0x00000000420055d5        0x3 
 .text.__assert_no_args
                0x00000000420055d8        0x3 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x00000000420055d8                __assert_no_args
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x0 
 *fill*         0x00000000420055db        0x1 
 .text.gpio_esp32_manage_callback
                0x00000000420055dc       0x56 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 *fill*         0x0000000042005632        0x0 
 *fill*         0x0000000042005632        0x2 
 .text.pinctrl_lookup_state
                0x0000000042005634       0x2a drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                0x0000000042005634                pinctrl_lookup_state
 *fill*         0x000000004200565e        0x0 
 *fill*         0x000000004200565e        0x0 
 *fill*         0x000000004200565e        0x2 
 .text.uart_esp32_err_check
                0x0000000042005660       0x13 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 *fill*         0x0000000042005673        0x0 
 *fill*         0x0000000042005673        0x0 
 *fill*         0x0000000042005673        0x1 
 .text.__ultoa_invert
                0x0000000042005674      0x116 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *fill*         0x000000004200578a        0x0 
 *fill*         0x000000004200578a        0x0 
                0x000000004200579a                . = (. + 0x10)
 *fill*         0x000000004200578a       0x10 
                0x000000004200579a                _text_end = ABSOLUTE (.)
                0x000000004200579a                _instruction_reserved_end = ABSOLUTE (.)
                0x000000004200579a                __text_region_end = ABSOLUTE (.)
                0x000000004200579a                __rom_region_end = ABSOLUTE (.)
                0x000000004200579a                _etext = .

.flash.rodata_dummy
                0x000000003c000000    0x10000
                0x000000003c000000                _flash_rodata_dummy_start = ABSOLUTE (.)
                0x000000003c00579a                . = (. + SIZEOF (.flash.text))
 *fill*         0x000000003c000000     0x579a 
                0x000000003c010000                . = ALIGN (0x10000)
 *fill*         0x000000003c00579a     0xa866 
                0x0000000000020000                _image_drom_start = LOADADDR (.flash.rodata)
                0x0000000000001da0                _image_drom_size = ((LOADADDR (.flash.rodata_end) + SIZEOF (.flash.rodata_end)) - _image_drom_start)
                0x000000003c010000                _image_drom_vaddr = ADDR (.flash.rodata)

.flash.rodata   0x000000003c010000     0x1cc4 load address 0x0000000000020000
                0x000000003c010000                _flash_rodata_start = ABSOLUTE (.)
                0x000000003c010000                _rodata_reserved_start = ABSOLUTE (.)
                0x000000003c010000                _rodata_start = ABSOLUTE (.)
                0x000000003c010000                __rodata_region_start = ABSOLUTE (.)
                0x000000003c010000                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.irom1.text))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.r.*))
 *(SORT_BY_ALIGNMENT(.rodata))
 .rodata        0x000000003c010000        0x8 libzephyr.a(adc_legacy.c.obj)
 .rodata        0x000000003c010008       0x40 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata        0x000000003c010048        0x8 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .rodata        0x000000003c010050        0x4 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 *(SORT_BY_ALIGNMENT(.rodata.*))
 *fill*         0x000000003c010054        0x4 
 .rodata.adc2_error_coef_atten
                0x000000003c010058      0x140 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.adc1_error_coef_atten
                0x000000003c010198      0x140 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.adc_ch
                0x000000003c0102d8        0xc ../app/libapp.a(main.c.obj)
 .rodata.adc2_error_sign
                0x000000003c0102e4       0x50 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.adc1_error_sign
                0x000000003c010334       0x50 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.rtcio_hal_set_direction
                0x000000003c010384       0x18 libzephyr.a(rtc_io_hal.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN2
                0x000000003c01039c        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN1
                0x000000003c0103a0        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN0
                0x000000003c0103a4        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN3
                0x000000003c0103a8        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN2
                0x000000003c0103ac        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN1
                0x000000003c0103b0        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_CAL_VOL_ATTEN0
                0x000000003c0103b4        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN3
                0x000000003c0103b8        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN2
                0x000000003c0103bc        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN1
                0x000000003c0103c0        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_INIT_CODE_ATTEN0
                0x000000003c0103c4        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN3
                0x000000003c0103c8        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN2
                0x000000003c0103cc        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN1
                0x000000003c0103d0        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC1_INIT_CODE_ATTEN0
                0x000000003c0103d4        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.BLK_VERSION_MAJOR
                0x000000003c0103d8        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.ADC2_CAL_VOL_ATTEN3
                0x000000003c0103dc        0x4 libzephyr.a(esp_efuse_table.c.obj)
 .rodata.range_read_addr_blocks
                0x000000003c0103e0       0x58 libzephyr.a(esp_efuse_utility.c.obj)
                0x000000003c0103e0                range_read_addr_blocks
 .rodata.adc_channel_io_map
                0x000000003c010438       0x50 libzephyr.a(adc_periph.c.obj)
                0x000000003c010438                adc_channel_io_map
 .rodata.GPIO_PIN_MUX_REG
                0x000000003c010488       0xc4 libzephyr.a(gpio_periph.c.obj)
                0x000000003c010488                GPIO_PIN_MUX_REG
 .rodata.rtc_io_desc
                0x000000003c01054c      0x4d0 libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c01054c                rtc_io_desc
 .rodata.rtc_io_num_map
                0x000000003c010a1c       0xc4 libzephyr.a(rtc_io_periph.c.obj)
                0x000000003c010a1c                rtc_io_num_map
 .rodata.intr_desc_table
                0x000000003c010ae0      0x200 libzephyr.a(cpu.c.obj)
 .rodata.periph_ll_get_rst_en_mask
                0x000000003c010ce0       0xa0 libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$18
                0x000000003c010d80       0x90 libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$16
                0x000000003c010e10       0x90 libzephyr.a(periph_ctrl.c.obj)
 .rodata.CSWTCH$13
                0x000000003c010ea0       0xa0 libzephyr.a(periph_ctrl.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz
                0x000000003c010f40       0x2c libzephyr.a(esp_clk_tree.c.obj)
 .rodata.g_mmu_mem_regions
                0x000000003c010f6c       0x18 libzephyr.a(ext_mem_layout.c.obj)
                0x000000003c010f6c                g_mmu_mem_regions
 .rodata.esp_reset_reason_init
                0x000000003c010f84       0x20 libzephyr.a(reset_reason.c.obj)
 .rodata.stdout
                0x000000003c010fa4        0x4 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                0x000000003c010fa4                stderr
                0x000000003c010fa4                stdout
 .rodata.adc_esp32_conf_0
                0x000000003c010fa8        0x8 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .rodata.api_esp32_driver_api
                0x000000003c010fb0        0xc drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .rodata.CSWTCH$23
                0x000000003c010fbc       0x90 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.CSWTCH$21
                0x000000003c01104c       0xa0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.esp32_clock_config0
                0x000000003c0110ec       0x14 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.clock_control_esp32_api
                0x000000003c011100       0x1c drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.gpio_esp32_driver_api
                0x000000003c01111c       0x24 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.esp32_gpio_ports_addrs
                0x000000003c011140        0x8 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .rodata.__pinctrl_dev_config__device_dts_ord_22
                0x000000003c011148        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .rodata.__pinctrl_states__device_dts_ord_22
                0x000000003c011150        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .rodata.__pinctrl_state_pins_0__device_dts_ord_22
                0x000000003c011158        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .rodata.pwm_led_esp32_api
                0x000000003c011160        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .rodata.__l_vfprintf
                0x000000003c011168       0x90 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .rodata.main.str1.1
                0x000000003c0111f8       0xdf ../app/libapp.a(main.c.obj)
 .rodata.esp_heap_runtime_init.str1.1
                0x000000003c0112d7       0x44 libzephyr.a(esp_heap_runtime.c.obj)
 .rodata.s_mspi_io_num_default
                0x000000003c01131b        0xb libzephyr.a(flash_ops.c.obj)
 .rodata.adc1_pad_get_io_num.str1.1
                0x000000003c011326       0x28 libzephyr.a(adc_legacy.c.obj)
 .rodata.adc_common_gpio_init.str1.1
                0x000000003c01134e       0xb3 libzephyr.a(adc_legacy.c.obj)
 .rodata.adc_set_data_width.str1.1
                0x000000003c011401       0x2a libzephyr.a(adc_legacy.c.obj)
 .rodata.adc1_config_channel_atten.str1.1
                0x000000003c01142b       0x22 libzephyr.a(adc_legacy.c.obj)
 .rodata.adc1_lock_release.str1.1
                0x000000003c01144d       0x3c libzephyr.a(adc_legacy.c.obj)
 .rodata.adc2_config_channel_atten.str1.1
                0x000000003c011489       0x23 libzephyr.a(adc_legacy.c.obj)
 .rodata.adc2_get_raw.str1.1
                0x000000003c0114ac       0x4a libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$0
                0x000000003c0114f6        0xd libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$1
                0x000000003c011503       0x1a libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$2
                0x000000003c01151d        0xd libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$3
                0x000000003c01152a       0x12 libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$5
                0x000000003c01153c       0x1a libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$6
                0x000000003c011556       0x13 libzephyr.a(adc_legacy.c.obj)
 .rodata.__FUNCTION__$7
                0x000000003c011569       0x15 libzephyr.a(adc_legacy.c.obj)
 .rodata.esp_adc_cal_characterize.str1.1
                0x000000003c01157e       0xa6 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.__FUNCTION__$0
                0x000000003c011624       0x19 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.LOG_TAG
                0x000000003c01163d        0x9 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .rodata.rtc_gpio_init.str1.1
                0x000000003c011646       0x2d libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$5
                0x000000003c011673       0x16 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$7
                0x000000003c011689       0x14 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$10
                0x000000003c01169d       0x17 libzephyr.a(rtc_io.c.obj)
 .rodata.__FUNCTION__$16
                0x000000003c0116b4        0xe libzephyr.a(rtc_io.c.obj)
 .rodata.esp_efuse_utility_process.str1.1
                0x000000003c0116c2       0x41 libzephyr.a(esp_efuse_utility.c.obj)
 .rodata.esp_efuse_rtc_calib_get_ver.str1.1
                0x000000003c011703      0x118 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.esp_efuse_rtc_calib_get_init_code.str1.1
                0x000000003c01181b       0x5b libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.esp_efuse_rtc_calib_get_cal_voltage.str1.1
                0x000000003c011876       0x45 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.__func__$0
                0x000000003c0118bb       0x24 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.__func__$1
                0x000000003c0118df       0x22 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.__func__$2
                0x000000003c011901       0x1c libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .rodata.bootloader_common_check_chip_validity.str1.1
                0x000000003c01191d       0xc2 libzephyr.a(bootloader_common_loader.c.obj)
 .rodata.esp_clk_tree_src_get_freq_hz.str1.1
                0x000000003c0119df       0xb4 libzephyr.a(esp_clk_tree.c.obj)
 .rodata.__FUNCTION__$0
                0x000000003c011a93       0x1d libzephyr.a(esp_clk_tree.c.obj)
 .rodata.rtc_init.str1.1
                0x000000003c011ab0       0x2d libzephyr.a(rtc_init.c.obj)
 .rodata.s_sar_power_release.str1.1
                0x000000003c011add       0x43 libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.__func__$0
                0x000000003c011b20       0x14 libzephyr.a(sar_periph_ctrl.c.obj)
 .rodata.clk_hal_xtal_get_freq_mhz.str1.1
                0x000000003c011b34       0x42 libzephyr.a(clk_tree_hal.c.obj)
 .rodata.clk_hal_cpu_get_freq_hz.str1.1
                0x000000003c011b76       0x1f libzephyr.a(clk_tree_hal.c.obj)
 .rodata.__func__$1
                0x000000003c011b95       0x11 libzephyr.a(heap_caps_zephyr.c.obj)
 .rodata.abort.str1.1
                0x000000003c011ba6        0x9 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .rodata.str1.1
                0x000000003c011baf        0xd drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .rodata.str1.1
                0x000000003c011bbc        0xd drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .rodata.str1.1
                0x000000003c011bc9       0x1c drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .rodata.str1.1
                0x000000003c011be5        0xe drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .rodata.boot_banner.str1.1
                0x000000003c011bf3       0x45 kernel/libkernel.a(banner.c.obj)
 .rodata.__l_vfprintf.str1.1
                0x000000003c011c38        0xf /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 *(SORT_BY_ALIGNMENT(.rodata1))
                0x000000003c011c47                __XT_EXCEPTION_TABLE_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_table))
 *(SORT_BY_ALIGNMENT(.gcc_except_table) SORT_BY_ALIGNMENT(.gcc_except_table.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.e.*))
 *(SORT_BY_ALIGNMENT(.gnu.version_r))
                0x000000003c011c48                . = ((. + 0x3) & 0xfffffffffffffffc)
 *fill*         0x000000003c011c47        0x1 
                0x000000003c011c48                __eh_frame = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.eh_frame))
 .eh_frame      0x000000003c011c48       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .eh_frame      0x000000003c011c70       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .eh_frame      0x000000003c011c98       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                0x000000003c011cc4                . = ((. + 0x7) & 0xfffffffffffffffc)
 *fill*         0x000000003c011cc0        0x4 
                0x000000003c011cc4                __XT_EXCEPTION_DESCS_ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.h.*))
                0x000000003c011cc4                __XT_EXCEPTION_DESCS_END__ = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(.xt_except_desc_end))
 *(SORT_BY_ALIGNMENT(.dynamic))
 *(SORT_BY_ALIGNMENT(.gnu.version_d))
                0x000000003c011cc4                . = ALIGN (0x4)
                0x000000003c011cc4                __rodata_region_end = ABSOLUTE (.)
                0x000000003c011cc4                _lit4_start = ABSOLUTE (.)
 *(SORT_BY_ALIGNMENT(*.lit4))
 *(SORT_BY_ALIGNMENT(.lit4.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.lit4.*))
                0x000000003c011cc4                _lit4_end = ABSOLUTE (.)
                0x000000003c011cc4                . = ALIGN (0x4)
 *(SORT_BY_ALIGNMENT(.rodata_wlog))
 *(SORT_BY_ALIGNMENT(.rodata_wlog*))
                0x000000003c011cc4                . = ALIGN (0x4)

init_array      0x000000003c011cc4        0x0 load address 0x0000000000021cc4
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.ctors*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.init_array*)))
                0x0000000000000001                ASSERT ((SIZEOF (init_array) == 0x0), GNU-style constructors required but STATIC_INIT_GNU not enabled)

initlevel       0x000000003c011cc4       0x58 load address 0x0000000000021cc4
                0x000000003c011cc4                __init_start = .
                0x000000003c011cc4                __init_EARLY_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_EARLY??_*)))
                0x000000003c011cc4                __init_PRE_KERNEL_1_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_1??_*)))
 .z_init_PRE_KERNEL_130_00021_
                0x000000003c011cc4        0x8 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .z_init_PRE_KERNEL_130_0_
                0x000000003c011ccc        0x8 kernel/libkernel.a(kheap.c.obj)
 .z_init_PRE_KERNEL_140_00008_
                0x000000003c011cd4        0x8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_140_00098_
                0x000000003c011cdc        0x8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .z_init_PRE_KERNEL_150_00078_
                0x000000003c011ce4        0x8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .z_init_PRE_KERNEL_160_0_
                0x000000003c011cec        0x8 drivers/console/libdrivers__console.a(uart_console.c.obj)
                0x000000003c011cf4                __init_PRE_KERNEL_2_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2?_*)))
 .z_init_PRE_KERNEL_20_0_
                0x000000003c011cf4        0x8 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_PRE_KERNEL_2??_*)))
 .z_init_PRE_KERNEL_250_0_
                0x000000003c011cfc        0x8 libzephyr.a(esp_heap_runtime.c.obj)
                0x000000003c011d04                __init_POST_KERNEL_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_POST_KERNEL??_*)))
 .z_init_POST_KERNEL35_0_
                0x000000003c011d04        0x8 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .z_init_POST_KERNEL50_00022_
                0x000000003c011d0c        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .z_init_POST_KERNEL50_00085_
                0x000000003c011d14        0x8 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                0x000000003c011d1c                __init_APPLICATION_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_APPLICATION??_*)))
                0x000000003c011d1c                __init_SMP_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_SMP??_*)))
                0x000000003c011d1c                __init_end = .
                0x000000003c011d1c                __deferred_init_list_start = .
 *(SORT_BY_ALIGNMENT(.z_deferred_init*))
                0x000000003c011d1c                __deferred_init_list_end = .

device_area     0x000000003c011d1c       0x78 load address 0x0000000000021d1c
                0x000000003c011d1c                _device_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_?_*)))
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._device.static.*_??_*)))
 ._device.static.1_30_
                0x000000003c011d1c       0x14 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                0x000000003c011d1c                __device_dts_ord_21
 ._device.static.1_40_
                0x000000003c011d30       0x28 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                0x000000003c011d30                __device_dts_ord_98
                0x000000003c011d44                __device_dts_ord_8
 ._device.static.1_50_
                0x000000003c011d58       0x14 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                0x000000003c011d58                __device_dts_ord_78
 ._device.static.3_50_
                0x000000003c011d6c       0x14 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                0x000000003c011d6c                __device_dts_ord_85
 ._device.static.3_50_
                0x000000003c011d80       0x14 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                0x000000003c011d80                __device_dts_ord_22
                0x000000003c011d94                _device_list_end = .

initlevel_error
                0x000000003c011cc4        0x0
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.z_init_[_A-Z0-9]*)))
                0x0000000000000001                ASSERT ((SIZEOF (initlevel_error) == 0x0), Undefined initialization levels used.)

app_shmem_regions
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                __app_shmem_regions_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.app_regions.*)))
                0x000000003c011d94                __app_shmem_regions_end = .

k_p4wq_initparam_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _k_p4wq_initparam_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._k_p4wq_initparam.static.*)))
                0x000000003c011d94                _k_p4wq_initparam_list_end = .

_static_thread_data_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                __static_thread_data_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__static_thread_data.static.*)))
                0x000000003c011d94                __static_thread_data_list_end = .

device_deps     0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                __device_deps_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.__device_deps_pass2*)))
                0x000000003c011d94                __device_deps_end = .

ztest           0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _ztest_expected_result_entry_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_expected_result_entry.static.*)))
                0x000000003c011d94                _ztest_expected_result_entry_list_end = .
                0x000000003c011d94                _ztest_suite_node_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_suite_node.static.*)))
                0x000000003c011d94                _ztest_suite_node_list_end = .
                0x000000003c011d94                _ztest_unit_test_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_unit_test.static.*)))
                0x000000003c011d94                _ztest_unit_test_list_end = .
                0x000000003c011d94                _ztest_test_rule_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._ztest_test_rule.static.*)))
                0x000000003c011d94                _ztest_test_rule_list_end = .

bt_l2cap_fixed_chan_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _bt_l2cap_fixed_chan_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_l2cap_fixed_chan.static.*)))
                0x000000003c011d94                _bt_l2cap_fixed_chan_list_end = .

bt_gatt_service_static_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _bt_gatt_service_static_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._bt_gatt_service_static.static.*)))
                0x000000003c011d94                _bt_gatt_service_static_list_end = .

tracing_backend_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _tracing_backend_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._tracing_backend.static.*)))
                0x000000003c011d94                _tracing_backend_list_end = .

zephyr_dbg_info
 *(SORT_BY_ALIGNMENT(.dbg_thread_info))

symbol_to_keep  0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                __symbol_to_keep_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(.symbol_to_keep*)))
                0x000000003c011d94                __symbol_to_keep_end = .

shell_area      0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _shell_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell.static.*)))
                0x000000003c011d94                _shell_list_end = .

shell_root_cmds_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _shell_root_cmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_root_cmds.static.*)))
                0x000000003c011d94                _shell_root_cmds_list_end = .

shell_subcmds_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _shell_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_subcmds.static.*)))
                0x000000003c011d94                _shell_subcmds_list_end = .

shell_dynamic_subcmds_area
                0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _shell_dynamic_subcmds_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._shell_dynamic_subcmds.static.*)))
                0x000000003c011d94                _shell_dynamic_subcmds_list_end = .

cfb_font_area   0x000000003c011d94        0x0 load address 0x0000000000021d94
                0x000000003c011d94                _cfb_font_list_start = .
 *(SORT_BY_NAME(SORT_BY_ALIGNMENT(._cfb_font.static.*)))
                0x000000003c011d94                _cfb_font_list_end = .

.intList        0x000000003c011d94       0x18 load address 0x000000003ebfe010
 *(SORT_BY_ALIGNMENT(.irq_info*))
 .irq_info      0x000000003c011d94        0x8 arch/common/libisr_tables.a(isr_tables.c.obj)
                0x000000003c011d94                _iheader
 *(SORT_BY_ALIGNMENT(.intList*))
 .intList       0x000000003c011d9c       0x10 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)

.flash.rodata_end
                0x000000003c011db0        0x0 load address 0x0000000000021da0
                0x000000003c011db0                . = ALIGN (0x4)
                0x000000003c011db0                _rodata_reserved_end = ABSOLUTE (.)
                0x000000003c011db0                _image_rodata_end = ABSOLUTE (.)

.intList
 *(SORT_BY_ALIGNMENT(.irq_info*))
 *(SORT_BY_ALIGNMENT(.intList*))

.stab
 *(SORT_BY_ALIGNMENT(.stab))

.stabstr
 *(SORT_BY_ALIGNMENT(.stabstr))

.stab.excl
 *(SORT_BY_ALIGNMENT(.stab.excl))

.stab.exclstr
 *(SORT_BY_ALIGNMENT(.stab.exclstr))

.stab.index
 *(SORT_BY_ALIGNMENT(.stab.index))

.stab.indexstr
 *(SORT_BY_ALIGNMENT(.stab.indexstr))

.gnu.build.attributes
 *(SORT_BY_ALIGNMENT(.gnu.build.attributes) SORT_BY_ALIGNMENT(.gnu.build.attributes.*))

.comment        0x0000000000000000       0x20
 *(SORT_BY_ALIGNMENT(.comment))
 .comment       0x0000000000000000       0x20 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
                                         0x21 (size before relaxing)
 .comment       0x0000000000000020       0x21 ../app/libapp.a(main.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(heap.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(printk.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(thread_entry.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(configs.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_heap_runtime.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(soc.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(soc_cache.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(loader.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(tracing_none.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(flash_encrypt.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_gpio_reserve.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_flash_api.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_flash_spi_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(flash_mmap.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(flash_ops.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(memspi_host_driver.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_boya.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_gd.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_generic.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_issi.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_th.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(spi_flash_os_func_app.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(uart_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(uart_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(ledc_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(ledc_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(adc_hal_common.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(adc_legacy.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_io_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_io.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_efuse_api.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_efuse_table.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_efuse_utility.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(adc_periph.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_mem.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_clock_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_console.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(mpu_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_esp32s3.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_common_loader.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(flash_qio_mode.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(gpio_periph.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_io_periph.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_flash.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(bootloader_soc.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(cpu.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_clk.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(regi2c_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(mspi_timing_tuning.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_module.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_clk_tree_common.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(cpu_region_protect.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_clk_tree.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_clk.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_clk_init.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_time.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(rtc_sleep.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(sar_periph_ctrl.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(systimer.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(mspi_timing_config.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_mmu_map.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(ext_mem_layout.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_rom_sys.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_rom_uart.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_rom_efuse.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_err.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(reset_reason.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_timer.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(cache_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(mmu_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(systimer_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(wdt_hal_iram.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(clk_tree_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(efuse_hal.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(log_noos.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(log.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(cache_utils.c.obj)
 .comment       0x0000000000000020       0x21 libzephyr.a(heap_caps_zephyr.c.obj)
 .comment       0x0000000000000020       0x21 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .comment       0x0000000000000020       0x21 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .comment       0x0000000000000020       0x21 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .comment       0x0000000000000020       0x21 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .comment       0x0000000000000020       0x21 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .comment       0x0000000000000020       0x21 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .comment       0x0000000000000020       0x21 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .comment       0x0000000000000020       0x21 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .comment       0x0000000000000020       0x21 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .comment       0x0000000000000020       0x21 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(device.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(errno.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(fatal.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(init.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(init_static.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(kheap.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(idle.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(mutex.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(sem.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(thread.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(sched.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(timeslicing.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(timeout.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(mempool.c.obj)
 .comment       0x0000000000000020       0x21 kernel/libkernel.a(banner.c.obj)
 .comment       0x0000000000000020       0x21 arch/common/libisr_tables.a(isr_tables.c.obj)

.debug
 *(SORT_BY_ALIGNMENT(.debug))

.line
 *(SORT_BY_ALIGNMENT(.line))

.debug_srcinfo
 *(SORT_BY_ALIGNMENT(.debug_srcinfo))

.debug_sfnames
 *(SORT_BY_ALIGNMENT(.debug_sfnames))

.debug_aranges  0x0000000000000000     0x2da8
 *(SORT_BY_ALIGNMENT(.debug_aranges))
 .debug_aranges
                0x0000000000000000       0x20 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_aranges
                0x0000000000000020       0x70 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_aranges
                0x0000000000000090       0x20 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_aranges
                0x00000000000000b0       0x28 ../app/libapp.a(main.c.obj)
 .debug_aranges
                0x00000000000000d8       0xb8 libzephyr.a(heap.c.obj)
 .debug_aranges
                0x0000000000000190       0x50 libzephyr.a(printk.c.obj)
 .debug_aranges
                0x00000000000001e0       0x20 libzephyr.a(thread_entry.c.obj)
 .debug_aranges
                0x0000000000000200       0x20 libzephyr.a(configs.c.obj)
 .debug_aranges
                0x0000000000000220       0x40 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_aranges
                0x0000000000000260       0x30 libzephyr.a(soc.c.obj)
 .debug_aranges
                0x0000000000000290       0x28 libzephyr.a(soc_cache.c.obj)
 .debug_aranges
                0x00000000000002b8       0x28 libzephyr.a(loader.c.obj)
 .debug_aranges
                0x00000000000002e0       0x38 libzephyr.a(tracing_none.c.obj)
 .debug_aranges
                0x0000000000000318       0x48 libzephyr.a(flash_encrypt.c.obj)
 .debug_aranges
                0x0000000000000360       0x28 libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_aranges
                0x0000000000000388       0x48 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_aranges
                0x00000000000003d0       0x38 libzephyr.a(spi_flash_hal.c.obj)
 .debug_aranges
                0x0000000000000408       0xb8 libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_aranges
                0x00000000000004c0       0x60 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_aranges
                0x0000000000000520       0x40 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_aranges
                0x0000000000000560      0x110 libzephyr.a(esp_flash_api.c.obj)
 .debug_aranges
                0x0000000000000670       0x40 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_aranges
                0x00000000000006b0       0x58 libzephyr.a(flash_mmap.c.obj)
 .debug_aranges
                0x0000000000000708       0x48 libzephyr.a(flash_ops.c.obj)
 .debug_aranges
                0x0000000000000750       0x78 libzephyr.a(memspi_host_driver.c.obj)
 .debug_aranges
                0x00000000000007c8       0x28 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_aranges
                0x00000000000007f0       0x18 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_aranges
                0x0000000000000808       0x40 libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_aranges
                0x0000000000000848      0x110 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_aranges
                0x0000000000000958       0x38 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_aranges
                0x0000000000000990       0x28 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_aranges
                0x00000000000009b8       0x98 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_aranges
                0x0000000000000a50       0x28 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_aranges
                0x0000000000000a78       0x48 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_aranges
                0x0000000000000ac0       0x98 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_aranges
                0x0000000000000b58       0x40 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_aranges
                0x0000000000000b98       0x70 libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_aranges
                0x0000000000000c08       0xf8 libzephyr.a(uart_hal.c.obj)
 .debug_aranges
                0x0000000000000d00       0x40 libzephyr.a(uart_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000d40       0x70 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_aranges
                0x0000000000000db0       0x28 libzephyr.a(ledc_hal.c.obj)
 .debug_aranges
                0x0000000000000dd8       0x48 libzephyr.a(adc_hal_common.c.obj)
 .debug_aranges
                0x0000000000000e20       0xa8 libzephyr.a(adc_legacy.c.obj)
 .debug_aranges
                0x0000000000000ec8       0x50 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_aranges
                0x0000000000000f18       0x30 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_aranges
                0x0000000000000f48       0x28 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_aranges
                0x0000000000000f70       0x60 libzephyr.a(rtc_io_hal.c.obj)
 .debug_aranges
                0x0000000000000fd0       0xc0 libzephyr.a(rtc_io.c.obj)
 .debug_aranges
                0x0000000000001090       0x98 libzephyr.a(esp_efuse_api.c.obj)
 .debug_aranges
                0x0000000000001128       0xa8 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x00000000000011d0       0x18 libzephyr.a(esp_efuse_table.c.obj)
 .debug_aranges
                0x00000000000011e8       0x38 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_aranges
                0x0000000000001220       0x38 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_aranges
                0x0000000000001258       0x18 libzephyr.a(adc_periph.c.obj)
 .debug_aranges
                0x0000000000001270       0x20 libzephyr.a(bootloader_mem.c.obj)
 .debug_aranges
                0x0000000000001290       0x20 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_aranges
                0x00000000000012b0       0x20 libzephyr.a(bootloader_console.c.obj)
 .debug_aranges
                0x00000000000012d0       0x20 libzephyr.a(mpu_hal.c.obj)
 .debug_aranges
                0x00000000000012f0       0x20 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_aranges
                0x0000000000001310       0x48 libzephyr.a(bootloader_init.c.obj)
 .debug_aranges
                0x0000000000001358       0x48 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_aranges
                0x00000000000013a0       0x70 libzephyr.a(flash_qio_mode.c.obj)
 .debug_aranges
                0x0000000000001410       0x50 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_aranges
                0x0000000000001460       0x18 libzephyr.a(gpio_periph.c.obj)
 .debug_aranges
                0x0000000000001478       0x18 libzephyr.a(rtc_io_periph.c.obj)
 .debug_aranges
                0x0000000000001490       0xa8 libzephyr.a(bootloader_flash.c.obj)
 .debug_aranges
                0x0000000000001538       0x28 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_aranges
                0x0000000000001560       0x30 libzephyr.a(bootloader_soc.c.obj)
 .debug_aranges
                0x0000000000001590       0x68 libzephyr.a(cpu.c.obj)
 .debug_aranges
                0x00000000000015f8       0x68 libzephyr.a(esp_clk.c.obj)
 .debug_aranges
                0x0000000000001660       0x68 libzephyr.a(regi2c_ctrl.c.obj)
 .debug_aranges
                0x00000000000016c8       0x48 libzephyr.a(periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000001710       0x58 libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_aranges
                0x0000000000001768       0x40 libzephyr.a(rtc_module.c.obj)
 .debug_aranges
                0x00000000000017a8       0x40 libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_aranges
                0x00000000000017e8       0x20 libzephyr.a(cpu_region_protect.c.obj)
 .debug_aranges
                0x0000000000001808       0x20 libzephyr.a(esp_clk_tree.c.obj)
 .debug_aranges
                0x0000000000001828      0x118 libzephyr.a(rtc_clk.c.obj)
 .debug_aranges
                0x0000000000001940       0x38 libzephyr.a(rtc_init.c.obj)
 .debug_aranges
                0x0000000000001978       0x20 libzephyr.a(rtc_clk_init.c.obj)
 .debug_aranges
                0x0000000000001998       0x58 libzephyr.a(rtc_time.c.obj)
 .debug_aranges
                0x00000000000019f0       0x40 libzephyr.a(rtc_sleep.c.obj)
 .debug_aranges
                0x0000000000001a30       0x70 libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_aranges
                0x0000000000001aa0       0x28 libzephyr.a(systimer.c.obj)
 .debug_aranges
                0x0000000000001ac8       0x48 libzephyr.a(mspi_timing_config.c.obj)
 .debug_aranges
                0x0000000000001b10       0x90 libzephyr.a(esp_mmu_map.c.obj)
 .debug_aranges
                0x0000000000001ba0       0x18 libzephyr.a(ext_mem_layout.c.obj)
 .debug_aranges
                0x0000000000001bb8       0x28 libzephyr.a(esp_rom_sys.c.obj)
 .debug_aranges
                0x0000000000001be0       0x28 libzephyr.a(esp_rom_uart.c.obj)
 .debug_aranges
                0x0000000000001c08       0x20 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_aranges
                0x0000000000001c28       0x40 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_aranges
                0x0000000000001c68       0x28 libzephyr.a(esp_err.c.obj)
 .debug_aranges
                0x0000000000001c90       0x38 libzephyr.a(reset_reason.c.obj)
 .debug_aranges
                0x0000000000001cc8       0xb8 libzephyr.a(esp_timer.c.obj)
 .debug_aranges
                0x0000000000001d80       0x90 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_aranges
                0x0000000000001e10       0x40 libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x0000000000001e50       0x58 libzephyr.a(cache_hal.c.obj)
 .debug_aranges
                0x0000000000001ea8       0x60 libzephyr.a(mmu_hal.c.obj)
 .debug_aranges
                0x0000000000001f08       0x98 libzephyr.a(systimer_hal.c.obj)
 .debug_aranges
                0x0000000000001fa0       0x70 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_aranges
                0x0000000000002010       0x48 libzephyr.a(clk_tree_hal.c.obj)
 .debug_aranges
                0x0000000000002058       0x58 libzephyr.a(efuse_hal.c.obj)
 .debug_aranges
                0x00000000000020b0       0x38 libzephyr.a(log_noos.c.obj)
 .debug_aranges
                0x00000000000020e8       0x50 libzephyr.a(log.c.obj)
 .debug_aranges
                0x0000000000002138       0x48 libzephyr.a(cache_utils.c.obj)
 .debug_aranges
                0x0000000000002180      0x100 libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_aranges
                0x0000000000002280       0x20 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_aranges
                0x00000000000022a0       0x28 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_aranges
                0x00000000000022c8       0x28 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_aranges
                0x00000000000022f0       0x30 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_aranges
                0x0000000000002320       0x38 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_aranges
                0x0000000000002358       0x20 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_aranges
                0x0000000000002378       0x70 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_aranges
                0x00000000000023e8       0x20 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_aranges
                0x0000000000002408       0xb8 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_aranges
                0x00000000000024c0       0x20 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_aranges
                0x00000000000024e0       0x60 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_aranges
                0x0000000000002540       0xc8 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_aranges
                0x0000000000002608       0x30 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_aranges
                0x0000000000002638       0x58 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_aranges
                0x0000000000002690       0x30 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_aranges
                0x00000000000026c0       0x78 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_aranges
                0x0000000000002738       0x20 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_aranges
                0x0000000000002758       0x20 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_aranges
                0x0000000000002778       0x30 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_aranges
                0x00000000000027a8       0x48 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_aranges
                0x00000000000027f0       0x40 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_aranges
                0x0000000000002830       0x38 kernel/libkernel.a(device.c.obj)
 .debug_aranges
                0x0000000000002868       0x20 kernel/libkernel.a(errno.c.obj)
 .debug_aranges
                0x0000000000002888       0x38 kernel/libkernel.a(fatal.c.obj)
 .debug_aranges
                0x00000000000028c0       0x68 kernel/libkernel.a(init.c.obj)
 .debug_aranges
                0x0000000000002928       0x20 kernel/libkernel.a(init_static.c.obj)
 .debug_aranges
                0x0000000000002948       0x48 kernel/libkernel.a(kheap.c.obj)
 .debug_aranges
                0x0000000000002990       0x28 kernel/libkernel.a(idle.c.obj)
 .debug_aranges
                0x00000000000029b8       0x38 kernel/libkernel.a(mutex.c.obj)
 .debug_aranges
                0x00000000000029f0       0x38 kernel/libkernel.a(sem.c.obj)
 .debug_aranges
                0x0000000000002a28       0x90 kernel/libkernel.a(thread.c.obj)
 .debug_aranges
                0x0000000000002ab8      0x190 kernel/libkernel.a(sched.c.obj)
 .debug_aranges
                0x0000000000002c48       0x40 kernel/libkernel.a(timeslicing.c.obj)
 .debug_aranges
                0x0000000000002c88       0x90 kernel/libkernel.a(timeout.c.obj)
 .debug_aranges
                0x0000000000002d18       0x58 kernel/libkernel.a(mempool.c.obj)
 .debug_aranges
                0x0000000000002d70       0x20 kernel/libkernel.a(banner.c.obj)
 .debug_aranges
                0x0000000000002d90       0x18 arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_pubnames
 *(SORT_BY_ALIGNMENT(.debug_pubnames))

.debug_info     0x0000000000000000    0xc8e7d
 *(SORT_BY_ALIGNMENT(.debug_info) SORT_BY_ALIGNMENT(.gnu.linkonce.wi.*))
 .debug_info    0x0000000000000000       0xdc CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_info    0x00000000000000dc      0xf59 ../app/libapp.a(main.c.obj)
 .debug_info    0x0000000000001035     0x2935 libzephyr.a(heap.c.obj)
 .debug_info    0x000000000000396a      0x559 libzephyr.a(printk.c.obj)
 .debug_info    0x0000000000003ec3      0x609 libzephyr.a(thread_entry.c.obj)
 .debug_info    0x00000000000044cc       0x38 libzephyr.a(configs.c.obj)
 .debug_info    0x0000000000004504      0x751 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_info    0x0000000000004c55     0x4fa0 libzephyr.a(soc.c.obj)
 .debug_info    0x0000000000009bf5      0x2bb libzephyr.a(soc_cache.c.obj)
 .debug_info    0x0000000000009eb0     0x13e7 libzephyr.a(loader.c.obj)
 .debug_info    0x000000000000b297       0x56 libzephyr.a(tracing_none.c.obj)
 .debug_info    0x000000000000b2ed      0xb57 libzephyr.a(flash_encrypt.c.obj)
 .debug_info    0x000000000000be44      0x1c9 libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_info    0x000000000000c00d      0x45a libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_info    0x000000000000c467     0x4f49 libzephyr.a(spi_flash_hal.c.obj)
 .debug_info    0x00000000000113b0     0x61d7 libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_info    0x0000000000017587     0x571b libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_info    0x000000000001cca2      0xf29 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_info    0x000000000001dbcb     0x463a libzephyr.a(esp_flash_api.c.obj)
 .debug_info    0x0000000000022205     0x69e9 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_info    0x0000000000028bee      0xee9 libzephyr.a(flash_mmap.c.obj)
 .debug_info    0x0000000000029ad7      0x530 libzephyr.a(flash_ops.c.obj)
 .debug_info    0x000000000002a007     0x54df libzephyr.a(memspi_host_driver.c.obj)
 .debug_info    0x000000000002f4e6      0xf03 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_info    0x00000000000303e9      0xc7e libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_info    0x0000000000031067     0x114b libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_info    0x00000000000321b2     0x2828 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_info    0x00000000000349da     0x1027 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_info    0x0000000000035a01      0xf2c libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_info    0x000000000003692d     0x1a13 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_info    0x0000000000038340      0xf03 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_info    0x0000000000039243     0x169f libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_info    0x000000000003a8e2      0xaec libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_info    0x000000000003b3ce      0xa0a libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_info    0x000000000003bdd8     0x1033 libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_info    0x000000000003ce0b     0x2fea libzephyr.a(uart_hal.c.obj)
 .debug_info    0x000000000003fdf5     0x1c9d libzephyr.a(uart_hal_iram.c.obj)
 .debug_info    0x0000000000041a92     0x1574 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_info    0x0000000000043006      0xe3e libzephyr.a(ledc_hal.c.obj)
 .debug_info    0x0000000000043e44     0x4342 libzephyr.a(adc_hal_common.c.obj)
 .debug_info    0x0000000000048186     0x5bf7 libzephyr.a(adc_legacy.c.obj)
 .debug_info    0x000000000004dd7d     0x27d4 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_info    0x0000000000050551      0x8ee libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_info    0x0000000000050e3f      0x79c libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_info    0x00000000000515db     0x1abd libzephyr.a(rtc_io_hal.c.obj)
 .debug_info    0x0000000000053098     0x5763 libzephyr.a(rtc_io.c.obj)
 .debug_info    0x00000000000587fb     0x14d6 libzephyr.a(esp_efuse_api.c.obj)
 .debug_info    0x0000000000059cd1     0x14e0 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x000000000005b1b1     0x2b83 libzephyr.a(esp_efuse_table.c.obj)
 .debug_info    0x000000000005dd34      0x91e libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_info    0x000000000005e652      0xa16 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_info    0x000000000005f068       0x9e libzephyr.a(adc_periph.c.obj)
 .debug_info    0x000000000005f106       0xa6 libzephyr.a(bootloader_mem.c.obj)
 .debug_info    0x000000000005f1ac      0x266 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_info    0x000000000005f412      0x19f libzephyr.a(bootloader_console.c.obj)
 .debug_info    0x000000000005f5b1      0x250 libzephyr.a(mpu_hal.c.obj)
 .debug_info    0x000000000005f801      0x807 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_info    0x0000000000060008     0x5008 libzephyr.a(bootloader_init.c.obj)
 .debug_info    0x0000000000065010     0x3f60 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_info    0x0000000000068f70      0xa77 libzephyr.a(flash_qio_mode.c.obj)
 .debug_info    0x00000000000699e7      0x9e0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_info    0x000000000006a3c7       0xca libzephyr.a(gpio_periph.c.obj)
 .debug_info    0x000000000006a491      0x1ae libzephyr.a(rtc_io_periph.c.obj)
 .debug_info    0x000000000006a63f     0x7a72 libzephyr.a(bootloader_flash.c.obj)
 .debug_info    0x00000000000720b1      0x25a libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_info    0x000000000007230b       0xf6 libzephyr.a(bootloader_soc.c.obj)
 .debug_info    0x0000000000072401      0x825 libzephyr.a(cpu.c.obj)
 .debug_info    0x0000000000072c26      0x6f9 libzephyr.a(esp_clk.c.obj)
 .debug_info    0x000000000007331f      0x84e libzephyr.a(regi2c_ctrl.c.obj)
 .debug_info    0x0000000000073b6d      0x7ad libzephyr.a(periph_ctrl.c.obj)
 .debug_info    0x000000000007431a      0x57d libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_info    0x0000000000074897     0x4542 libzephyr.a(rtc_module.c.obj)
 .debug_info    0x0000000000078dd9      0x54b libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_info    0x0000000000079324      0x171 libzephyr.a(cpu_region_protect.c.obj)
 .debug_info    0x0000000000079495      0x446 libzephyr.a(esp_clk_tree.c.obj)
 .debug_info    0x00000000000798db     0x1993 libzephyr.a(rtc_clk.c.obj)
 .debug_info    0x000000000007b26e     0x4831 libzephyr.a(rtc_init.c.obj)
 .debug_info    0x000000000007fa9f      0x869 libzephyr.a(rtc_clk_init.c.obj)
 .debug_info    0x0000000000080308      0x6b9 libzephyr.a(rtc_time.c.obj)
 .debug_info    0x00000000000809c1      0x594 libzephyr.a(rtc_sleep.c.obj)
 .debug_info    0x0000000000080f55     0x218e libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_info    0x00000000000830e3       0xdd libzephyr.a(systimer.c.obj)
 .debug_info    0x00000000000831c0      0x4de libzephyr.a(mspi_timing_config.c.obj)
 .debug_info    0x000000000008369e     0x2659 libzephyr.a(esp_mmu_map.c.obj)
 .debug_info    0x0000000000085cf7      0x1b3 libzephyr.a(ext_mem_layout.c.obj)
 .debug_info    0x0000000000085eaa      0x15c libzephyr.a(esp_rom_sys.c.obj)
 .debug_info    0x0000000000086006     0x1c9f libzephyr.a(esp_rom_uart.c.obj)
 .debug_info    0x0000000000087ca5       0xef libzephyr.a(esp_rom_efuse.c.obj)
 .debug_info    0x0000000000087d94      0x346 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_info    0x00000000000880da      0x51d libzephyr.a(esp_err.c.obj)
 .debug_info    0x00000000000885f7      0x3a5 libzephyr.a(reset_reason.c.obj)
 .debug_info    0x000000000008899c     0x233d libzephyr.a(esp_timer.c.obj)
 .debug_info    0x000000000008acd9     0x1c0d libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_info    0x000000000008c8e6     0x3974 libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x000000000009025a      0x5d1 libzephyr.a(cache_hal.c.obj)
 .debug_info    0x000000000009082b      0xce6 libzephyr.a(mmu_hal.c.obj)
 .debug_info    0x0000000000091511     0x19e2 libzephyr.a(systimer_hal.c.obj)
 .debug_info    0x0000000000092ef3     0x5c5b libzephyr.a(wdt_hal_iram.c.obj)
 .debug_info    0x0000000000098b4e      0x649 libzephyr.a(clk_tree_hal.c.obj)
 .debug_info    0x0000000000099197     0x3d20 libzephyr.a(efuse_hal.c.obj)
 .debug_info    0x000000000009ceb7      0x251 libzephyr.a(log_noos.c.obj)
 .debug_info    0x000000000009d108      0x9e2 libzephyr.a(log.c.obj)
 .debug_info    0x000000000009daea      0xb40 libzephyr.a(cache_utils.c.obj)
 .debug_info    0x000000000009e62a      0xd3d libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_info    0x000000000009f367       0xba arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_info    0x000000000009f421      0x1e4 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_info    0x000000000009f605       0xd4 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_info    0x000000000009f6d9      0x34e arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_info    0x000000000009fa27       0x24 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_info    0x000000000009fa4b       0x22 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_info    0x000000000009fa6d      0x37a arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_info    0x000000000009fde7      0x91c arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_info    0x00000000000a0703     0x172d arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_info    0x00000000000a1e30      0x5cd arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_info    0x00000000000a23fd      0xee9 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_info    0x00000000000a32e6      0x121 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_info    0x00000000000a3407      0xddf lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_info    0x00000000000a41e6     0x1b71 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_info    0x00000000000a5d57     0x10b6 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_info    0x00000000000a6e0d     0x166f drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_info    0x00000000000a847c      0x809 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_info    0x00000000000a8c85     0x5d03 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_info    0x00000000000ae988      0x1b2 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_info    0x00000000000aeb3a     0x410c drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_info    0x00000000000b2c46     0x2773 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_info    0x00000000000b53b9     0x2f16 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_info    0x00000000000b82cf      0x88b drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_info    0x00000000000b8b5a      0x33f kernel/libkernel.a(device.c.obj)
 .debug_info    0x00000000000b8e99      0x63c kernel/libkernel.a(errno.c.obj)
 .debug_info    0x00000000000b94d5      0x910 kernel/libkernel.a(fatal.c.obj)
 .debug_info    0x00000000000b9de5     0x187d kernel/libkernel.a(init.c.obj)
 .debug_info    0x00000000000bb662       0x38 kernel/libkernel.a(init_static.c.obj)
 .debug_info    0x00000000000bb69a      0xcc9 kernel/libkernel.a(kheap.c.obj)
 .debug_info    0x00000000000bc363      0x245 kernel/libkernel.a(idle.c.obj)
 .debug_info    0x00000000000bc5a8     0x13e0 kernel/libkernel.a(mutex.c.obj)
 .debug_info    0x00000000000bd988     0x10fd kernel/libkernel.a(sem.c.obj)
 .debug_info    0x00000000000bea85     0x14d2 kernel/libkernel.a(thread.c.obj)
 .debug_info    0x00000000000bff57     0x5e19 kernel/libkernel.a(sched.c.obj)
 .debug_info    0x00000000000c5d70      0xd07 kernel/libkernel.a(timeslicing.c.obj)
 .debug_info    0x00000000000c6a77     0x15e3 kernel/libkernel.a(timeout.c.obj)
 .debug_info    0x00000000000c805a      0xc0c kernel/libkernel.a(mempool.c.obj)
 .debug_info    0x00000000000c8c66       0xc5 kernel/libkernel.a(banner.c.obj)
 .debug_info    0x00000000000c8d2b      0x152 arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_abbrev   0x0000000000000000    0x19c80
 *(SORT_BY_ALIGNMENT(.debug_abbrev))
 .debug_abbrev  0x0000000000000000       0x62 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_abbrev  0x0000000000000062      0x3c1 ../app/libapp.a(main.c.obj)
 .debug_abbrev  0x0000000000000423      0x436 libzephyr.a(heap.c.obj)
 .debug_abbrev  0x0000000000000859      0x2cb libzephyr.a(printk.c.obj)
 .debug_abbrev  0x0000000000000b24      0x243 libzephyr.a(thread_entry.c.obj)
 .debug_abbrev  0x0000000000000d67       0x2e libzephyr.a(configs.c.obj)
 .debug_abbrev  0x0000000000000d95      0x340 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_abbrev  0x00000000000010d5      0x362 libzephyr.a(soc.c.obj)
 .debug_abbrev  0x0000000000001437      0x12b libzephyr.a(soc_cache.c.obj)
 .debug_abbrev  0x0000000000001562      0x34a libzephyr.a(loader.c.obj)
 .debug_abbrev  0x00000000000018ac       0x48 libzephyr.a(tracing_none.c.obj)
 .debug_abbrev  0x00000000000018f4      0x329 libzephyr.a(flash_encrypt.c.obj)
 .debug_abbrev  0x0000000000001c1d       0xce libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_abbrev  0x0000000000001ceb      0x1e6 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_abbrev  0x0000000000001ed1      0x45f libzephyr.a(spi_flash_hal.c.obj)
 .debug_abbrev  0x0000000000002330      0x59f libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_abbrev  0x00000000000028cf      0x4f8 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_abbrev  0x0000000000002dc7      0x415 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_abbrev  0x00000000000031dc      0x5fe libzephyr.a(esp_flash_api.c.obj)
 .debug_abbrev  0x00000000000037da      0x5f9 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_abbrev  0x0000000000003dd3      0x49d libzephyr.a(flash_mmap.c.obj)
 .debug_abbrev  0x0000000000004270      0x281 libzephyr.a(flash_ops.c.obj)
 .debug_abbrev  0x00000000000044f1      0x473 libzephyr.a(memspi_host_driver.c.obj)
 .debug_abbrev  0x0000000000004964      0x1d8 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_abbrev  0x0000000000004b3c      0x142 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_abbrev  0x0000000000004c7e      0x315 libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_abbrev  0x0000000000004f93      0x507 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_abbrev  0x000000000000549a      0x254 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_abbrev  0x00000000000056ee      0x1d5 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_abbrev  0x00000000000058c3      0x40f libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_abbrev  0x0000000000005cd2      0x1d8 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_abbrev  0x0000000000005eaa      0x329 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_abbrev  0x00000000000061d3      0x35f libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_abbrev  0x0000000000006532      0x25d libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_abbrev  0x000000000000678f      0x451 libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_abbrev  0x0000000000006be0      0x3c4 libzephyr.a(uart_hal.c.obj)
 .debug_abbrev  0x0000000000006fa4      0x2b4 libzephyr.a(uart_hal_iram.c.obj)
 .debug_abbrev  0x0000000000007258      0x218 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_abbrev  0x0000000000007470      0x23f libzephyr.a(ledc_hal.c.obj)
 .debug_abbrev  0x00000000000076af      0x444 libzephyr.a(adc_hal_common.c.obj)
 .debug_abbrev  0x0000000000007af3      0x673 libzephyr.a(adc_legacy.c.obj)
 .debug_abbrev  0x0000000000008166      0x4a4 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_abbrev  0x000000000000860a      0x296 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_abbrev  0x00000000000088a0      0x1f0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_abbrev  0x0000000000008a90      0x2f5 libzephyr.a(rtc_io_hal.c.obj)
 .debug_abbrev  0x0000000000008d85      0x407 libzephyr.a(rtc_io.c.obj)
 .debug_abbrev  0x000000000000918c      0x491 libzephyr.a(esp_efuse_api.c.obj)
 .debug_abbrev  0x000000000000961d      0x444 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x0000000000009a61      0x119 libzephyr.a(esp_efuse_table.c.obj)
 .debug_abbrev  0x0000000000009b7a      0x22f libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_abbrev  0x0000000000009da9      0x2b8 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_abbrev  0x000000000000a061       0x61 libzephyr.a(adc_periph.c.obj)
 .debug_abbrev  0x000000000000a0c2       0x62 libzephyr.a(bootloader_mem.c.obj)
 .debug_abbrev  0x000000000000a124      0x10f libzephyr.a(bootloader_clock_init.c.obj)
 .debug_abbrev  0x000000000000a233      0x10e libzephyr.a(bootloader_console.c.obj)
 .debug_abbrev  0x000000000000a341      0x12b libzephyr.a(mpu_hal.c.obj)
 .debug_abbrev  0x000000000000a46c      0x23a libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_abbrev  0x000000000000a6a6      0x31e libzephyr.a(bootloader_init.c.obj)
 .debug_abbrev  0x000000000000a9c4      0x3d5 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_abbrev  0x000000000000ad99      0x2e6 libzephyr.a(flash_qio_mode.c.obj)
 .debug_abbrev  0x000000000000b07f      0x2e4 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_abbrev  0x000000000000b363       0x70 libzephyr.a(gpio_periph.c.obj)
 .debug_abbrev  0x000000000000b3d3       0xae libzephyr.a(rtc_io_periph.c.obj)
 .debug_abbrev  0x000000000000b481      0x589 libzephyr.a(bootloader_flash.c.obj)
 .debug_abbrev  0x000000000000ba0a       0xaf libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_abbrev  0x000000000000bab9       0x80 libzephyr.a(bootloader_soc.c.obj)
 .debug_abbrev  0x000000000000bb39      0x288 libzephyr.a(cpu.c.obj)
 .debug_abbrev  0x000000000000bdc1      0x31e libzephyr.a(esp_clk.c.obj)
 .debug_abbrev  0x000000000000c0df      0x2c0 libzephyr.a(regi2c_ctrl.c.obj)
 .debug_abbrev  0x000000000000c39f      0x26b libzephyr.a(periph_ctrl.c.obj)
 .debug_abbrev  0x000000000000c60a      0x2e2 libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_abbrev  0x000000000000c8ec      0x3fb libzephyr.a(rtc_module.c.obj)
 .debug_abbrev  0x000000000000cce7      0x25f libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_abbrev  0x000000000000cf46      0x109 libzephyr.a(cpu_region_protect.c.obj)
 .debug_abbrev  0x000000000000d04f      0x1b5 libzephyr.a(esp_clk_tree.c.obj)
 .debug_abbrev  0x000000000000d204      0x542 libzephyr.a(rtc_clk.c.obj)
 .debug_abbrev  0x000000000000d746      0x4dd libzephyr.a(rtc_init.c.obj)
 .debug_abbrev  0x000000000000dc23      0x33d libzephyr.a(rtc_clk_init.c.obj)
 .debug_abbrev  0x000000000000df60      0x24f libzephyr.a(rtc_time.c.obj)
 .debug_abbrev  0x000000000000e1af      0x222 libzephyr.a(rtc_sleep.c.obj)
 .debug_abbrev  0x000000000000e3d1      0x361 libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_abbrev  0x000000000000e732       0x9b libzephyr.a(systimer.c.obj)
 .debug_abbrev  0x000000000000e7cd      0x25c libzephyr.a(mspi_timing_config.c.obj)
 .debug_abbrev  0x000000000000ea29      0x479 libzephyr.a(esp_mmu_map.c.obj)
 .debug_abbrev  0x000000000000eea2       0xbd libzephyr.a(ext_mem_layout.c.obj)
 .debug_abbrev  0x000000000000ef5f       0xd0 libzephyr.a(esp_rom_sys.c.obj)
 .debug_abbrev  0x000000000000f02f      0x27e libzephyr.a(esp_rom_uart.c.obj)
 .debug_abbrev  0x000000000000f2ad       0x69 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_abbrev  0x000000000000f316      0x1e4 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_abbrev  0x000000000000f4fa      0x1a5 libzephyr.a(esp_err.c.obj)
 .debug_abbrev  0x000000000000f69f      0x1c2 libzephyr.a(reset_reason.c.obj)
 .debug_abbrev  0x000000000000f861      0x600 libzephyr.a(esp_timer.c.obj)
 .debug_abbrev  0x000000000000fe61      0x45d libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_abbrev  0x00000000000102be      0x20a libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x00000000000104c8      0x1f9 libzephyr.a(cache_hal.c.obj)
 .debug_abbrev  0x00000000000106c1      0x310 libzephyr.a(mmu_hal.c.obj)
 .debug_abbrev  0x00000000000109d1      0x38b libzephyr.a(systimer_hal.c.obj)
 .debug_abbrev  0x0000000000010d5c      0x3d1 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_abbrev  0x000000000001112d      0x228 libzephyr.a(clk_tree_hal.c.obj)
 .debug_abbrev  0x0000000000011355      0x399 libzephyr.a(efuse_hal.c.obj)
 .debug_abbrev  0x00000000000116ee      0x147 libzephyr.a(log_noos.c.obj)
 .debug_abbrev  0x0000000000011835      0x43a libzephyr.a(log.c.obj)
 .debug_abbrev  0x0000000000011c6f      0x382 libzephyr.a(cache_utils.c.obj)
 .debug_abbrev  0x0000000000011ff1      0x349 libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_abbrev  0x000000000001233a       0x6b arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_abbrev  0x00000000000123a5      0x136 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_abbrev  0x00000000000124db       0x8f arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_abbrev  0x000000000001256a      0x1fb arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_abbrev  0x0000000000012765       0x14 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_abbrev  0x0000000000012779       0x12 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_abbrev  0x000000000001278b      0x1b3 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_abbrev  0x000000000001293e      0x27e arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_abbrev  0x0000000000012bbc      0x508 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_abbrev  0x00000000000130c4      0x1a3 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_abbrev  0x0000000000013267      0x4b8 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_abbrev  0x000000000001371f       0xba lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_abbrev  0x00000000000137d9      0x47c lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_abbrev  0x0000000000013c55      0x5c6 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_abbrev  0x000000000001421b      0x403 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_abbrev  0x000000000001461e      0x4dc drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_abbrev  0x0000000000014afa      0x396 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_abbrev  0x0000000000014e90      0x61c drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_abbrev  0x00000000000154ac       0xd0 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_abbrev  0x000000000001557c      0x444 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_abbrev  0x00000000000159c0      0x59d drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_abbrev  0x0000000000015f5d      0x56c drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_abbrev  0x00000000000164c9      0x365 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_abbrev  0x000000000001682e      0x1c7 kernel/libkernel.a(device.c.obj)
 .debug_abbrev  0x00000000000169f5      0x1ab kernel/libkernel.a(errno.c.obj)
 .debug_abbrev  0x0000000000016ba0      0x342 kernel/libkernel.a(fatal.c.obj)
 .debug_abbrev  0x0000000000016ee2      0x6a5 kernel/libkernel.a(init.c.obj)
 .debug_abbrev  0x0000000000017587       0x2e kernel/libkernel.a(init_static.c.obj)
 .debug_abbrev  0x00000000000175b5      0x412 kernel/libkernel.a(kheap.c.obj)
 .debug_abbrev  0x00000000000179c7      0x16e kernel/libkernel.a(idle.c.obj)
 .debug_abbrev  0x0000000000017b35      0x416 kernel/libkernel.a(mutex.c.obj)
 .debug_abbrev  0x0000000000017f4b      0x403 kernel/libkernel.a(sem.c.obj)
 .debug_abbrev  0x000000000001834e      0x4f8 kernel/libkernel.a(thread.c.obj)
 .debug_abbrev  0x0000000000018846      0x6ee kernel/libkernel.a(sched.c.obj)
 .debug_abbrev  0x0000000000018f34      0x38e kernel/libkernel.a(timeslicing.c.obj)
 .debug_abbrev  0x00000000000192c2      0x493 kernel/libkernel.a(timeout.c.obj)
 .debug_abbrev  0x0000000000019755      0x3b8 kernel/libkernel.a(mempool.c.obj)
 .debug_abbrev  0x0000000000019b0d       0x8c kernel/libkernel.a(banner.c.obj)
 .debug_abbrev  0x0000000000019b99       0xe7 arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_line     0x0000000000000000    0x6780a
 *(SORT_BY_ALIGNMENT(.debug_line) SORT_BY_ALIGNMENT(.debug_line.*) SORT_BY_ALIGNMENT(.debug_line_end))
 .debug_line    0x0000000000000000      0x24f CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_line    0x000000000000024f      0x8a2 ../app/libapp.a(main.c.obj)
 .debug_line    0x0000000000000af1     0x1cf4 libzephyr.a(heap.c.obj)
 .debug_line    0x00000000000027e5      0x506 libzephyr.a(printk.c.obj)
 .debug_line    0x0000000000002ceb      0x40e libzephyr.a(thread_entry.c.obj)
 .debug_line    0x00000000000030f9      0x77f libzephyr.a(configs.c.obj)
 .debug_line    0x0000000000003878      0x59e libzephyr.a(esp_heap_runtime.c.obj)
 .debug_line    0x0000000000003e16      0x9c4 libzephyr.a(soc.c.obj)
 .debug_line    0x00000000000047da      0x28a libzephyr.a(soc_cache.c.obj)
 .debug_line    0x0000000000004a64      0xf0f libzephyr.a(loader.c.obj)
 .debug_line    0x0000000000005973       0xa4 libzephyr.a(tracing_none.c.obj)
 .debug_line    0x0000000000005a17     0x1202 libzephyr.a(flash_encrypt.c.obj)
 .debug_line    0x0000000000006c19      0x233 libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_line    0x0000000000006e4c      0x5d2 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_line    0x000000000000741e      0x9b8 libzephyr.a(spi_flash_hal.c.obj)
 .debug_line    0x0000000000007dd6     0x1f10 libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_line    0x0000000000009ce6     0x15bc libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_line    0x000000000000b2a2      0x8b6 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_line    0x000000000000bb58     0x39d4 libzephyr.a(esp_flash_api.c.obj)
 .debug_line    0x000000000000f52c     0x14b9 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_line    0x00000000000109e5     0x1083 libzephyr.a(flash_mmap.c.obj)
 .debug_line    0x0000000000011a68      0x81e libzephyr.a(flash_ops.c.obj)
 .debug_line    0x0000000000012286      0xefd libzephyr.a(memspi_host_driver.c.obj)
 .debug_line    0x0000000000013183      0x3fd libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_line    0x0000000000013580      0x3e1 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .debug_line    0x0000000000013961      0x60c libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_line    0x0000000000013f6d     0x24b8 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_line    0x0000000000016425      0x4e0 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_line    0x0000000000016905      0x472 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_line    0x0000000000016d77     0x148d libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_line    0x0000000000018204      0x3fb libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_line    0x00000000000185ff      0xb40 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_line    0x000000000001913f      0xbc2 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_line    0x0000000000019d01      0x56a libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_line    0x000000000001a26b      0xc0e libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_line    0x000000000001ae79     0x15ad libzephyr.a(uart_hal.c.obj)
 .debug_line    0x000000000001c426      0x60a libzephyr.a(uart_hal_iram.c.obj)
 .debug_line    0x000000000001ca30      0x73a libzephyr.a(ledc_hal_iram.c.obj)
 .debug_line    0x000000000001d16a      0x451 libzephyr.a(ledc_hal.c.obj)
 .debug_line    0x000000000001d5bb     0x13f6 libzephyr.a(adc_hal_common.c.obj)
 .debug_line    0x000000000001e9b1     0x2ebb libzephyr.a(adc_legacy.c.obj)
 .debug_line    0x000000000002186c      0xc83 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_line    0x00000000000224ef      0xb13 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_line    0x0000000000023002      0xa0e libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_line    0x0000000000023a10      0xa48 libzephyr.a(rtc_io_hal.c.obj)
 .debug_line    0x0000000000024458     0x2232 libzephyr.a(rtc_io.c.obj)
 .debug_line    0x000000000002668a     0x1413 libzephyr.a(esp_efuse_api.c.obj)
 .debug_line    0x0000000000027a9d     0x18ec libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x0000000000029389      0x235 libzephyr.a(esp_efuse_table.c.obj)
 .debug_line    0x00000000000295be      0xb11 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_line    0x000000000002a0cf      0xf5d libzephyr.a(esp_efuse_utility.c.obj)
 .debug_line    0x000000000002b02c       0xd1 libzephyr.a(adc_periph.c.obj)
 .debug_line    0x000000000002b0fd      0x107 libzephyr.a(bootloader_mem.c.obj)
 .debug_line    0x000000000002b204      0x357 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_line    0x000000000002b55b      0x298 libzephyr.a(bootloader_console.c.obj)
 .debug_line    0x000000000002b7f3      0x311 libzephyr.a(mpu_hal.c.obj)
 .debug_line    0x000000000002bb04      0xb89 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_line    0x000000000002c68d      0x9c9 libzephyr.a(bootloader_init.c.obj)
 .debug_line    0x000000000002d056      0x993 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_line    0x000000000002d9e9      0xaf9 libzephyr.a(flash_qio_mode.c.obj)
 .debug_line    0x000000000002e4e2      0xb80 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_line    0x000000000002f062      0x1ae libzephyr.a(gpio_periph.c.obj)
 .debug_line    0x000000000002f210      0x1b2 libzephyr.a(rtc_io_periph.c.obj)
 .debug_line    0x000000000002f3c2     0x14c4 libzephyr.a(bootloader_flash.c.obj)
 .debug_line    0x0000000000030886      0x681 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_line    0x0000000000030f07      0x2e0 libzephyr.a(bootloader_soc.c.obj)
 .debug_line    0x00000000000311e7      0xaac libzephyr.a(cpu.c.obj)
 .debug_line    0x0000000000031c93      0x97f libzephyr.a(esp_clk.c.obj)
 .debug_line    0x0000000000032612      0x977 libzephyr.a(regi2c_ctrl.c.obj)
 .debug_line    0x0000000000032f89      0xb23 libzephyr.a(periph_ctrl.c.obj)
 .debug_line    0x0000000000033aac      0x65c libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_line    0x0000000000034108      0xcb9 libzephyr.a(rtc_module.c.obj)
 .debug_line    0x0000000000034dc1      0x7fb libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_line    0x00000000000355bc      0x233 libzephyr.a(cpu_region_protect.c.obj)
 .debug_line    0x00000000000357ef      0x84a libzephyr.a(esp_clk_tree.c.obj)
 .debug_line    0x0000000000036039     0x20b9 libzephyr.a(rtc_clk.c.obj)
 .debug_line    0x00000000000380f2     0x175c libzephyr.a(rtc_init.c.obj)
 .debug_line    0x000000000003984e      0x792 libzephyr.a(rtc_clk_init.c.obj)
 .debug_line    0x0000000000039fe0      0xe30 libzephyr.a(rtc_time.c.obj)
 .debug_line    0x000000000003ae10      0xed5 libzephyr.a(rtc_sleep.c.obj)
 .debug_line    0x000000000003bce5      0x86a libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_line    0x000000000003c54f      0x1c0 libzephyr.a(systimer.c.obj)
 .debug_line    0x000000000003c70f      0x692 libzephyr.a(mspi_timing_config.c.obj)
 .debug_line    0x000000000003cda1     0x30d5 libzephyr.a(esp_mmu_map.c.obj)
 .debug_line    0x000000000003fe76      0x2c1 libzephyr.a(ext_mem_layout.c.obj)
 .debug_line    0x0000000000040137      0x12c libzephyr.a(esp_rom_sys.c.obj)
 .debug_line    0x0000000000040263      0x45a libzephyr.a(esp_rom_uart.c.obj)
 .debug_line    0x00000000000406bd      0x1f6 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_line    0x00000000000408b3      0x42d libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_line    0x0000000000040ce0      0x4cc libzephyr.a(esp_err.c.obj)
 .debug_line    0x00000000000411ac      0x5b2 libzephyr.a(reset_reason.c.obj)
 .debug_line    0x000000000004175e     0x2753 libzephyr.a(esp_timer.c.obj)
 .debug_line    0x0000000000043eb1      0xcc0 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_line    0x0000000000044b71      0x4bd libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x000000000004502e      0x67a libzephyr.a(cache_hal.c.obj)
 .debug_line    0x00000000000456a8      0xcac libzephyr.a(mmu_hal.c.obj)
 .debug_line    0x0000000000046354      0xdbb libzephyr.a(systimer_hal.c.obj)
 .debug_line    0x000000000004710f     0x16d5 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_line    0x00000000000487e4      0x7f3 libzephyr.a(clk_tree_hal.c.obj)
 .debug_line    0x0000000000048fd7      0x8b8 libzephyr.a(efuse_hal.c.obj)
 .debug_line    0x000000000004988f      0x415 libzephyr.a(log_noos.c.obj)
 .debug_line    0x0000000000049ca4      0xb43 libzephyr.a(log.c.obj)
 .debug_line    0x000000000004a7e7      0x83e libzephyr.a(cache_utils.c.obj)
 .debug_line    0x000000000004b025      0xa7e libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_line    0x000000000004baa3       0x95 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_line    0x000000000004bb38      0x253 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_line    0x000000000004bd8b       0xe9 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_line    0x000000000004be74      0x33e arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_line    0x000000000004c1b2      0x21a arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .debug_line    0x000000000004c3cc      0x386 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_line    0x000000000004c752      0x364 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_line    0x000000000004cab6      0x59e arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_line    0x000000000004d054     0x1508 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_line    0x000000000004e55c      0x34c arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_line    0x000000000004e8a8      0xa5a lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_line    0x000000000004f302      0x196 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_line    0x000000000004f498      0x8ed lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_line    0x000000000004fd85     0x2559 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_line    0x00000000000522de      0xb2b drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_line    0x0000000000052e09     0x11dc drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_line    0x0000000000053fe5      0x4cb drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_line    0x00000000000544b0     0x1d2a drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_line    0x00000000000561da      0x258 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_line    0x0000000000056432      0xfa7 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_line    0x00000000000573d9      0xf84 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_line    0x000000000005835d      0xd23 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_line    0x0000000000059080      0x85c drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_line    0x00000000000598dc      0x500 kernel/libkernel.a(device.c.obj)
 .debug_line    0x0000000000059ddc      0x330 kernel/libkernel.a(errno.c.obj)
 .debug_line    0x000000000005a10c      0x603 kernel/libkernel.a(fatal.c.obj)
 .debug_line    0x000000000005a70f     0x10f9 kernel/libkernel.a(init.c.obj)
 .debug_line    0x000000000005b808       0x65 kernel/libkernel.a(init_static.c.obj)
 .debug_line    0x000000000005b86d      0xa4a kernel/libkernel.a(kheap.c.obj)
 .debug_line    0x000000000005c2b7      0x2f6 kernel/libkernel.a(idle.c.obj)
 .debug_line    0x000000000005c5ad      0xfe7 kernel/libkernel.a(mutex.c.obj)
 .debug_line    0x000000000005d594      0xd4d kernel/libkernel.a(sem.c.obj)
 .debug_line    0x000000000005e2e1     0x1084 kernel/libkernel.a(thread.c.obj)
 .debug_line    0x000000000005f365     0x58fe kernel/libkernel.a(sched.c.obj)
 .debug_line    0x0000000000064c63      0x86a kernel/libkernel.a(timeslicing.c.obj)
 .debug_line    0x00000000000654cd     0x1879 kernel/libkernel.a(timeout.c.obj)
 .debug_line    0x0000000000066d46      0x8bf kernel/libkernel.a(mempool.c.obj)
 .debug_line    0x0000000000067605       0xa1 kernel/libkernel.a(banner.c.obj)
 .debug_line    0x00000000000676a6      0x164 arch/common/libisr_tables.a(isr_tables.c.obj)

.debug_frame    0x0000000000000000     0x68e0
 *(SORT_BY_ALIGNMENT(.debug_frame))
 .debug_frame   0x0000000000000000       0x28 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_frame   0x0000000000000028       0x40 ../app/libapp.a(main.c.obj)
 .debug_frame   0x0000000000000068      0x1f0 libzephyr.a(heap.c.obj)
 .debug_frame   0x0000000000000258       0xb8 libzephyr.a(printk.c.obj)
 .debug_frame   0x0000000000000310       0x28 libzephyr.a(thread_entry.c.obj)
 .debug_frame   0x0000000000000338       0x28 libzephyr.a(configs.c.obj)
 .debug_frame   0x0000000000000360       0x88 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_frame   0x00000000000003e8       0x58 libzephyr.a(soc.c.obj)
 .debug_frame   0x0000000000000440       0x40 libzephyr.a(soc_cache.c.obj)
 .debug_frame   0x0000000000000480       0x40 libzephyr.a(loader.c.obj)
 .debug_frame   0x00000000000004c0       0x70 libzephyr.a(tracing_none.c.obj)
 .debug_frame   0x0000000000000530       0xa0 libzephyr.a(flash_encrypt.c.obj)
 .debug_frame   0x00000000000005d0       0x40 libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_frame   0x0000000000000610       0xa0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_frame   0x00000000000006b0       0x70 libzephyr.a(spi_flash_hal.c.obj)
 .debug_frame   0x0000000000000720      0x1f0 libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_frame   0x0000000000000910       0xe8 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_frame   0x00000000000009f8       0x88 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_frame   0x0000000000000a80      0x2f8 libzephyr.a(esp_flash_api.c.obj)
 .debug_frame   0x0000000000000d78       0x88 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_frame   0x0000000000000e00       0xd0 libzephyr.a(flash_mmap.c.obj)
 .debug_frame   0x0000000000000ed0       0xa0 libzephyr.a(flash_ops.c.obj)
 .debug_frame   0x0000000000000f70      0x130 libzephyr.a(memspi_host_driver.c.obj)
 .debug_frame   0x00000000000010a0       0x40 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_frame   0x00000000000010e0       0x88 libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_frame   0x0000000000001168      0x2f8 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_frame   0x0000000000001460       0x70 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_frame   0x00000000000014d0       0x40 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_frame   0x0000000000001510      0x190 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_frame   0x00000000000016a0       0x40 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_frame   0x00000000000016e0       0xa0 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_frame   0x0000000000001780      0x190 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_frame   0x0000000000001910       0x88 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_frame   0x0000000000001998      0x118 libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_frame   0x0000000000001ab0      0x2b0 libzephyr.a(uart_hal.c.obj)
 .debug_frame   0x0000000000001d60       0x88 libzephyr.a(uart_hal_iram.c.obj)
 .debug_frame   0x0000000000001de8      0x118 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_frame   0x0000000000001f00       0x40 libzephyr.a(ledc_hal.c.obj)
 .debug_frame   0x0000000000001f40       0xa0 libzephyr.a(adc_hal_common.c.obj)
 .debug_frame   0x0000000000001fe0      0x1c0 libzephyr.a(adc_legacy.c.obj)
 .debug_frame   0x00000000000021a0       0xb8 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_frame   0x0000000000002258       0x58 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_frame   0x00000000000022b0       0x40 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_frame   0x00000000000022f0       0xe8 libzephyr.a(rtc_io_hal.c.obj)
 .debug_frame   0x00000000000023d8      0x208 libzephyr.a(rtc_io.c.obj)
 .debug_frame   0x00000000000025e0      0x190 libzephyr.a(esp_efuse_api.c.obj)
 .debug_frame   0x0000000000002770      0x1c0 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x0000000000002930       0x70 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_frame   0x00000000000029a0       0x70 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_frame   0x0000000000002a10       0x28 libzephyr.a(bootloader_mem.c.obj)
 .debug_frame   0x0000000000002a38       0x28 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_frame   0x0000000000002a60       0x28 libzephyr.a(bootloader_console.c.obj)
 .debug_frame   0x0000000000002a88       0x28 libzephyr.a(mpu_hal.c.obj)
 .debug_frame   0x0000000000002ab0       0x28 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_frame   0x0000000000002ad8       0xa0 libzephyr.a(bootloader_init.c.obj)
 .debug_frame   0x0000000000002b78       0xa0 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_frame   0x0000000000002c18      0x118 libzephyr.a(flash_qio_mode.c.obj)
 .debug_frame   0x0000000000002d30       0xb8 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_frame   0x0000000000002de8      0x1c0 libzephyr.a(bootloader_flash.c.obj)
 .debug_frame   0x0000000000002fa8       0x40 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_frame   0x0000000000002fe8       0x58 libzephyr.a(bootloader_soc.c.obj)
 .debug_frame   0x0000000000003040      0x100 libzephyr.a(cpu.c.obj)
 .debug_frame   0x0000000000003140      0x100 libzephyr.a(esp_clk.c.obj)
 .debug_frame   0x0000000000003240      0x100 libzephyr.a(regi2c_ctrl.c.obj)
 .debug_frame   0x0000000000003340       0xa0 libzephyr.a(periph_ctrl.c.obj)
 .debug_frame   0x00000000000033e0       0xd0 libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_frame   0x00000000000034b0       0x88 libzephyr.a(rtc_module.c.obj)
 .debug_frame   0x0000000000003538       0x88 libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_frame   0x00000000000035c0       0x28 libzephyr.a(cpu_region_protect.c.obj)
 .debug_frame   0x00000000000035e8       0x28 libzephyr.a(esp_clk_tree.c.obj)
 .debug_frame   0x0000000000003610      0x310 libzephyr.a(rtc_clk.c.obj)
 .debug_frame   0x0000000000003920       0x70 libzephyr.a(rtc_init.c.obj)
 .debug_frame   0x0000000000003990       0x28 libzephyr.a(rtc_clk_init.c.obj)
 .debug_frame   0x00000000000039b8       0xd0 libzephyr.a(rtc_time.c.obj)
 .debug_frame   0x0000000000003a88       0x88 libzephyr.a(rtc_sleep.c.obj)
 .debug_frame   0x0000000000003b10      0x118 libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_frame   0x0000000000003c28       0x40 libzephyr.a(systimer.c.obj)
 .debug_frame   0x0000000000003c68       0xa0 libzephyr.a(mspi_timing_config.c.obj)
 .debug_frame   0x0000000000003d08      0x178 libzephyr.a(esp_mmu_map.c.obj)
 .debug_frame   0x0000000000003e80       0x40 libzephyr.a(esp_rom_sys.c.obj)
 .debug_frame   0x0000000000003ec0       0x40 libzephyr.a(esp_rom_uart.c.obj)
 .debug_frame   0x0000000000003f00       0x28 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_frame   0x0000000000003f28       0x88 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_frame   0x0000000000003fb0       0x40 libzephyr.a(esp_err.c.obj)
 .debug_frame   0x0000000000003ff0       0x70 libzephyr.a(reset_reason.c.obj)
 .debug_frame   0x0000000000004060      0x1f0 libzephyr.a(esp_timer.c.obj)
 .debug_frame   0x0000000000004250      0x178 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_frame   0x00000000000043c8       0x88 libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000004450       0xd0 libzephyr.a(cache_hal.c.obj)
 .debug_frame   0x0000000000004520       0xe8 libzephyr.a(mmu_hal.c.obj)
 .debug_frame   0x0000000000004608      0x190 libzephyr.a(systimer_hal.c.obj)
 .debug_frame   0x0000000000004798      0x118 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_frame   0x00000000000048b0       0xa0 libzephyr.a(clk_tree_hal.c.obj)
 .debug_frame   0x0000000000004950       0xd0 libzephyr.a(efuse_hal.c.obj)
 .debug_frame   0x0000000000004a20       0x70 libzephyr.a(log_noos.c.obj)
 .debug_frame   0x0000000000004a90       0xb8 libzephyr.a(log.c.obj)
 .debug_frame   0x0000000000004b48       0xa0 libzephyr.a(cache_utils.c.obj)
 .debug_frame   0x0000000000004be8      0x2c8 libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_frame   0x0000000000004eb0       0x28 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_frame   0x0000000000004ed8       0x40 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_frame   0x0000000000004f18       0x40 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_frame   0x0000000000004f58       0x58 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_frame   0x0000000000004fb0       0x70 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_frame   0x0000000000005020       0x28 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_frame   0x0000000000005048      0x118 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_frame   0x0000000000005160       0x28 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_frame   0x0000000000005188      0x1f0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_frame   0x0000000000005378       0x28 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_frame   0x00000000000053a0       0xe8 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_frame   0x0000000000005488      0x220 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_frame   0x00000000000056a8       0x58 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_frame   0x0000000000005700       0xd0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_frame   0x00000000000057d0       0x58 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_frame   0x0000000000005828      0x130 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_frame   0x0000000000005958       0x28 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_frame   0x0000000000005980       0x28 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_frame   0x00000000000059a8       0x58 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_frame   0x0000000000005a00       0xa0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_frame   0x0000000000005aa0       0x88 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_frame   0x0000000000005b28       0x70 kernel/libkernel.a(device.c.obj)
 .debug_frame   0x0000000000005b98       0x28 kernel/libkernel.a(errno.c.obj)
 .debug_frame   0x0000000000005bc0       0x70 kernel/libkernel.a(fatal.c.obj)
 .debug_frame   0x0000000000005c30      0x100 kernel/libkernel.a(init.c.obj)
 .debug_frame   0x0000000000005d30       0x28 kernel/libkernel.a(init_static.c.obj)
 .debug_frame   0x0000000000005d58       0xa0 kernel/libkernel.a(kheap.c.obj)
 .debug_frame   0x0000000000005df8       0x40 kernel/libkernel.a(idle.c.obj)
 .debug_frame   0x0000000000005e38       0x70 kernel/libkernel.a(mutex.c.obj)
 .debug_frame   0x0000000000005ea8       0x70 kernel/libkernel.a(sem.c.obj)
 .debug_frame   0x0000000000005f18      0x178 kernel/libkernel.a(thread.c.obj)
 .debug_frame   0x0000000000006090      0x478 kernel/libkernel.a(sched.c.obj)
 .debug_frame   0x0000000000006508       0x88 kernel/libkernel.a(timeslicing.c.obj)
 .debug_frame   0x0000000000006590      0x178 kernel/libkernel.a(timeout.c.obj)
 .debug_frame   0x0000000000006708       0xd0 kernel/libkernel.a(mempool.c.obj)
 .debug_frame   0x00000000000067d8       0x28 kernel/libkernel.a(banner.c.obj)
 .debug_frame   0x0000000000006800       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .debug_frame   0x0000000000006828       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .debug_frame   0x0000000000006850       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .debug_frame   0x0000000000006878       0x40 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .debug_frame   0x00000000000068b8       0x28 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)

.debug_str      0x0000000000000000    0x22ae0
 *(SORT_BY_ALIGNMENT(.debug_str))
 .debug_str     0x0000000000000000      0x2ef CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
                                        0x328 (size before relaxing)
 .debug_str     0x00000000000002ef      0x620 ../app/libapp.a(main.c.obj)
                                        0x87c (size before relaxing)
 .debug_str     0x000000000000090f      0x3c3 libzephyr.a(heap.c.obj)
                                        0x6aa (size before relaxing)
 .debug_str     0x0000000000000cd2      0x2c6 libzephyr.a(printk.c.obj)
                                        0x54d (size before relaxing)
 .debug_str     0x0000000000000f98      0x1ee libzephyr.a(thread_entry.c.obj)
                                        0x52c (size before relaxing)
 .debug_str     0x0000000000001186       0x5a libzephyr.a(configs.c.obj)
                                        0x1a1 (size before relaxing)
 .debug_str     0x00000000000011e0      0x23a libzephyr.a(esp_heap_runtime.c.obj)
                                        0x713 (size before relaxing)
 .debug_str     0x000000000000141a     0x2d14 libzephyr.a(soc.c.obj)
                                       0x33c1 (size before relaxing)
 .debug_str     0x000000000000412e      0x198 libzephyr.a(soc_cache.c.obj)
                                        0x3f2 (size before relaxing)
 .debug_str     0x00000000000042c6      0x798 libzephyr.a(loader.c.obj)
                                        0xec1 (size before relaxing)
 .debug_str     0x0000000000004a5e       0x8b libzephyr.a(tracing_none.c.obj)
                                        0x1d2 (size before relaxing)
 .debug_str     0x0000000000004ae9      0x7b3 libzephyr.a(flash_encrypt.c.obj)
                                        0xa7d (size before relaxing)
 .debug_str     0x000000000000529c       0x9d libzephyr.a(esp_gpio_reserve.c.obj)
                                        0x45a (size before relaxing)
 .debug_str     0x0000000000005339      0x2cc libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x4f0 (size before relaxing)
 .debug_str     0x0000000000005605     0x21ce libzephyr.a(spi_flash_hal.c.obj)
                                       0x2d9f (size before relaxing)
 .debug_str     0x00000000000077d3      0x763 libzephyr.a(spi_flash_hal_iram.c.obj)
                                       0x3048 (size before relaxing)
 .debug_str     0x0000000000007f36      0x3ac libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                       0x2d2a (size before relaxing)
 .debug_str     0x00000000000082e2      0x7b7 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                        0xc35 (size before relaxing)
 .debug_str     0x0000000000008a99      0x853 libzephyr.a(esp_flash_api.c.obj)
                                       0x1fce (size before relaxing)
 .debug_str     0x00000000000092ec      0xe13 libzephyr.a(esp_flash_spi_init.c.obj)
                                       0x3e67 (size before relaxing)
 .debug_str     0x000000000000a0ff      0x3ab libzephyr.a(flash_mmap.c.obj)
                                        0x7e3 (size before relaxing)
 .debug_str     0x000000000000a4aa      0x346 libzephyr.a(flash_ops.c.obj)
                                        0x744 (size before relaxing)
 .debug_str     0x000000000000a7f0      0x1fe libzephyr.a(memspi_host_driver.c.obj)
                                       0x31a0 (size before relaxing)
 .debug_str     0x000000000000a9ee      0x390 libzephyr.a(spi_flash_chip_boya.c.obj)
                                        0xc15 (size before relaxing)
 .debug_str     0x000000000000ad7e       0xff libzephyr.a(spi_flash_chip_drivers.c.obj)
                                        0x9a5 (size before relaxing)
 .debug_str     0x000000000000ae7d      0x26a libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0xce8 (size before relaxing)
 .debug_str     0x000000000000b0e7      0x43e libzephyr.a(spi_flash_chip_generic.c.obj)
                                       0x14bb (size before relaxing)
 .debug_str     0x000000000000b525       0xc8 libzephyr.a(spi_flash_chip_issi.c.obj)
                                        0xcb6 (size before relaxing)
 .debug_str     0x000000000000b5ed       0x88 libzephyr.a(spi_flash_chip_mxic.c.obj)
                                        0xcfd (size before relaxing)
 .debug_str     0x000000000000b675      0x2b4 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                        0xf9d (size before relaxing)
 .debug_str     0x000000000000b929       0x82 libzephyr.a(spi_flash_chip_th.c.obj)
                                        0xc0d (size before relaxing)
 .debug_str     0x000000000000b9ab      0x109 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0xda4 (size before relaxing)
 .debug_str     0x000000000000bab4      0x5fb libzephyr.a(spi_flash_hpm_enable.c.obj)
                                        0xb47 (size before relaxing)
 .debug_str     0x000000000000c0af       0xe5 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                        0x77a (size before relaxing)
 .debug_str     0x000000000000c194      0x226 libzephyr.a(spi_flash_os_func_app.c.obj)
                                        0xae8 (size before relaxing)
 .debug_str     0x000000000000c3ba     0x1782 libzephyr.a(uart_hal.c.obj)
                                       0x1b9f (size before relaxing)
 .debug_str     0x000000000000db3c      0x16a libzephyr.a(uart_hal_iram.c.obj)
                                       0x1248 (size before relaxing)
 .debug_str     0x000000000000dca6      0x631 libzephyr.a(ledc_hal_iram.c.obj)
                                        0x94b (size before relaxing)
 .debug_str     0x000000000000e2d7      0x213 libzephyr.a(ledc_hal.c.obj)
                                        0x7dd (size before relaxing)
 .debug_str     0x000000000000e4ea     0x144c libzephyr.a(adc_hal_common.c.obj)
                                       0x260c (size before relaxing)
 .debug_str     0x000000000000f936      0x9fd libzephyr.a(adc_legacy.c.obj)
                                       0x322a (size before relaxing)
 .debug_str     0x0000000000010333      0x12f libzephyr.a(adc_share_hw_ctrl.c.obj)
                                       0x1a8d (size before relaxing)
 .debug_str     0x0000000000010462      0x370 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                        0x85c (size before relaxing)
 .debug_str     0x00000000000107d2       0x86 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                                        0x848 (size before relaxing)
 .debug_str     0x0000000000010858      0x63e libzephyr.a(rtc_io_hal.c.obj)
                                        0xfc1 (size before relaxing)
 .debug_str     0x0000000000010e96      0xbfd libzephyr.a(rtc_io.c.obj)
                                       0x2b36 (size before relaxing)
 .debug_str     0x0000000000011a93      0x2f2 libzephyr.a(esp_efuse_api.c.obj)
                                        0xc83 (size before relaxing)
 .debug_str     0x0000000000011d85      0x43c libzephyr.a(esp_efuse_utility.c.obj)
                                        0xa82 (size before relaxing)
 .debug_str     0x00000000000121c1     0x1898 libzephyr.a(esp_efuse_table.c.obj)
                                       0x2e00 (size before relaxing)
 .debug_str     0x0000000000013a59      0x165 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                        0x8b7 (size before relaxing)
 .debug_str     0x0000000000013bbe      0x204 libzephyr.a(esp_efuse_utility.c.obj)
                                        0x78d (size before relaxing)
 .debug_str     0x0000000000013dc2       0x4a libzephyr.a(adc_periph.c.obj)
                                        0x228 (size before relaxing)
 .debug_str     0x0000000000013e0c       0x91 libzephyr.a(bootloader_mem.c.obj)
                                        0x273 (size before relaxing)
 .debug_str     0x0000000000013e9d      0x25a libzephyr.a(bootloader_clock_init.c.obj)
                                        0x49d (size before relaxing)
 .debug_str     0x00000000000140f7       0xe5 libzephyr.a(bootloader_console.c.obj)
                                        0x33e (size before relaxing)
 .debug_str     0x00000000000141dc      0x10e libzephyr.a(mpu_hal.c.obj)
                                        0x2fe (size before relaxing)
 .debug_str     0x00000000000142ea      0x5c9 libzephyr.a(bootloader_esp32s3.c.obj)
                                        0xbf8 (size before relaxing)
 .debug_str     0x00000000000148b3      0x151 libzephyr.a(bootloader_init.c.obj)
                                       0x3651 (size before relaxing)
 .debug_str     0x0000000000014a04     0x2462 libzephyr.a(bootloader_common_loader.c.obj)
                                       0x2e54 (size before relaxing)
 .debug_str     0x0000000000016e66      0x2d9 libzephyr.a(flash_qio_mode.c.obj)
                                        0xa44 (size before relaxing)
 .debug_str     0x000000000001713f      0x3a9 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                        0xb20 (size before relaxing)
 .debug_str     0x00000000000174e8       0x5a libzephyr.a(gpio_periph.c.obj)
                                        0x24a (size before relaxing)
 .debug_str     0x0000000000017542       0x4d libzephyr.a(rtc_io_periph.c.obj)
                                        0x2a1 (size before relaxing)
 .debug_str     0x000000000001758f      0x294 libzephyr.a(bootloader_flash.c.obj)
                                       0x4f7b (size before relaxing)
 .debug_str     0x0000000000017823       0x64 libzephyr.a(bootloader_random_esp32s3.c.obj)
                                        0x2a8 (size before relaxing)
 .debug_str     0x0000000000017887       0x61 libzephyr.a(bootloader_soc.c.obj)
                                        0x2bc (size before relaxing)
 .debug_str     0x00000000000178e8      0x319 libzephyr.a(cpu.c.obj)
                                        0x75b (size before relaxing)
 .debug_str     0x0000000000017c01      0x223 libzephyr.a(esp_clk.c.obj)
                                        0x83f (size before relaxing)
 .debug_str     0x0000000000017e24      0x1e1 libzephyr.a(regi2c_ctrl.c.obj)
                                        0x682 (size before relaxing)
 .debug_str     0x0000000000018005      0x1f8 libzephyr.a(periph_ctrl.c.obj)
                                        0x92c (size before relaxing)
 .debug_str     0x00000000000181fd      0x314 libzephyr.a(mspi_timing_tuning.c.obj)
                                        0x6b7 (size before relaxing)
 .debug_str     0x0000000000018511      0xbdb libzephyr.a(rtc_module.c.obj)
                                       0x373a (size before relaxing)
 .debug_str     0x00000000000190ec      0x341 libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x66e (size before relaxing)
 .debug_str     0x000000000001942d       0x72 libzephyr.a(cpu_region_protect.c.obj)
                                        0x2e9 (size before relaxing)
 .debug_str     0x000000000001949f       0xf9 libzephyr.a(esp_clk_tree.c.obj)
                                        0x6d5 (size before relaxing)
 .debug_str     0x0000000000019598      0x9ad libzephyr.a(rtc_clk.c.obj)
                                       0x10e3 (size before relaxing)
 .debug_str     0x0000000000019f45      0x5f9 libzephyr.a(rtc_init.c.obj)
                                       0x3357 (size before relaxing)
 .debug_str     0x000000000001a53e      0x150 libzephyr.a(rtc_clk_init.c.obj)
                                        0xb3c (size before relaxing)
 .debug_str     0x000000000001a68e      0x1eb libzephyr.a(rtc_time.c.obj)
                                        0x672 (size before relaxing)
 .debug_str     0x000000000001a879      0x20f libzephyr.a(rtc_sleep.c.obj)
                                        0x533 (size before relaxing)
 .debug_str     0x000000000001aa88      0x1ba libzephyr.a(sar_periph_ctrl.c.obj)
                                       0x177a (size before relaxing)
 .debug_str     0x000000000001ac42       0x82 libzephyr.a(systimer.c.obj)
                                        0x267 (size before relaxing)
 .debug_str     0x000000000001acc4      0x1c0 libzephyr.a(mspi_timing_config.c.obj)
                                        0x538 (size before relaxing)
 .debug_str     0x000000000001ae84      0x469 libzephyr.a(esp_mmu_map.c.obj)
                                        0xc49 (size before relaxing)
 .debug_str     0x000000000001b2ed       0x56 libzephyr.a(ext_mem_layout.c.obj)
                                        0x377 (size before relaxing)
 .debug_str     0x000000000001b343       0xc1 libzephyr.a(esp_rom_sys.c.obj)
                                        0x2c0 (size before relaxing)
 .debug_str     0x000000000001b404      0x312 libzephyr.a(esp_rom_uart.c.obj)
                                       0x1464 (size before relaxing)
 .debug_str     0x000000000001b716       0x67 libzephyr.a(esp_rom_efuse.c.obj)
                                        0x280 (size before relaxing)
 .debug_str     0x000000000001b77d      0x129 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                        0x3cd (size before relaxing)
 .debug_str     0x000000000001b8a6       0xd1 libzephyr.a(esp_err.c.obj)
                                        0x316 (size before relaxing)
 .debug_str     0x000000000001b977      0x1a4 libzephyr.a(reset_reason.c.obj)
                                        0x715 (size before relaxing)
 .debug_str     0x000000000001bb1b      0x530 libzephyr.a(esp_timer.c.obj)
                                        0xcfb (size before relaxing)
 .debug_str     0x000000000001c04b      0xa2c libzephyr.a(esp_timer_impl_systimer.c.obj)
                                       0x1ee2 (size before relaxing)
 .debug_str     0x000000000001ca77      0x116 libzephyr.a(efuse_hal.c.obj)
                                       0x2a1b (size before relaxing)
 .debug_str     0x000000000001cb8d      0x189 libzephyr.a(cache_hal.c.obj)
                                        0x5c1 (size before relaxing)
 .debug_str     0x000000000001cd16      0x27b libzephyr.a(mmu_hal.c.obj)
                                        0x62a (size before relaxing)
 .debug_str     0x000000000001cf91      0x35c libzephyr.a(systimer_hal.c.obj)
                                        0xe8a (size before relaxing)
 .debug_str     0x000000000001d2ed      0x656 libzephyr.a(wdt_hal_iram.c.obj)
                                       0x3624 (size before relaxing)
 .debug_str     0x000000000001d943       0x8e libzephyr.a(clk_tree_hal.c.obj)
                                        0x73d (size before relaxing)
 .debug_str     0x000000000001d9d1      0x2f6 libzephyr.a(efuse_hal.c.obj)
                                       0x2c64 (size before relaxing)
 .debug_str     0x000000000001dcc7       0x98 libzephyr.a(log_noos.c.obj)
                                        0x4b6 (size before relaxing)
 .debug_str     0x000000000001dd5f      0x23b libzephyr.a(log.c.obj)
                                        0x5db (size before relaxing)
 .debug_str     0x000000000001df9a      0x16b libzephyr.a(cache_utils.c.obj)
                                        0x979 (size before relaxing)
 .debug_str     0x000000000001e105      0x403 libzephyr.a(heap_caps_zephyr.c.obj)
                                        0x85c (size before relaxing)
 .debug_str     0x000000000001e508       0x88 arch/common/libarch__common.a(sw_isr_common.c.obj)
                                        0x242 (size before relaxing)
 .debug_str     0x000000000001e590       0x66 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                        0x2c1 (size before relaxing)
 .debug_str     0x000000000001e5f6       0x9e arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                        0x25d (size before relaxing)
 .debug_str     0x000000000001e694      0x138 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                        0x402 (size before relaxing)
 .debug_str     0x000000000001e7cc       0x45 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0x8d (size before relaxing)
 .debug_str     0x000000000001e811       0x3b arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
                                         0x8f (size before relaxing)
 .debug_str     0x000000000001e84c      0x106 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                        0x488 (size before relaxing)
 .debug_str     0x000000000001e952      0x140 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
                                        0x6ae (size before relaxing)
 .debug_str     0x000000000001ea92      0x31e arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0xadf (size before relaxing)
 .debug_str     0x000000000001edb0       0x3f arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                        0x521 (size before relaxing)
 .debug_str     0x000000000001edef      0x29c lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0xa6d (size before relaxing)
 .debug_str     0x000000000001f08b      0x1a8 lib/libc/common/liblib__libc__common.a(abort.c.obj)
                                        0x2ea (size before relaxing)
 .debug_str     0x000000000001f233      0x109 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x7cc (size before relaxing)
 .debug_str     0x000000000001f33c      0x4b3 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa6c (size before relaxing)
 .debug_str     0x000000000001f7ef      0x1b4 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                        0xc5d (size before relaxing)
 .debug_str     0x000000000001f9a3      0x495 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                       0x15a4 (size before relaxing)
 .debug_str     0x000000000001fe38      0x1a8 drivers/console/libdrivers__console.a(uart_console.c.obj)
                                        0x58e (size before relaxing)
 .debug_str     0x000000000001ffe0      0x714 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                       0x30f3 (size before relaxing)
 .debug_str     0x00000000000206f4       0xf1 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
                                        0x2d9 (size before relaxing)
 .debug_str     0x00000000000207e5      0x11c drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
                                       0x2766 (size before relaxing)
 .debug_str     0x0000000000020901      0x441 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                       0x1285 (size before relaxing)
 .debug_str     0x0000000000020d42      0x5ec drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                       0x22da (size before relaxing)
 .debug_str     0x000000000002132e      0x19a drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x49b (size before relaxing)
 .debug_str     0x00000000000214c8       0xe0 kernel/libkernel.a(device.c.obj)
                                        0x31d (size before relaxing)
 .debug_str     0x00000000000215a8       0x34 kernel/libkernel.a(errno.c.obj)
                                        0x695 (size before relaxing)
 .debug_str     0x00000000000215dc       0x67 kernel/libkernel.a(fatal.c.obj)
                                        0x69a (size before relaxing)
 .debug_str     0x0000000000021643      0x5c2 kernel/libkernel.a(init.c.obj)
                                        0xd89 (size before relaxing)
 .debug_str     0x0000000000021c05       0x2c kernel/libkernel.a(init_static.c.obj)
                                        0x188 (size before relaxing)
 .debug_str     0x0000000000021c31      0x10b kernel/libkernel.a(kheap.c.obj)
                                        0x706 (size before relaxing)
 .debug_str     0x0000000000021d3c       0x49 kernel/libkernel.a(idle.c.obj)
                                        0x312 (size before relaxing)
 .debug_str     0x0000000000021d85      0x217 kernel/libkernel.a(mutex.c.obj)
                                        0x98e (size before relaxing)
 .debug_str     0x0000000000021f9c       0x4a kernel/libkernel.a(sem.c.obj)
                                        0x8a9 (size before relaxing)
 .debug_str     0x0000000000021fe6      0x23d kernel/libkernel.a(thread.c.obj)
                                        0xac0 (size before relaxing)
 .debug_str     0x0000000000022223      0x611 kernel/libkernel.a(sched.c.obj)
                                       0x120b (size before relaxing)
 .debug_str     0x0000000000022834       0xb5 kernel/libkernel.a(timeslicing.c.obj)
                                        0x8f2 (size before relaxing)
 .debug_str     0x00000000000228e9       0xf2 kernel/libkernel.a(timeout.c.obj)
                                        0x7a2 (size before relaxing)
 .debug_str     0x00000000000229db       0x8a kernel/libkernel.a(mempool.c.obj)
                                        0x7db (size before relaxing)
 .debug_str     0x0000000000022a65       0x27 kernel/libkernel.a(banner.c.obj)
                                        0x223 (size before relaxing)
 .debug_str     0x0000000000022a8c       0x54 arch/common/libisr_tables.a(isr_tables.c.obj)
                                        0x28b (size before relaxing)

.debug_loc      0x0000000000000000    0x27b21
 *(SORT_BY_ALIGNMENT(.debug_loc))
 .debug_loc     0x0000000000000000      0x3b8 ../app/libapp.a(main.c.obj)
 .debug_loc     0x00000000000003b8     0x1a58 libzephyr.a(heap.c.obj)
 .debug_loc     0x0000000000001e10       0xe4 libzephyr.a(printk.c.obj)
 .debug_loc     0x0000000000001ef4       0x15 libzephyr.a(thread_entry.c.obj)
 .debug_loc     0x0000000000001f09       0xc6 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_loc     0x0000000000001fcf       0x25 libzephyr.a(soc.c.obj)
 .debug_loc     0x0000000000001ff4       0x62 libzephyr.a(soc_cache.c.obj)
 .debug_loc     0x0000000000002056      0x57b libzephyr.a(loader.c.obj)
 .debug_loc     0x00000000000025d1      0x1d5 libzephyr.a(flash_encrypt.c.obj)
 .debug_loc     0x00000000000027a6       0x4c libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_loc     0x00000000000027f2      0x16b libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_loc     0x000000000000295d      0x274 libzephyr.a(spi_flash_hal.c.obj)
 .debug_loc     0x0000000000002bd1      0xeab libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_loc     0x0000000000003a7c      0xb11 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_loc     0x000000000000458d      0x15c libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_loc     0x00000000000046e9     0x17ec libzephyr.a(esp_flash_api.c.obj)
 .debug_loc     0x0000000000005ed5      0x6dd libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_loc     0x00000000000065b2      0x9dc libzephyr.a(flash_mmap.c.obj)
 .debug_loc     0x0000000000006f8e      0x19d libzephyr.a(flash_ops.c.obj)
 .debug_loc     0x000000000000712b      0x605 libzephyr.a(memspi_host_driver.c.obj)
 .debug_loc     0x0000000000007730       0xc3 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_loc     0x00000000000077f3      0x23a libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_loc     0x0000000000007a2d     0x1241 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_loc     0x0000000000008c6e      0x122 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_loc     0x0000000000008d90       0x6f libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_loc     0x0000000000008dff      0x7c9 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_loc     0x00000000000095c8       0xc3 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_loc     0x000000000000968b      0x785 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_loc     0x0000000000009e10      0x26d libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_loc     0x000000000000a07d      0x103 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_loc     0x000000000000a180      0x32f libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_loc     0x000000000000a4af      0xdf3 libzephyr.a(uart_hal.c.obj)
 .debug_loc     0x000000000000b2a2      0x2c8 libzephyr.a(uart_hal_iram.c.obj)
 .debug_loc     0x000000000000b56a      0x9e4 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_loc     0x000000000000bf4e       0xe3 libzephyr.a(ledc_hal.c.obj)
 .debug_loc     0x000000000000c031      0xb5f libzephyr.a(adc_hal_common.c.obj)
 .debug_loc     0x000000000000cb90     0x107a libzephyr.a(adc_legacy.c.obj)
 .debug_loc     0x000000000000dc0a      0x256 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_loc     0x000000000000de60      0x2b6 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_loc     0x000000000000e116      0x2aa libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_loc     0x000000000000e3c0      0x3b5 libzephyr.a(rtc_io_hal.c.obj)
 .debug_loc     0x000000000000e775      0xc29 libzephyr.a(rtc_io.c.obj)
 .debug_loc     0x000000000000f39e      0x59a libzephyr.a(esp_efuse_api.c.obj)
 .debug_loc     0x000000000000f938      0xfd1 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x0000000000010909      0x27a libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_loc     0x0000000000010b83      0x436 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_loc     0x0000000000010fb9       0xd5 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_loc     0x000000000001108e       0x2a libzephyr.a(bootloader_console.c.obj)
 .debug_loc     0x00000000000110b8      0x11f libzephyr.a(mpu_hal.c.obj)
 .debug_loc     0x00000000000111d7      0x179 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_loc     0x0000000000011350       0x4f libzephyr.a(bootloader_init.c.obj)
 .debug_loc     0x000000000001139f      0x293 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_loc     0x0000000000011632      0x17e libzephyr.a(flash_qio_mode.c.obj)
 .debug_loc     0x00000000000117b0      0x256 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_loc     0x0000000000011a06      0x7cd libzephyr.a(bootloader_flash.c.obj)
 .debug_loc     0x00000000000121d3      0x4bc libzephyr.a(cpu.c.obj)
 .debug_loc     0x000000000001268f      0x129 libzephyr.a(esp_clk.c.obj)
 .debug_loc     0x00000000000127b8      0x23e libzephyr.a(regi2c_ctrl.c.obj)
 .debug_loc     0x00000000000129f6      0x22f libzephyr.a(periph_ctrl.c.obj)
 .debug_loc     0x0000000000012c25       0x38 libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_loc     0x0000000000012c5d      0x42b libzephyr.a(rtc_module.c.obj)
 .debug_loc     0x0000000000013088      0x1c6 libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_loc     0x000000000001324e       0x3f libzephyr.a(cpu_region_protect.c.obj)
 .debug_loc     0x000000000001328d      0x1af libzephyr.a(esp_clk_tree.c.obj)
 .debug_loc     0x000000000001343c      0xb85 libzephyr.a(rtc_clk.c.obj)
 .debug_loc     0x0000000000013fc1      0x71e libzephyr.a(rtc_init.c.obj)
 .debug_loc     0x00000000000146df       0x98 libzephyr.a(rtc_clk_init.c.obj)
 .debug_loc     0x0000000000014777      0x483 libzephyr.a(rtc_time.c.obj)
 .debug_loc     0x0000000000014bfa      0x16e libzephyr.a(rtc_sleep.c.obj)
 .debug_loc     0x0000000000014d68       0xc2 libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_loc     0x0000000000014e2a       0x58 libzephyr.a(systimer.c.obj)
 .debug_loc     0x0000000000014e82      0x286 libzephyr.a(mspi_timing_config.c.obj)
 .debug_loc     0x0000000000015108     0x23fc libzephyr.a(esp_mmu_map.c.obj)
 .debug_loc     0x0000000000017504      0x1e3 libzephyr.a(esp_rom_uart.c.obj)
 .debug_loc     0x00000000000176e7       0x56 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_loc     0x000000000001773d       0xee libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_loc     0x000000000001782b      0x28a libzephyr.a(esp_err.c.obj)
 .debug_loc     0x0000000000017ab5      0x12e libzephyr.a(reset_reason.c.obj)
 .debug_loc     0x0000000000017be3     0x1289 libzephyr.a(esp_timer.c.obj)
 .debug_loc     0x0000000000018e6c      0x2fc libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_loc     0x0000000000019168       0x45 libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x00000000000191ad      0x122 libzephyr.a(cache_hal.c.obj)
 .debug_loc     0x00000000000192cf      0xa1e libzephyr.a(mmu_hal.c.obj)
 .debug_loc     0x0000000000019ced      0xa76 libzephyr.a(systimer_hal.c.obj)
 .debug_loc     0x000000000001a763      0xe37 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_loc     0x000000000001b59a      0x15d libzephyr.a(clk_tree_hal.c.obj)
 .debug_loc     0x000000000001b6f7      0x123 libzephyr.a(efuse_hal.c.obj)
 .debug_loc     0x000000000001b81a       0x15 libzephyr.a(log_noos.c.obj)
 .debug_loc     0x000000000001b82f      0x52c libzephyr.a(log.c.obj)
 .debug_loc     0x000000000001bd5b      0x1ce libzephyr.a(cache_utils.c.obj)
 .debug_loc     0x000000000001bf29      0x43a libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_loc     0x000000000001c363       0x15 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_loc     0x000000000001c378       0x15 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_loc     0x000000000001c38d       0x71 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_loc     0x000000000001c3fe       0x3a arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_loc     0x000000000001c438      0x10d arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_loc     0x000000000001c545      0x98b arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_loc     0x000000000001ced0      0x195 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_loc     0x000000000001d065      0x360 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_loc     0x000000000001d3c5     0x12a4 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_loc     0x000000000001e669      0x2c6 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_loc     0x000000000001e92f      0x727 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_loc     0x000000000001f056       0x56 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_loc     0x000000000001f0ac      0xff8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_loc     0x00000000000200a4       0x42 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_loc     0x00000000000200e6      0x6af drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_loc     0x0000000000020795      0xc45 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_loc     0x00000000000213da      0x482 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_loc     0x000000000002185c      0x285 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_loc     0x0000000000021ae1       0x96 kernel/libkernel.a(device.c.obj)
 .debug_loc     0x0000000000021b77       0x69 kernel/libkernel.a(fatal.c.obj)
 .debug_loc     0x0000000000021be0      0x462 kernel/libkernel.a(init.c.obj)
 .debug_loc     0x0000000000022042      0x3e1 kernel/libkernel.a(kheap.c.obj)
 .debug_loc     0x0000000000022423       0x3f kernel/libkernel.a(idle.c.obj)
 .debug_loc     0x0000000000022462      0x6a1 kernel/libkernel.a(mutex.c.obj)
 .debug_loc     0x0000000000022b03      0x60b kernel/libkernel.a(sem.c.obj)
 .debug_loc     0x000000000002310e      0x6f1 kernel/libkernel.a(thread.c.obj)
 .debug_loc     0x00000000000237ff     0x314e kernel/libkernel.a(sched.c.obj)
 .debug_loc     0x000000000002694d      0x205 kernel/libkernel.a(timeslicing.c.obj)
 .debug_loc     0x0000000000026b52      0xb2f kernel/libkernel.a(timeout.c.obj)
 .debug_loc     0x0000000000027681      0x4a0 kernel/libkernel.a(mempool.c.obj)

.debug_macinfo
 *(SORT_BY_ALIGNMENT(.debug_macinfo))

.debug_weaknames
 *(SORT_BY_ALIGNMENT(.debug_weaknames))

.debug_funcnames
 *(SORT_BY_ALIGNMENT(.debug_funcnames))

.debug_typenames
 *(SORT_BY_ALIGNMENT(.debug_typenames))

.debug_varnames
 *(SORT_BY_ALIGNMENT(.debug_varnames))

.debug_pubtypes
 *(SORT_BY_ALIGNMENT(.debug_pubtypes))

.debug_ranges   0x0000000000000000     0x6450
 *(SORT_BY_ALIGNMENT(.debug_ranges))
 .debug_ranges  0x0000000000000000       0x68 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .debug_ranges  0x0000000000000068       0x10 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .debug_ranges  0x0000000000000078       0x48 ../app/libapp.a(main.c.obj)
 .debug_ranges  0x00000000000000c0      0x2b0 libzephyr.a(heap.c.obj)
 .debug_ranges  0x0000000000000370       0x40 libzephyr.a(printk.c.obj)
 .debug_ranges  0x00000000000003b0       0x10 libzephyr.a(thread_entry.c.obj)
 .debug_ranges  0x00000000000003c0       0x10 libzephyr.a(configs.c.obj)
 .debug_ranges  0x00000000000003d0       0x30 libzephyr.a(esp_heap_runtime.c.obj)
 .debug_ranges  0x0000000000000400       0x20 libzephyr.a(soc.c.obj)
 .debug_ranges  0x0000000000000420       0x18 libzephyr.a(soc_cache.c.obj)
 .debug_ranges  0x0000000000000438       0x48 libzephyr.a(loader.c.obj)
 .debug_ranges  0x0000000000000480       0x28 libzephyr.a(tracing_none.c.obj)
 .debug_ranges  0x00000000000004a8       0x50 libzephyr.a(flash_encrypt.c.obj)
 .debug_ranges  0x00000000000004f8       0x18 libzephyr.a(esp_gpio_reserve.c.obj)
 .debug_ranges  0x0000000000000510       0x70 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .debug_ranges  0x0000000000000580       0x40 libzephyr.a(spi_flash_hal.c.obj)
 .debug_ranges  0x00000000000005c0      0x3a8 libzephyr.a(spi_flash_hal_iram.c.obj)
 .debug_ranges  0x0000000000000968      0x238 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .debug_ranges  0x0000000000000ba0       0x58 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .debug_ranges  0x0000000000000bf8      0x260 libzephyr.a(esp_flash_api.c.obj)
 .debug_ranges  0x0000000000000e58       0xe8 libzephyr.a(esp_flash_spi_init.c.obj)
 .debug_ranges  0x0000000000000f40       0xd0 libzephyr.a(flash_mmap.c.obj)
 .debug_ranges  0x0000000000001010       0x50 libzephyr.a(flash_ops.c.obj)
 .debug_ranges  0x0000000000001060       0x80 libzephyr.a(memspi_host_driver.c.obj)
 .debug_ranges  0x00000000000010e0       0x18 libzephyr.a(spi_flash_chip_boya.c.obj)
 .debug_ranges  0x00000000000010f8       0x48 libzephyr.a(spi_flash_chip_gd.c.obj)
 .debug_ranges  0x0000000000001140      0x168 libzephyr.a(spi_flash_chip_generic.c.obj)
 .debug_ranges  0x00000000000012a8       0x28 libzephyr.a(spi_flash_chip_issi.c.obj)
 .debug_ranges  0x00000000000012d0       0x18 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .debug_ranges  0x00000000000012e8       0xa0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .debug_ranges  0x0000000000001388       0x18 libzephyr.a(spi_flash_chip_th.c.obj)
 .debug_ranges  0x00000000000013a0       0x80 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .debug_ranges  0x0000000000001420       0x88 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .debug_ranges  0x00000000000014a8       0x30 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .debug_ranges  0x00000000000014d8       0xa8 libzephyr.a(spi_flash_os_func_app.c.obj)
 .debug_ranges  0x0000000000001580      0x1a8 libzephyr.a(uart_hal.c.obj)
 .debug_ranges  0x0000000000001728       0x60 libzephyr.a(uart_hal_iram.c.obj)
 .debug_ranges  0x0000000000001788       0x60 libzephyr.a(ledc_hal_iram.c.obj)
 .debug_ranges  0x00000000000017e8       0x18 libzephyr.a(ledc_hal.c.obj)
 .debug_ranges  0x0000000000001800      0x1f8 libzephyr.a(adc_hal_common.c.obj)
 .debug_ranges  0x00000000000019f8      0x400 libzephyr.a(adc_legacy.c.obj)
 .debug_ranges  0x0000000000001df8       0x60 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .debug_ranges  0x0000000000001e58       0x38 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .debug_ranges  0x0000000000001e90       0x30 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .debug_ranges  0x0000000000001ec0       0x98 libzephyr.a(rtc_io_hal.c.obj)
 .debug_ranges  0x0000000000001f58      0x220 libzephyr.a(rtc_io.c.obj)
 .debug_ranges  0x0000000000002178       0xa0 libzephyr.a(esp_efuse_api.c.obj)
 .debug_ranges  0x0000000000002218      0x228 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x0000000000002440       0x70 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .debug_ranges  0x00000000000024b0      0x108 libzephyr.a(esp_efuse_utility.c.obj)
 .debug_ranges  0x00000000000025b8       0x10 libzephyr.a(bootloader_mem.c.obj)
 .debug_ranges  0x00000000000025c8       0x10 libzephyr.a(bootloader_clock_init.c.obj)
 .debug_ranges  0x00000000000025d8       0x10 libzephyr.a(bootloader_console.c.obj)
 .debug_ranges  0x00000000000025e8       0x10 libzephyr.a(mpu_hal.c.obj)
 .debug_ranges  0x00000000000025f8       0x10 libzephyr.a(bootloader_esp32s3.c.obj)
 .debug_ranges  0x0000000000002608       0x38 libzephyr.a(bootloader_init.c.obj)
 .debug_ranges  0x0000000000002640       0x68 libzephyr.a(bootloader_common_loader.c.obj)
 .debug_ranges  0x00000000000026a8       0x80 libzephyr.a(flash_qio_mode.c.obj)
 .debug_ranges  0x0000000000002728       0x40 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .debug_ranges  0x0000000000002768       0xe8 libzephyr.a(bootloader_flash.c.obj)
 .debug_ranges  0x0000000000002850       0x18 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .debug_ranges  0x0000000000002868       0x20 libzephyr.a(bootloader_soc.c.obj)
 .debug_ranges  0x0000000000002888       0x88 libzephyr.a(cpu.c.obj)
 .debug_ranges  0x0000000000002910       0x88 libzephyr.a(esp_clk.c.obj)
 .debug_ranges  0x0000000000002998       0xd0 libzephyr.a(regi2c_ctrl.c.obj)
 .debug_ranges  0x0000000000002a68       0xe8 libzephyr.a(periph_ctrl.c.obj)
 .debug_ranges  0x0000000000002b50       0x48 libzephyr.a(mspi_timing_tuning.c.obj)
 .debug_ranges  0x0000000000002b98       0x88 libzephyr.a(rtc_module.c.obj)
 .debug_ranges  0x0000000000002c20       0x48 libzephyr.a(esp_clk_tree_common.c.obj)
 .debug_ranges  0x0000000000002c68       0x28 libzephyr.a(cpu_region_protect.c.obj)
 .debug_ranges  0x0000000000002c90       0x10 libzephyr.a(esp_clk_tree.c.obj)
 .debug_ranges  0x0000000000002ca0      0x2e0 libzephyr.a(rtc_clk.c.obj)
 .debug_ranges  0x0000000000002f80      0x168 libzephyr.a(rtc_init.c.obj)
 .debug_ranges  0x00000000000030e8       0x40 libzephyr.a(rtc_clk_init.c.obj)
 .debug_ranges  0x0000000000003128      0x1a0 libzephyr.a(rtc_time.c.obj)
 .debug_ranges  0x00000000000032c8       0x30 libzephyr.a(rtc_sleep.c.obj)
 .debug_ranges  0x00000000000032f8       0x60 libzephyr.a(sar_periph_ctrl.c.obj)
 .debug_ranges  0x0000000000003358       0x18 libzephyr.a(systimer.c.obj)
 .debug_ranges  0x0000000000003370       0x80 libzephyr.a(mspi_timing_config.c.obj)
 .debug_ranges  0x00000000000033f0      0x328 libzephyr.a(esp_mmu_map.c.obj)
 .debug_ranges  0x0000000000003718       0x18 libzephyr.a(esp_rom_sys.c.obj)
 .debug_ranges  0x0000000000003730       0x18 libzephyr.a(esp_rom_uart.c.obj)
 .debug_ranges  0x0000000000003748       0x10 libzephyr.a(esp_rom_efuse.c.obj)
 .debug_ranges  0x0000000000003758       0x30 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .debug_ranges  0x0000000000003788       0x58 libzephyr.a(esp_err.c.obj)
 .debug_ranges  0x00000000000037e0       0x40 libzephyr.a(reset_reason.c.obj)
 .debug_ranges  0x0000000000003820      0x268 libzephyr.a(esp_timer.c.obj)
 .debug_ranges  0x0000000000003a88      0x128 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .debug_ranges  0x0000000000003bb0       0x88 libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x0000000000003c38       0x48 libzephyr.a(cache_hal.c.obj)
 .debug_ranges  0x0000000000003c80      0x1e8 libzephyr.a(mmu_hal.c.obj)
 .debug_ranges  0x0000000000003e68      0x140 libzephyr.a(systimer_hal.c.obj)
 .debug_ranges  0x0000000000003fa8      0x1a0 libzephyr.a(wdt_hal_iram.c.obj)
 .debug_ranges  0x0000000000004148       0xd0 libzephyr.a(clk_tree_hal.c.obj)
 .debug_ranges  0x0000000000004218       0xd8 libzephyr.a(efuse_hal.c.obj)
 .debug_ranges  0x00000000000042f0       0x28 libzephyr.a(log_noos.c.obj)
 .debug_ranges  0x0000000000004318       0x98 libzephyr.a(log.c.obj)
 .debug_ranges  0x00000000000043b0       0x50 libzephyr.a(cache_utils.c.obj)
 .debug_ranges  0x0000000000004400      0x108 libzephyr.a(heap_caps_zephyr.c.obj)
 .debug_ranges  0x0000000000004508       0x10 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .debug_ranges  0x0000000000004518       0x18 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .debug_ranges  0x0000000000004530       0x18 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .debug_ranges  0x0000000000004548       0x20 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .debug_ranges  0x0000000000004568       0x28 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .debug_ranges  0x0000000000004590       0x10 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .debug_ranges  0x00000000000045a0      0x140 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .debug_ranges  0x00000000000046e0       0x10 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .debug_ranges  0x00000000000046f0       0xc0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .debug_ranges  0x00000000000047b0       0x10 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .debug_ranges  0x00000000000047c0       0x68 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .debug_ranges  0x0000000000004828      0x278 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .debug_ranges  0x0000000000004aa0       0x80 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .debug_ranges  0x0000000000004b20       0xa8 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .debug_ranges  0x0000000000004bc8       0x38 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .debug_ranges  0x0000000000004c00      0x1a0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .debug_ranges  0x0000000000004da0       0x10 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .debug_ranges  0x0000000000004db0      0x1c0 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .debug_ranges  0x0000000000004f70      0x188 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .debug_ranges  0x00000000000050f8       0xb8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .debug_ranges  0x00000000000051b0       0x48 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .debug_ranges  0x00000000000051f8       0x70 kernel/libkernel.a(device.c.obj)
 .debug_ranges  0x0000000000005268       0x10 kernel/libkernel.a(errno.c.obj)
 .debug_ranges  0x0000000000005278       0x40 kernel/libkernel.a(fatal.c.obj)
 .debug_ranges  0x00000000000052b8       0xb8 kernel/libkernel.a(init.c.obj)
 .debug_ranges  0x0000000000005370       0x10 kernel/libkernel.a(init_static.c.obj)
 .debug_ranges  0x0000000000005380       0xb0 kernel/libkernel.a(kheap.c.obj)
 .debug_ranges  0x0000000000005430       0x18 kernel/libkernel.a(idle.c.obj)
 .debug_ranges  0x0000000000005448      0x128 kernel/libkernel.a(mutex.c.obj)
 .debug_ranges  0x0000000000005570      0x128 kernel/libkernel.a(sem.c.obj)
 .debug_ranges  0x0000000000005698      0x188 kernel/libkernel.a(thread.c.obj)
 .debug_ranges  0x0000000000005820      0x928 kernel/libkernel.a(sched.c.obj)
 .debug_ranges  0x0000000000006148       0x30 kernel/libkernel.a(timeslicing.c.obj)
 .debug_ranges  0x0000000000006178      0x268 kernel/libkernel.a(timeout.c.obj)
 .debug_ranges  0x00000000000063e0       0x60 kernel/libkernel.a(mempool.c.obj)
 .debug_ranges  0x0000000000006440       0x10 kernel/libkernel.a(banner.c.obj)

.debug_addr
 *(SORT_BY_ALIGNMENT(.debug_addr))

.debug_line_str
 *(SORT_BY_ALIGNMENT(.debug_line_str))

.debug_loclists
 *(SORT_BY_ALIGNMENT(.debug_loclists))

.debug_macro
 *(SORT_BY_ALIGNMENT(.debug_macro))

.debug_names
 *(SORT_BY_ALIGNMENT(.debug_names))

.debug_rnglists
 *(SORT_BY_ALIGNMENT(.debug_rnglists))

.debug_str_offsets
 *(SORT_BY_ALIGNMENT(.debug_str_offsets))

.debug_sup
 *(SORT_BY_ALIGNMENT(.debug_sup))

.xtensa.info    0x0000000000000000       0x38
 *(SORT_BY_ALIGNMENT(.xtensa.info))
 .xtensa.info   0x0000000000000000       0x38 CMakeFiles/zephyr_pre0.dir/misc/empty_file.c.obj
 .xtensa.info   0x0000000000000038        0x0 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .xtensa.info   0x0000000000000038        0x0 ../app/libapp.a(main.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(heap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cbprintf_packaged.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(printk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(thread_entry.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cbprintf_complete.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(assert.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(dec.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(hex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rb.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(timeutil.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bitarray.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(configs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_heap_runtime.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(soc_cache.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp32s3-mp.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(tracing_none.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(flash_encrypt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_gpio_reserve.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_hal_gpspi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_oct_flash_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_flash_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_flash_spi_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(flash_mmap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(flash_ops.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(memspi_host_driver.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_boya.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_gd.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_generic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_issi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_th.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_chip_winbond.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_hpm_enable.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_os_func_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_os_func_app.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(spi_flash_wrap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(uart_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(uart_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(ledc_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(ledc_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(adc_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(adc_hal_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(adc_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(adc_share_hw_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_adc_cal_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_io_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_io.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_efuse_api.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_efuse_table.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_efuse_rtc_calib.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_efuse_utility.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(adc_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_mem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(mpu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_common_loader.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(flash_qio_mode.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(gpio_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_io_periph.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_flash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(bootloader_soc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cpu.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(clk_ctrl_os.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(regi2c_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(mac_addr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(mspi_timing_tuning.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_module.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(hw_random.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(sleep_modes.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_clk_tree_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cpu_region_protect.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_clk_tree.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_clk_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_time.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(rtc_sleep.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(sar_periph_ctrl.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(mspi_timing_config.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_mmu_map.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(ext_mem_layout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_crc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_sys.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_uart.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_spiflash.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_efuse.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_wdt.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_longjmp.S.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_err.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(clk.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(system_internal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(reset_reason.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(ets_timer_legacy.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(esp_timer_impl_systimer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cache_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(mmu_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(systimer_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(wdt_hal_iram.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(clk_tree_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(efuse_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(xt_wdt_hal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(log_noos.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(log.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(cache_utils.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(heap_caps_zephyr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(stubs.c.obj)
 .xtensa.info   0x0000000000000038        0x0 libzephyr.a(number_of_leds.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/common/libarch__common.a(dynamic_isr.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
 .xtensa.info   0x0000000000000038        0x0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
 .xtensa.info   0x0000000000000038        0x0 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xtensa.info   0x0000000000000038        0x0 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(device.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(errno.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(fatal.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(init.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(init_static.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(kheap.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(idle.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(mutex.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(sem.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(thread.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(sched.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(timeslicing.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(timeout.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(mempool.c.obj)
 .xtensa.info   0x0000000000000038        0x0 kernel/libkernel.a(banner.c.obj)
 .xtensa.info   0x0000000000000038        0x0 arch/common/libisr_tables.a(isr_tables.c.obj)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
 .xtensa.info   0x0000000000000038        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)

.xt.insn
 *(SORT_BY_ALIGNMENT(.xt.insn))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.x.*))

.xt.prop        0x0000000000000000     0xccc0
 *(SORT_BY_ALIGNMENT(.xt.prop))
 .xt.prop       0x0000000000000000       0x24 CMakeFiles/offsets.dir/arch/xtensa/core/offsets/offsets.c.obj
 .xt.prop       0x0000000000000024      0x114 ../app/libapp.a(main.c.obj)
 .xt.prop       0x0000000000000138      0x408 libzephyr.a(heap.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000540        0x0 libzephyr.a(cbprintf_packaged.c.obj)
                                        0x750 (size before relaxing)
 .xt.prop       0x0000000000000540       0xc0 libzephyr.a(printk.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x0000000000000600        0x0 libzephyr.a(sem.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000000600       0x24 libzephyr.a(thread_entry.c.obj)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(cbprintf_complete.c.obj)
                                        0x9fc (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(assert.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(dec.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(hex.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(rb.c.obj)
                                        0x5d0 (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(timeutil.c.obj)
                                        0x36c (size before relaxing)
 .xt.prop       0x0000000000000624        0x0 libzephyr.a(bitarray.c.obj)
                                        0x720 (size before relaxing)
 .xt.prop       0x0000000000000624       0x24 libzephyr.a(configs.c.obj)
 .xt.prop       0x0000000000000648       0x54 libzephyr.a(esp_heap_runtime.c.obj)
                                        0x138 (size before relaxing)
 .xt.prop       0x000000000000069c       0x60 libzephyr.a(soc.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x00000000000006fc       0x60 libzephyr.a(soc_cache.c.obj)
 .xt.prop       0x000000000000075c        0x0 libzephyr.a(esp32s3-mp.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x000000000000075c      0x1e0 libzephyr.a(loader.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x000000000000093c       0x24 libzephyr.a(tracing_none.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x0000000000000960       0x24 libzephyr.a(flash_encrypt.c.obj)
                                        0x24c (size before relaxing)
 .xt.prop       0x0000000000000984       0x3c libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x00000000000009c0      0x120 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000000ae0      0x1a4 libzephyr.a(spi_flash_hal.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x0000000000000c84      0x480 libzephyr.a(spi_flash_hal_iram.c.obj)
                                        0x558 (size before relaxing)
 .xt.prop       0x0000000000001104      0x294 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                        0x2ac (size before relaxing)
 .xt.prop       0x0000000000001398      0x15c libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x00000000000014f4      0x540 libzephyr.a(esp_flash_api.c.obj)
                                        0xf18 (size before relaxing)
 .xt.prop       0x0000000000001a34       0xc0 libzephyr.a(esp_flash_spi_init.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000001af4      0x144 libzephyr.a(flash_mmap.c.obj)
                                        0x354 (size before relaxing)
 .xt.prop       0x0000000000001c38      0x174 libzephyr.a(flash_ops.c.obj)
                                        0x1f8 (size before relaxing)
 .xt.prop       0x0000000000001dac      0x2c4 libzephyr.a(memspi_host_driver.c.obj)
                                        0x348 (size before relaxing)
 .xt.prop       0x0000000000002070       0x60 libzephyr.a(spi_flash_chip_boya.c.obj)
 .xt.prop       0x00000000000020d0       0x18 libzephyr.a(spi_flash_chip_drivers.c.obj)
 .xt.prop       0x00000000000020e8      0x120 libzephyr.a(spi_flash_chip_gd.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x0000000000002208      0x96c libzephyr.a(spi_flash_chip_generic.c.obj)
                                        0xa20 (size before relaxing)
 .xt.prop       0x0000000000002b74       0xc0 libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000002c34       0x60 libzephyr.a(spi_flash_chip_mxic.c.obj)
 .xt.prop       0x0000000000002c94      0x414 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                        0x450 (size before relaxing)
 .xt.prop       0x00000000000030a8       0x60 libzephyr.a(spi_flash_chip_th.c.obj)
 .xt.prop       0x0000000000003108      0x198 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x00000000000032a0      0x30c libzephyr.a(spi_flash_hpm_enable.c.obj)
                                        0x3a8 (size before relaxing)
 .xt.prop       0x00000000000035ac       0x90 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0xfc (size before relaxing)
 .xt.prop       0x000000000000363c      0x1d4 libzephyr.a(spi_flash_os_func_app.c.obj)
                                        0x2c4 (size before relaxing)
 .xt.prop       0x0000000000003810        0x0 libzephyr.a(spi_flash_wrap.c.obj)
                                        0x21c (size before relaxing)
 .xt.prop       0x0000000000003810      0x384 libzephyr.a(uart_hal.c.obj)
                                        0x588 (size before relaxing)
 .xt.prop       0x0000000000003b94       0xb4 libzephyr.a(uart_hal_iram.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000003c48      0x144 libzephyr.a(ledc_hal_iram.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x0000000000003d8c       0x30 libzephyr.a(ledc_hal.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000003dbc        0x0 libzephyr.a(adc_hal.c.obj)
                                        0x2c4 (size before relaxing)
 .xt.prop       0x0000000000003dbc      0x3cc libzephyr.a(adc_hal_common.c.obj)
 .xt.prop       0x0000000000004188      0x384 libzephyr.a(adc_legacy.c.obj)
                                        0x624 (size before relaxing)
 .xt.prop       0x000000000000450c       0x90 libzephyr.a(adc_share_hw_ctrl.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x000000000000459c      0x144 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                        0x150 (size before relaxing)
 .xt.prop       0x00000000000046e0       0x60 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                                        0x120 (size before relaxing)
 .xt.prop       0x0000000000004740      0x12c libzephyr.a(rtc_io_hal.c.obj)
                                        0x2f4 (size before relaxing)
 .xt.prop       0x000000000000486c      0x180 libzephyr.a(rtc_io.c.obj)
                                        0x678 (size before relaxing)
 .xt.prop       0x00000000000049ec       0x90 libzephyr.a(esp_efuse_api.c.obj)
                                        0x534 (size before relaxing)
 .xt.prop       0x0000000000004a7c      0x1f8 libzephyr.a(esp_efuse_utility.c.obj)
                                        0x60c (size before relaxing)
 .xt.prop       0x0000000000004c74      0x198 libzephyr.a(esp_efuse_table.c.obj)
                                       0x1410 (size before relaxing)
 .xt.prop       0x0000000000004e0c      0x120 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x0000000000004f2c        0xc libzephyr.a(esp_efuse_utility.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x0000000000004f38        0xc libzephyr.a(adc_periph.c.obj)
 .xt.prop       0x0000000000004f44       0x24 libzephyr.a(bootloader_mem.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000004f68       0x3c libzephyr.a(bootloader_clock_init.c.obj)
 .xt.prop       0x0000000000004fa4       0x30 libzephyr.a(bootloader_console.c.obj)
 .xt.prop       0x0000000000004fd4       0x9c libzephyr.a(mpu_hal.c.obj)
 .xt.prop       0x0000000000005070       0xd8 libzephyr.a(bootloader_esp32s3.c.obj)
 .xt.prop       0x0000000000005148      0x150 libzephyr.a(bootloader_init.c.obj)
                                        0x180 (size before relaxing)
 .xt.prop       0x0000000000005298       0x60 libzephyr.a(bootloader_common_loader.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000052f8       0x48 libzephyr.a(flash_qio_mode.c.obj)
                                        0x258 (size before relaxing)
 .xt.prop       0x0000000000005340      0x18c libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x00000000000054cc        0xc libzephyr.a(gpio_periph.c.obj)
                                         0x18 (size before relaxing)
 .xt.prop       0x00000000000054d8       0x18 libzephyr.a(rtc_io_periph.c.obj)
 .xt.prop       0x00000000000054f0      0x318 libzephyr.a(bootloader_flash.c.obj)
                                        0x540 (size before relaxing)
 .xt.prop       0x0000000000005808       0x60 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .xt.prop       0x0000000000005868       0xd8 libzephyr.a(bootloader_soc.c.obj)
 .xt.prop       0x0000000000005940       0x48 libzephyr.a(cpu.c.obj)
                                        0x294 (size before relaxing)
 .xt.prop       0x0000000000005988        0x0 libzephyr.a(clk_ctrl_os.c.obj)
                                         0xcc (size before relaxing)
 .xt.prop       0x0000000000005988       0x6c libzephyr.a(esp_clk.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x00000000000059f4       0x9c libzephyr.a(regi2c_ctrl.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x0000000000005a90        0x0 libzephyr.a(mac_addr.c.obj)
                                        0x4a4 (size before relaxing)
 .xt.prop       0x0000000000005a90      0x3a8 libzephyr.a(periph_ctrl.c.obj)
                                        0x444 (size before relaxing)
 .xt.prop       0x0000000000005e38      0x144 libzephyr.a(mspi_timing_tuning.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x0000000000005f7c       0x9c libzephyr.a(rtc_module.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x0000000000006018        0x0 libzephyr.a(hw_random.c.obj)
                                         0x84 (size before relaxing)
 .xt.prop       0x0000000000006018        0x0 libzephyr.a(sleep_modes.c.obj)
                                        0xcc0 (size before relaxing)
 .xt.prop       0x0000000000006018      0x1a4 libzephyr.a(esp_clk_tree_common.c.obj)
                                        0x1bc (size before relaxing)
 .xt.prop       0x00000000000061bc       0x48 libzephyr.a(cpu_region_protect.c.obj)
 .xt.prop       0x0000000000006204      0x198 libzephyr.a(esp_clk_tree.c.obj)
 .xt.prop       0x000000000000639c      0x720 libzephyr.a(rtc_clk.c.obj)
                                        0x9e4 (size before relaxing)
 .xt.prop       0x0000000000006abc      0x1c8 libzephyr.a(rtc_init.c.obj)
                                        0x240 (size before relaxing)
 .xt.prop       0x0000000000006c84       0x60 libzephyr.a(rtc_clk_init.c.obj)
 .xt.prop       0x0000000000006ce4      0x228 libzephyr.a(rtc_time.c.obj)
                                        0x2e8 (size before relaxing)
 .xt.prop       0x0000000000006f0c       0x60 libzephyr.a(rtc_sleep.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x0000000000006f6c       0xe4 libzephyr.a(sar_periph_ctrl.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000007050       0x48 libzephyr.a(systimer.c.obj)
 .xt.prop       0x0000000000007098       0xe4 libzephyr.a(mspi_timing_config.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x000000000000717c      0x594 libzephyr.a(esp_mmu_map.c.obj)
                                        0x960 (size before relaxing)
 .xt.prop       0x0000000000007710        0xc libzephyr.a(ext_mem_layout.c.obj)
 .xt.prop       0x000000000000771c       0x30 libzephyr.a(esp_rom_sys.c.obj)
                                         0x90 (size before relaxing)
 .xt.prop       0x000000000000774c       0x30 libzephyr.a(esp_rom_uart.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x000000000000777c       0x48 libzephyr.a(esp_rom_efuse.c.obj)
 .xt.prop       0x00000000000077c4        0x0 libzephyr.a(esp_rom_longjmp.S.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x00000000000077c4       0xf0 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x00000000000078b4       0x24 libzephyr.a(esp_err.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x00000000000078d8        0x0 libzephyr.a(clk.c.obj)
                                        0x168 (size before relaxing)
 .xt.prop       0x00000000000078d8        0x0 libzephyr.a(system_internal.c.obj)
                                         0x78 (size before relaxing)
 .xt.prop       0x00000000000078d8      0x180 libzephyr.a(reset_reason.c.obj)
                                        0x1ec (size before relaxing)
 .xt.prop       0x0000000000007a58        0x0 libzephyr.a(ets_timer_legacy.c.obj)
                                        0x1b0 (size before relaxing)
 .xt.prop       0x0000000000007a58       0x24 libzephyr.a(esp_timer.c.obj)
                                        0x7f8 (size before relaxing)
 .xt.prop       0x0000000000007a7c       0x48 libzephyr.a(esp_timer_impl_systimer.c.obj)
                                        0x330 (size before relaxing)
 .xt.prop       0x0000000000007ac4       0x6c libzephyr.a(efuse_hal.c.obj)
                                        0x114 (size before relaxing)
 .xt.prop       0x0000000000007b30      0x114 libzephyr.a(cache_hal.c.obj)
                                        0x270 (size before relaxing)
 .xt.prop       0x0000000000007c44      0x204 libzephyr.a(mmu_hal.c.obj)
                                        0x2a0 (size before relaxing)
 .xt.prop       0x0000000000007e48       0xf0 libzephyr.a(systimer_hal.c.obj)
                                        0x324 (size before relaxing)
 .xt.prop       0x0000000000007f38      0x108 libzephyr.a(wdt_hal_iram.c.obj)
                                        0x3fc (size before relaxing)
 .xt.prop       0x0000000000008040      0x174 libzephyr.a(clk_tree_hal.c.obj)
                                        0x198 (size before relaxing)
 .xt.prop       0x00000000000081b4       0x90 libzephyr.a(efuse_hal.c.obj)
                                        0x228 (size before relaxing)
 .xt.prop       0x0000000000008244        0x0 libzephyr.a(xt_wdt_hal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000008244       0xc0 libzephyr.a(log_noos.c.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x0000000000008304      0x210 libzephyr.a(log.c.obj)
                                        0x378 (size before relaxing)
 .xt.prop       0x0000000000008514       0xcc libzephyr.a(cache_utils.c.obj)
                                        0x144 (size before relaxing)
 .xt.prop       0x00000000000085e0       0x9c libzephyr.a(heap_caps_zephyr.c.obj)
                                        0x594 (size before relaxing)
 .xt.prop       0x000000000000867c        0x0 libzephyr.a(number_of_leds.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000867c       0x24 arch/common/libarch__common.a(sw_isr_common.c.obj)
 .xt.prop       0x00000000000086a0       0x54 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x00000000000086f4       0x30 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x60 (size before relaxing)
 .xt.prop       0x0000000000008724       0x24 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x0000000000008748       0xa8 arch/arch/xtensa/core/libarch__xtensa__core.a(window_vectors.S.obj)
                                         0xe4 (size before relaxing)
 .xt.prop       0x00000000000087f0      0x330 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.prop       0x0000000000008b20       0x24 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0xa8 (size before relaxing)
 .xt.prop       0x0000000000008b44       0x30 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.prop       0x0000000000008b74      0x660 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                        0x6b4 (size before relaxing)
 .xt.prop       0x00000000000091d4       0x18 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                         0x24 (size before relaxing)
 .xt.prop       0x00000000000091ec       0xf0 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                        0x3d8 (size before relaxing)
 .xt.prop       0x00000000000092dc       0x24 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.prop       0x0000000000009300       0xfc lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                        0x234 (size before relaxing)
 .xt.prop       0x00000000000093fc      0x75c drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                        0xa50 (size before relaxing)
 .xt.prop       0x0000000000009b58        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
                                         0x30 (size before relaxing)
 .xt.prop       0x0000000000009b58      0x1c8 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                        0x1e0 (size before relaxing)
 .xt.prop       0x0000000000009d20      0x378 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                        0x39c (size before relaxing)
 .xt.prop       0x000000000000a098       0x78 drivers/console/libdrivers__console.a(uart_console.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x000000000000a110      0x5e8 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                        0x630 (size before relaxing)
 .xt.prop       0x000000000000a6f8       0x54 drivers/pinctrl/libdrivers__pinctrl.a(common.c.obj)
 .xt.prop       0x000000000000a74c      0x2b8 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.prop       0x000000000000aa04      0x1b0 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                        0x1c8 (size before relaxing)
 .xt.prop       0x000000000000abb4      0x2e8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                        0x318 (size before relaxing)
 .xt.prop       0x000000000000ae9c        0x0 drivers/timer/libdrivers__timer.a(sys_clock_init.c.obj)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000ae9c       0xfc drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x000000000000af98       0x54 kernel/libkernel.a(device.c.obj)
                                        0x108 (size before relaxing)
 .xt.prop       0x000000000000afec       0x24 kernel/libkernel.a(errno.c.obj)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000b010       0x60 kernel/libkernel.a(fatal.c.obj)
                                         0x9c (size before relaxing)
 .xt.prop       0x000000000000b070      0x21c kernel/libkernel.a(init.c.obj)
                                        0x330 (size before relaxing)
 .xt.prop       0x000000000000b28c       0x24 kernel/libkernel.a(init_static.c.obj)
 .xt.prop       0x000000000000b2b0      0x114 kernel/libkernel.a(kheap.c.obj)
                                        0x18c (size before relaxing)
 .xt.prop       0x000000000000b3c4       0x24 kernel/libkernel.a(idle.c.obj)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000b3e8      0x198 kernel/libkernel.a(mutex.c.obj)
                                        0x1d4 (size before relaxing)
 .xt.prop       0x000000000000b580       0x9c kernel/libkernel.a(sem.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x000000000000b61c       0x6c kernel/libkernel.a(thread.c.obj)
                                        0x2dc (size before relaxing)
 .xt.prop       0x000000000000b688      0x7b0 kernel/libkernel.a(sched.c.obj)
                                        0xd14 (size before relaxing)
 .xt.prop       0x000000000000be38       0xf0 kernel/libkernel.a(timeslicing.c.obj)
                                        0x12c (size before relaxing)
 .xt.prop       0x000000000000bf28      0x3fc kernel/libkernel.a(timeout.c.obj)
                                        0x54c (size before relaxing)
 .xt.prop       0x000000000000c324      0x150 kernel/libkernel.a(mempool.c.obj)
                                        0x264 (size before relaxing)
 .xt.prop       0x000000000000c474       0x30 kernel/libkernel.a(banner.c.obj)
 .xt.prop       0x000000000000c4a4        0xc arch/common/libisr_tables.a(isr_tables.c.obj)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashldi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ashrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_lshrdi3.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapsi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_bswapdi2.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divsf3.o)
                                         0x24 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                        0x420 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                        0x228 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                        0x264 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
                                         0xa8 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatsidf.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_floatdidf.o)
                                         0x9c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                         0xb4 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                         0x6c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_ffsdi2.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdi3.o)
                                        0x198 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_udivdi3.o)
                                        0x180 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_umoddi3.o)
                                        0x138 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memcpy.S.o)
                                        0x15c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_memset.S.o)
                                         0xd8 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                        0x120 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                         0xc0 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_memcmp.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strnlen.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputc.c.o)
                                         0x3c (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fputs.c.o)
                                         0x60 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000c4b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                         0x48 (size before relaxing)
 .xt.prop       0x000000000000c4b0      0x7e0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
                                        0x7ec (size before relaxing)
 .xt.prop       0x000000000000cc90        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                        0x5f4 (size before relaxing)
 .xt.prop       0x000000000000cc90       0x30 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xt.prop       0x000000000000ccc0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_string_strchr.c.o)
                                         0x54 (size before relaxing)
 .xt.prop       0x000000000000ccc0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                         0x84 (size before relaxing)
 .xt.prop       0x000000000000ccc0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_filestrput.c.o)
                                         0x30 (size before relaxing)
 .xt.prop       0x000000000000ccc0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                         0x6c (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.prop.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.prop.*))

.xt.lit         0x0000000000000000      0x8c0
 *(SORT_BY_ALIGNMENT(.xt.lit))
 .xt.lit        0x0000000000000000       0x10 ../app/libapp.a(main.c.obj)
 .xt.lit        0x0000000000000010       0x10 libzephyr.a(heap.c.obj)
                                         0xa0 (size before relaxing)
 .xt.lit        0x0000000000000020        0x0 libzephyr.a(cbprintf_packaged.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000020       0x18 libzephyr.a(printk.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000038        0x0 libzephyr.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000038        0x8 libzephyr.a(thread_entry.c.obj)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(cbprintf_complete.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(assert.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(dec.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(hex.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(rb.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(timeutil.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000040        0x0 libzephyr.a(bitarray.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x0000000000000040        0x8 libzephyr.a(esp_heap_runtime.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000048       0x10 libzephyr.a(soc.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000058       0x10 libzephyr.a(soc_cache.c.obj)
 .xt.lit        0x0000000000000068        0x0 libzephyr.a(esp32s3-mp.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000068       0x10 libzephyr.a(loader.c.obj)
 .xt.lit        0x0000000000000078        0x0 libzephyr.a(flash_encrypt.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000078        0x8 libzephyr.a(esp_gpio_reserve.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000080       0x20 libzephyr.a(spi_flash_encrypt_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000a0       0x10 libzephyr.a(spi_flash_hal.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000000b0       0x10 libzephyr.a(spi_flash_hal_iram.c.obj)
                                         0x70 (size before relaxing)
 .xt.lit        0x00000000000000c0       0x18 libzephyr.a(spi_flash_hal_gpspi.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000d8       0x20 libzephyr.a(spi_flash_oct_flash_init.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000000f8       0x38 libzephyr.a(esp_flash_api.c.obj)
                                         0xe0 (size before relaxing)
 .xt.lit        0x0000000000000130       0x10 libzephyr.a(esp_flash_spi_init.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000140       0x10 libzephyr.a(flash_mmap.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000150       0x18 libzephyr.a(flash_ops.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000168       0x10 libzephyr.a(memspi_host_driver.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000178       0x10 libzephyr.a(spi_flash_chip_gd.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000188       0x28 libzephyr.a(spi_flash_chip_generic.c.obj)
                                         0xa0 (size before relaxing)
 .xt.lit        0x00000000000001b0        0x8 libzephyr.a(spi_flash_chip_issi.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000001b8       0x40 libzephyr.a(spi_flash_chip_mxic_opi.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x00000000000001f8        0x8 libzephyr.a(spi_flash_chip_winbond.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000200       0x20 libzephyr.a(spi_flash_hpm_enable.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000220       0x10 libzephyr.a(spi_flash_os_func_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000230       0x18 libzephyr.a(spi_flash_os_func_app.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000248        0x0 libzephyr.a(spi_flash_wrap.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000248       0x28 libzephyr.a(uart_hal.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000270        0x8 libzephyr.a(uart_hal_iram.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000278       0x18 libzephyr.a(ledc_hal_iram.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000290        0x8 libzephyr.a(ledc_hal.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000298        0x0 libzephyr.a(adc_hal.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000298       0x30 libzephyr.a(adc_hal_common.c.obj)
 .xt.lit        0x00000000000002c8       0x40 libzephyr.a(adc_legacy.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x0000000000000308       0x10 libzephyr.a(adc_share_hw_ctrl.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000318       0x10 libzephyr.a(esp_adc_cal_legacy.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000328        0x0 libzephyr.a(esp_adc_cal_common_legacy.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000328       0x10 libzephyr.a(rtc_io_hal.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000338       0x28 libzephyr.a(rtc_io.c.obj)
                                         0xa8 (size before relaxing)
 .xt.lit        0x0000000000000360        0x8 libzephyr.a(esp_efuse_api.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x0000000000000368       0x20 libzephyr.a(esp_efuse_utility.c.obj)
                                         0x80 (size before relaxing)
 .xt.lit        0x0000000000000388       0x18 libzephyr.a(esp_efuse_rtc_calib.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x0 libzephyr.a(esp_efuse_utility.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x0 libzephyr.a(bootloader_mem.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000003a0        0x8 libzephyr.a(bootloader_clock_init.c.obj)
 .xt.lit        0x00000000000003a8        0x8 libzephyr.a(bootloader_console.c.obj)
 .xt.lit        0x00000000000003b0        0x8 libzephyr.a(bootloader_esp32s3.c.obj)
 .xt.lit        0x00000000000003b8       0x28 libzephyr.a(bootloader_init.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x00000000000003e0        0x8 libzephyr.a(bootloader_common_loader.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000003e8        0x0 libzephyr.a(flash_qio_mode.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x00000000000003e8       0x28 libzephyr.a(bootloader_flash_config_esp32s3.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000410       0x20 libzephyr.a(bootloader_flash.c.obj)
                                         0x88 (size before relaxing)
 .xt.lit        0x0000000000000430       0x10 libzephyr.a(bootloader_random_esp32s3.c.obj)
 .xt.lit        0x0000000000000440       0x18 libzephyr.a(bootloader_soc.c.obj)
 .xt.lit        0x0000000000000458        0x8 libzephyr.a(cpu.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000460        0x0 libzephyr.a(clk_ctrl_os.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000460       0x10 libzephyr.a(esp_clk.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000470       0x18 libzephyr.a(regi2c_ctrl.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000488        0x0 libzephyr.a(mac_addr.c.obj)
                                         0x60 (size before relaxing)
 .xt.lit        0x0000000000000488       0x10 libzephyr.a(periph_ctrl.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000498       0x10 libzephyr.a(mspi_timing_tuning.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000004a8        0x8 libzephyr.a(rtc_module.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000004b0        0x0 libzephyr.a(hw_random.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000004b0        0x0 libzephyr.a(sleep_modes.c.obj)
                                        0x110 (size before relaxing)
 .xt.lit        0x00000000000004b0       0x18 libzephyr.a(esp_clk_tree_common.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000004c8        0x8 libzephyr.a(cpu_region_protect.c.obj)
 .xt.lit        0x00000000000004d0        0x8 libzephyr.a(esp_clk_tree.c.obj)
 .xt.lit        0x00000000000004d8       0x60 libzephyr.a(rtc_clk.c.obj)
                                        0x100 (size before relaxing)
 .xt.lit        0x0000000000000538       0x10 libzephyr.a(rtc_init.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000548        0x8 libzephyr.a(rtc_clk_init.c.obj)
 .xt.lit        0x0000000000000550       0x10 libzephyr.a(rtc_time.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000560        0x8 libzephyr.a(rtc_sleep.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000568       0x10 libzephyr.a(sar_periph_ctrl.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x0000000000000578       0x10 libzephyr.a(mspi_timing_config.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000588       0x28 libzephyr.a(esp_mmu_map.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x00000000000005b0        0x8 libzephyr.a(esp_rom_sys.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000005b8        0x8 libzephyr.a(esp_rom_uart.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000005c0        0x8 libzephyr.a(esp_rom_efuse.c.obj)
 .xt.lit        0x00000000000005c8       0x20 libzephyr.a(esp_rom_cache_esp32s2_esp32s3.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000005e8        0x8 libzephyr.a(esp_err.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000005f0        0x0 libzephyr.a(clk.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000005f0        0x0 libzephyr.a(system_internal.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000005f0       0x10 libzephyr.a(reset_reason.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000600        0x0 libzephyr.a(ets_timer_legacy.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000600        0x0 libzephyr.a(esp_timer.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x0000000000000600        0x8 libzephyr.a(esp_timer_impl_systimer.c.obj)
                                         0x68 (size before relaxing)
 .xt.lit        0x0000000000000608        0x0 libzephyr.a(efuse_hal.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000608       0x10 libzephyr.a(cache_hal.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000618       0x20 libzephyr.a(mmu_hal.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000638        0x8 libzephyr.a(systimer_hal.c.obj)
                                         0x50 (size before relaxing)
 .xt.lit        0x0000000000000640       0x10 libzephyr.a(wdt_hal_iram.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000650       0x18 libzephyr.a(clk_tree_hal.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000668        0x0 libzephyr.a(efuse_hal.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000668        0x0 libzephyr.a(xt_wdt_hal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000668        0x8 libzephyr.a(log_noos.c.obj)
                                         0x20 (size before relaxing)
 .xt.lit        0x0000000000000670       0x20 libzephyr.a(log.c.obj)
                                         0x38 (size before relaxing)
 .xt.lit        0x0000000000000690       0x10 libzephyr.a(cache_utils.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000006a0       0x10 libzephyr.a(heap_caps_zephyr.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x00000000000006b0        0x0 libzephyr.a(number_of_leds.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000006b0        0x8 arch/common/libarch__common.a(dynamic_isr.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000006b8        0x8 arch/arch/xtensa/core/libarch__xtensa__core.a(cpu_idle.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000006c0        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000006c0        0x8 arch/arch/xtensa/core/libarch__xtensa__core.a(xtensa_asm2_util.S.obj)
 .xt.lit        0x00000000000006c8        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(irq_manage.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x00000000000006c8        0x8 arch/arch/xtensa/core/libarch__xtensa__core.a(thread.c.obj)
 .xt.lit        0x00000000000006d0       0x20 arch/arch/xtensa/core/libarch__xtensa__core.a(vector_handlers.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x00000000000006f0        0x0 arch/arch/xtensa/core/libarch__xtensa__core.a(prep_c.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000006f0       0x18 lib/libc/picolibc/liblib__libc__picolibc.a(libc-hooks.c.obj)
                                         0x90 (size before relaxing)
 .xt.lit        0x0000000000000708        0x8 lib/libc/common/liblib__libc__common.a(abort.c.obj)
 .xt.lit        0x0000000000000710       0x10 lib/libc/common/liblib__libc__common.a(malloc.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000720       0x48 drivers/interrupt_controller/libdrivers__interrupt_controller.a(intc_esp32.c.obj)
                                         0x98 (size before relaxing)
 .xt.lit        0x0000000000000768        0x0 drivers/adc/libdrivers__adc.a(adc_common.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000768        0x8 drivers/adc/libdrivers__adc.a(adc_esp32.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000770       0x28 drivers/clock_control/libdrivers__clock_control.a(clock_control_esp32.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x0000000000000798       0x10 drivers/console/libdrivers__console.a(uart_console.c.obj)
 .xt.lit        0x00000000000007a8       0x30 drivers/gpio/libdrivers__gpio.a(gpio_esp32.c.obj)
                                         0x58 (size before relaxing)
 .xt.lit        0x00000000000007d8        0x8 drivers/pinctrl/libdrivers__pinctrl.a(pinctrl_esp32.c.obj)
 .xt.lit        0x00000000000007e0        0x8 drivers/pwm/libdrivers__pwm.a(pwm_led_esp32.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x00000000000007e8        0x8 drivers/serial/libdrivers__serial.a(uart_esp32.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x00000000000007f0       0x10 drivers/timer/libdrivers__timer.a(xtensa_sys_timer.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000800        0x0 kernel/libkernel.a(device.c.obj)
                                         0x10 (size before relaxing)
 .xt.lit        0x0000000000000800        0x0 kernel/libkernel.a(errno.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000800        0x0 kernel/libkernel.a(fatal.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000800       0x28 kernel/libkernel.a(init.c.obj)
                                         0x48 (size before relaxing)
 .xt.lit        0x0000000000000828       0x20 kernel/libkernel.a(kheap.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000848        0x0 kernel/libkernel.a(idle.c.obj)
                                          0x8 (size before relaxing)
 .xt.lit        0x0000000000000848        0x8 kernel/libkernel.a(mutex.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000850        0x8 kernel/libkernel.a(sem.c.obj)
                                         0x18 (size before relaxing)
 .xt.lit        0x0000000000000858        0x0 kernel/libkernel.a(thread.c.obj)
                                         0x30 (size before relaxing)
 .xt.lit        0x0000000000000858       0x10 kernel/libkernel.a(sched.c.obj)
                                        0x158 (size before relaxing)
 .xt.lit        0x0000000000000868       0x18 kernel/libkernel.a(timeslicing.c.obj)
                                         0x28 (size before relaxing)
 .xt.lit        0x0000000000000880       0x20 kernel/libkernel.a(timeout.c.obj)
                                         0x78 (size before relaxing)
 .xt.lit        0x00000000000008a0        0x8 kernel/libkernel.a(mempool.c.obj)
                                         0x40 (size before relaxing)
 .xt.lit        0x00000000000008a8        0x8 kernel/libkernel.a(banner.c.obj)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_addsubdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_muldf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_divdf3.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfsi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixdfdi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_fixunsdfsi.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_truncdfsf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_extendsfdf2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/xtensa-espressif_esp32s3_zephyr-elf/12.2.0/libgcc.a(_popcountsi2.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strcmp.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_machine_xtensa_strlen.S.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_printf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_snprintf.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008b0        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflprintf.c.o)
 .xt.lit        0x00000000000008b8        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vflscanf.c.o)
                                         0x20 (size before relaxing)
 .xt.lit        0x00000000000008b8        0x8 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_vprintf.c.o)
 .xt.lit        0x00000000000008c0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_fgetc.c.o)
                                          0x8 (size before relaxing)
 .xt.lit        0x00000000000008c0        0x0 /opt/toolchains/zephyr-sdk-0.16.8/xtensa-espressif_esp32s3_zephyr-elf/bin/../lib/gcc/../../picolibc/xtensa-espressif_esp32s3_zephyr-elf/lib/libc.a(libc_tinystdio_ungetc.c.o)
                                          0x8 (size before relaxing)
 *(SORT_BY_ALIGNMENT(.xt.lit.*))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.p.*))

.xt.profile_range
 *(SORT_BY_ALIGNMENT(.xt.profile_range))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.profile_range.*))

.xt.profile_ranges
 *(SORT_BY_ALIGNMENT(.xt.profile_ranges))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_ranges.*))

.xt.profile_files
 *(SORT_BY_ALIGNMENT(.xt.profile_files))
 *(SORT_BY_ALIGNMENT(.gnu.linkonce.xt.profile_files.*))
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_attach = uartAttach)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_intr_matrix_set = intr_matrix_set)
                0x0000000040001a94                PROVIDE (esp_rom_gpio_matrix_in = gpio_matrix_in)
                0x0000000040001aa0                PROVIDE (esp_rom_gpio_matrix_out = gpio_matrix_out)
                0x0000000040000720                PROVIDE (esp_rom_ets_set_appcpu_boot_addr = ets_set_appcpu_boot_addr)
                [!provide]                        PROVIDE (esp_rom_i2c_readReg = rom_i2c_readReg)
                [!provide]                        PROVIDE (esp_rom_i2c_writeReg = rom_i2c_writeReg)
                [!provide]                        PROVIDE (esp_rom_ets_printf = ets_printf)
                [!provide]                        PROVIDE (esp_rom_ets_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_ICache = Cache_Disable_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Disable_DCache = Cache_Disable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Allocate_SRAM = Cache_Allocate_SRAM)
                [!provide]                        PROVIDE (esp_rom_Cache_Suspend_ICache = Cache_Suspend_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Dbus_MMU_Set = Cache_Dbus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Ibus_MMU_Set = Cache_Ibus_MMU_Set)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_ICache_Mode = Cache_Set_ICache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_ICache_All = Cache_Invalidate_ICache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Resume_ICache = Cache_Resume_ICache)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_Addr = Cache_Invalidate_Addr)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                [!provide]                        PROVIDE (esp_rom_Cache_Invalidate_DCache_All = Cache_Invalidate_DCache_All)
                [!provide]                        PROVIDE (esp_rom_Cache_Enable_DCache = Cache_Enable_DCache)
                [!provide]                        PROVIDE (esp_rom_Cache_Set_DCache_Mode = Cache_Set_DCache_Mode)
                0x000000004000057c                rtc_get_reset_reason = 0x4000057c
                0x0000000040000588                analog_super_wdt_reset_happened = 0x40000588
                0x0000000040000594                jtag_cpu_reset_happened = 0x40000594
                0x00000000400005a0                rtc_get_wakeup_cause = 0x400005a0
                0x00000000400005ac                rtc_select_apb_bridge = 0x400005ac
                0x00000000400005b8                rtc_unhold_all_pads = 0x400005b8
                0x00000000400005c4                ets_is_print_boot = 0x400005c4
                0x00000000400005d0                ets_printf = 0x400005d0
                0x00000000400005dc                ets_install_putc1 = 0x400005dc
                0x00000000400005e8                ets_install_uart_printf = 0x400005e8
                0x00000000400005f4                ets_install_putc2 = 0x400005f4
                0x0000000040000600                PROVIDE (ets_delay_us = 0x40000600)
                0x000000004000060c                ets_get_stack_info = 0x4000060c
                0x0000000040000618                ets_install_lock = 0x40000618
                0x0000000040000624                ets_backup_dma_copy = 0x40000624
                0x0000000040000630                ets_apb_backup_init_lock_func = 0x40000630
                0x000000004000063c                UartRxString = 0x4000063c
                0x0000000040000648                uart_tx_one_char = 0x40000648
                0x0000000040000654                uart_tx_one_char2 = 0x40000654
                0x0000000040000660                uart_rx_one_char = 0x40000660
                0x000000004000066c                uart_rx_one_char_block = 0x4000066c
                0x0000000040000678                uart_rx_readbuff = 0x40000678
                0x0000000040000684                uartAttach = 0x40000684
                0x0000000040000690                uart_tx_flush = 0x40000690
                0x000000004000069c                uart_tx_wait_idle = 0x4000069c
                0x00000000400006a8                uart_div_modify = 0x400006a8
                0x00000000400006b4                ets_write_char_uart = 0x400006b4
                0x00000000400006c0                uart_tx_switch = 0x400006c0
                0x00000000400006cc                multofup = 0x400006cc
                0x00000000400006d8                software_reset = 0x400006d8
                0x00000000400006e4                software_reset_cpu = 0x400006e4
                0x00000000400006f0                assist_debug_clock_enable = 0x400006f0
                0x00000000400006fc                assist_debug_record_enable = 0x400006fc
                0x0000000040000708                clear_super_wdt_reset_flag = 0x40000708
                0x0000000040000714                disable_default_watchdog = 0x40000714
                0x0000000040000720                ets_set_appcpu_boot_addr = 0x40000720
                0x000000004000072c                esp_rom_set_rtc_wake_addr = 0x4000072c
                0x0000000040000738                esp_rom_get_rtc_wake_addr = 0x40000738
                0x0000000040000744                send_packet = 0x40000744
                0x0000000040000750                recv_packet = 0x40000750
                0x000000004000075c                GetUartDevice = 0x4000075c
                0x0000000040000768                UartDwnLdProc = 0x40000768
                0x0000000040000774                Uart_Init = 0x40000774
                0x0000000040000780                ets_set_user_start = 0x40000780
                0x000000003ff1fffc                ets_rom_layout_p = 0x3ff1fffc
                0x000000003fcefffc                ets_ops_table_ptr = 0x3fcefffc
                0x000000004000078c                mz_adler32 = 0x4000078c
                0x0000000040000798                mz_crc32 = 0x40000798
                0x00000000400007a4                mz_free = 0x400007a4
                0x00000000400007b0                tdefl_compress = 0x400007b0
                0x00000000400007bc                tdefl_compress_buffer = 0x400007bc
                0x00000000400007c8                tdefl_compress_mem_to_heap = 0x400007c8
                0x00000000400007d4                tdefl_compress_mem_to_mem = 0x400007d4
                0x00000000400007e0                tdefl_compress_mem_to_output = 0x400007e0
                0x00000000400007ec                tdefl_get_adler32 = 0x400007ec
                0x00000000400007f8                tdefl_get_prev_return_status = 0x400007f8
                0x0000000040000804                tdefl_init = 0x40000804
                0x0000000040000810                tdefl_write_image_to_png_file_in_memory = 0x40000810
                0x000000004000081c                tdefl_write_image_to_png_file_in_memory_ex = 0x4000081c
                0x0000000040000828                tinfl_decompress = 0x40000828
                0x0000000040000834                tinfl_decompress_mem_to_callback = 0x40000834
                0x0000000040000840                tinfl_decompress_mem_to_heap = 0x40000840
                0x000000004000084c                tinfl_decompress_mem_to_mem = 0x4000084c
                [!provide]                        PROVIDE (jd_prepare = 0x40000858)
                [!provide]                        PROVIDE (jd_decomp = 0x40000864)
                0x000000003fcefff8                dsps_fft2r_w_table_fc32_1024 = 0x3fcefff8
                [!provide]                        PROVIDE (opi_flash_set_lock_func = 0x40000870)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_config = 0x4000087c)
                [!provide]                        PROVIDE (esp_rom_spi_cmd_start = 0x40000888)
                0x0000000040000894                PROVIDE (esp_rom_opiflash_pin_config = 0x40000894)
                [!provide]                        PROVIDE (esp_rom_spi_set_op_mode = 0x400008a0)
                [!provide]                        PROVIDE (esp_rom_opiflash_mode_reset = 0x400008ac)
                0x00000000400008b8                PROVIDE (esp_rom_opiflash_exec_cmd = 0x400008b8)
                [!provide]                        PROVIDE (esp_rom_opiflash_soft_reset = 0x400008c4)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_id = 0x400008d0)
                [!provide]                        PROVIDE (esp_rom_opiflash_rdsr = 0x400008dc)
                0x00000000400008e8                PROVIDE (esp_rom_opiflash_wait_idle = 0x400008e8)
                0x00000000400008f4                PROVIDE (esp_rom_opiflash_wren = 0x400008f4)
                0x0000000040000900                PROVIDE (esp_rom_opiflash_erase_sector = 0x40000900)
                0x000000004000090c                PROVIDE (esp_rom_opiflash_erase_block_64k = 0x4000090c)
                0x0000000040000918                PROVIDE (esp_rom_opiflash_erase_area = 0x40000918)
                0x0000000040000924                PROVIDE (esp_rom_opiflash_read = 0x40000924)
                0x0000000040000930                PROVIDE (esp_rom_opiflash_write = 0x40000930)
                0x000000004000093c                PROVIDE (esp_rom_spi_set_dtr_swap_mode = 0x4000093c)
                [!provide]                        PROVIDE (esp_rom_opiflash_exit_continuous_read_mode = 0x40000948)
                0x0000000040000954                PROVIDE (esp_rom_opiflash_legacy_driver_init = 0x40000954)
                [!provide]                        PROVIDE (esp_rom_opiflash_read_raw = 0x4004d9d4)
                0x000000003fcefff4                PROVIDE (rom_opiflash_cmd_def = 0x3fcefff4)
                [!provide]                        PROVIDE (rom_spi_usr_cmd_legacy_funcs = 0x3fcefff0)
                0x0000000040000960                PROVIDE (esp_rom_spiflash_wait_idle = 0x40000960)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted = 0x4000096c)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_dest = 0x40000978)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_enable = 0x40000984)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_encrypted_disable = 0x40000990)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_chip = 0x4000099c)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_sector = 0x400009a8)
                [!provide]                        PROVIDE (_esp_rom_spiflash_erase_block = 0x400009b4)
                [!provide]                        PROVIDE (_esp_rom_spiflash_write = 0x400009c0)
                [!provide]                        PROVIDE (_esp_rom_spiflash_read = 0x400009cc)
                [!provide]                        PROVIDE (_esp_rom_spiflash_unlock = 0x400009d8)
                [!provide]                        PROVIDE (_SPIEraseArea = 0x400009e4)
                [!provide]                        PROVIDE (_SPI_write_enable = 0x400009f0)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_sector = 0x400009fc)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_block = 0x40000a08)
                [!provide]                        PROVIDE (esp_rom_spiflash_write = 0x40000a14)
                [!provide]                        PROVIDE (esp_rom_spiflash_read = 0x40000a20)
                [!provide]                        PROVIDE (esp_rom_spiflash_unlock = 0x40000a2c)
                [!provide]                        PROVIDE (SPIEraseArea = 0x40000a38)
                0x0000000040000a44                PROVIDE (SPI_write_enable = 0x40000a44)
                0x0000000040000a50                PROVIDE (esp_rom_spiflash_config_param = 0x40000a50)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_user_cmd = 0x40000a5c)
                0x0000000040000a68                PROVIDE (esp_rom_spiflash_select_qio_pins = 0x40000a68)
                [!provide]                        PROVIDE (esp_rom_spi_flash_auto_sus_res = 0x40000a74)
                [!provide]                        PROVIDE (esp_rom_spi_flash_send_resume = 0x40000a80)
                [!provide]                        PROVIDE (esp_rom_spi_flash_update_id = 0x40000a8c)
                0x0000000040000a98                PROVIDE (esp_rom_spiflash_config_clk = 0x40000a98)
                0x0000000040000aa4                PROVIDE (esp_rom_spiflash_config_readmode = 0x40000aa4)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_status = 0x40000ab0)
                [!provide]                        PROVIDE (esp_rom_spiflash_read_statushigh = 0x40000abc)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_status = 0x40000ac8)
                0x0000000040000ad4                PROVIDE (esp_rom_opiflash_cache_mode_config = 0x40000ad4)
                [!provide]                        PROVIDE (esp_rom_spiflash_auto_wait_idle = 0x40000ae0)
                [!provide]                        PROVIDE (spi_flash_attach = 0x40000aec)
                [!provide]                        PROVIDE (spi_flash_get_chip_size = 0x40000af8)
                [!provide]                        PROVIDE (spi_flash_guard_set = 0x40000b04)
                [!provide]                        PROVIDE (spi_flash_guard_get = 0x40000b10)
                [!provide]                        PROVIDE (spi_flash_write_config_set = 0x40000b1c)
                [!provide]                        PROVIDE (spi_flash_write_config_get = 0x40000b28)
                [!provide]                        PROVIDE (spi_flash_safe_write_address_func_set = 0x40000b34)
                [!provide]                        PROVIDE (spi_flash_unlock = 0x40000b40)
                [!provide]                        PROVIDE (spi_flash_erase_range = 0x40000b4c)
                [!provide]                        PROVIDE (spi_flash_erase_sector = 0x40000b58)
                [!provide]                        PROVIDE (spi_flash_write = 0x40000b64)
                [!provide]                        PROVIDE (spi_flash_read = 0x40000b70)
                [!provide]                        PROVIDE (spi_flash_write_encrypted = 0x40000b7c)
                [!provide]                        PROVIDE (spi_flash_read_encrypted = 0x40000b88)
                [!provide]                        PROVIDE (spi_flash_mmap_os_func_set = 0x40000b94)
                [!provide]                        PROVIDE (spi_flash_mmap_page_num_init = 0x40000ba0)
                [!provide]                        PROVIDE (spi_flash_mmap = 0x40000bac)
                [!provide]                        PROVIDE (spi_flash_mmap_pages = 0x40000bb8)
                [!provide]                        PROVIDE (spi_flash_munmap = 0x40000bc4)
                [!provide]                        PROVIDE (spi_flash_mmap_dump = 0x40000bd0)
                [!provide]                        PROVIDE (spi_flash_check_and_flush_cache = 0x40000bdc)
                [!provide]                        PROVIDE (spi_flash_mmap_get_free_pages = 0x40000be8)
                [!provide]                        PROVIDE (spi_flash_cache2phys = 0x40000bf4)
                [!provide]                        PROVIDE (spi_flash_phys2cache = 0x40000c00)
                [!provide]                        PROVIDE (spi_flash_disable_cache = 0x40000c0c)
                [!provide]                        PROVIDE (spi_flash_restore_cache = 0x40000c18)
                [!provide]                        PROVIDE (spi_flash_cache_enabled = 0x40000c24)
                [!provide]                        PROVIDE (spi_flash_enable_cache = 0x40000c30)
                [!provide]                        PROVIDE (spi_cache_mode_switch = 0x40000c3c)
                [!provide]                        PROVIDE (spi_common_set_dummy_output = 0x40000c48)
                [!provide]                        PROVIDE (spi_common_set_flash_cs_timing = 0x40000c54)
                [!provide]                        PROVIDE (esp_rom_spi_set_address_bit_len = 0x40000c60)
                [!provide]                        PROVIDE (esp_enable_cache_flash_wrap = 0x40000c6c)
                [!provide]                        PROVIDE (SPILock = 0x40000c78)
                [!provide]                        PROVIDE (SPIMasterReadModeCnfig = 0x40000c84)
                [!provide]                        PROVIDE (SPI_Common_Command = 0x40000c90)
                [!provide]                        PROVIDE (SPI_WakeUp = 0x40000c9c)
                [!provide]                        PROVIDE (SPI_block_erase = 0x40000ca8)
                [!provide]                        PROVIDE (SPI_chip_erase = 0x40000cb4)
                [!provide]                        PROVIDE (SPI_init = 0x40000cc0)
                [!provide]                        PROVIDE (SPI_page_program = 0x40000ccc)
                [!provide]                        PROVIDE (SPI_read_data = 0x40000cd8)
                [!provide]                        PROVIDE (SPI_sector_erase = 0x40000ce4)
                [!provide]                        PROVIDE (SelectSpiFunction = 0x40000cf0)
                [!provide]                        PROVIDE (SetSpiDrvs = 0x40000cfc)
                [!provide]                        PROVIDE (Wait_SPI_Idle = 0x40000d08)
                [!provide]                        PROVIDE (spi_dummy_len_fix = 0x40000d14)
                [!provide]                        PROVIDE (Disable_QMode = 0x40000d20)
                [!provide]                        PROVIDE (Enable_QMode = 0x40000d2c)
                0x000000003fceffe8                PROVIDE (rom_spiflash_legacy_funcs = 0x3fceffe8)
                0x000000003fceffe4                PROVIDE (rom_spiflash_legacy_data = 0x3fceffe4)
                [!provide]                        PROVIDE (g_flash_guard_ops = 0x3fceffec)
                [!provide]                        PROVIDE (spi_flash_hal_poll_cmd_done = 0x40000d38)
                [!provide]                        PROVIDE (spi_flash_hal_device_config = 0x40000d44)
                [!provide]                        PROVIDE (spi_flash_hal_configure_host_io_mode = 0x40000d50)
                [!provide]                        PROVIDE (spi_flash_hal_common_command = 0x40000d5c)
                [!provide]                        PROVIDE (spi_flash_hal_read = 0x40000d68)
                [!provide]                        PROVIDE (spi_flash_hal_erase_chip = 0x40000d74)
                [!provide]                        PROVIDE (spi_flash_hal_erase_sector = 0x40000d80)
                [!provide]                        PROVIDE (spi_flash_hal_erase_block = 0x40000d8c)
                [!provide]                        PROVIDE (spi_flash_hal_program_page = 0x40000d98)
                [!provide]                        PROVIDE (spi_flash_hal_set_write_protect = 0x40000da4)
                [!provide]                        PROVIDE (spi_flash_hal_host_idle = 0x40000db0)
                [!provide]                        PROVIDE (wdt_hal_init = 0x40000dbc)
                [!provide]                        PROVIDE (wdt_hal_deinit = 0x40000dc8)
                [!provide]                        PROVIDE (wdt_hal_config_stage = 0x40000dd4)
                [!provide]                        PROVIDE (wdt_hal_write_protect_disable = 0x40000de0)
                [!provide]                        PROVIDE (wdt_hal_write_protect_enable = 0x40000dec)
                [!provide]                        PROVIDE (wdt_hal_enable = 0x40000df8)
                [!provide]                        PROVIDE (wdt_hal_disable = 0x40000e04)
                [!provide]                        PROVIDE (wdt_hal_handle_intr = 0x40000e10)
                [!provide]                        PROVIDE (wdt_hal_feed = 0x40000e1c)
                [!provide]                        PROVIDE (wdt_hal_set_flashboot_en = 0x40000e28)
                [!provide]                        PROVIDE (wdt_hal_is_enabled = 0x40000e34)
                [!provide]                        PROVIDE (systimer_hal_get_counter_value = 0x40000e40)
                [!provide]                        PROVIDE (systimer_hal_get_time = 0x40000e4c)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_target = 0x40000e58)
                [!provide]                        PROVIDE (systimer_hal_set_alarm_period = 0x40000e64)
                [!provide]                        PROVIDE (systimer_hal_get_alarm_value = 0x40000e70)
                [!provide]                        PROVIDE (systimer_hal_enable_alarm_int = 0x40000e7c)
                [!provide]                        PROVIDE (systimer_hal_on_apb_freq_update = 0x40000e88)
                [!provide]                        PROVIDE (systimer_hal_counter_value_advance = 0x40000e94)
                [!provide]                        PROVIDE (systimer_hal_enable_counter = 0x40000ea0)
                [!provide]                        PROVIDE (systimer_hal_init = 0x40000eac)
                [!provide]                        PROVIDE (systimer_hal_select_alarm_mode = 0x40000eb8)
                [!provide]                        PROVIDE (systimer_hal_connect_alarm_counter = 0x40000ec4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_probe = 0x40000ed0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_detect_size = 0x40000edc)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write = 0x40000ee8)
                [!provide]                        PROVIDE (spi_flash_chip_generic_write_encrypted = 0x40000ef4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_write_protect = 0x40000f00)
                [!provide]                        PROVIDE (spi_flash_common_write_status_16b_wrsr = 0x40000f0c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_reset = 0x40000f18)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_chip = 0x40000f24)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_sector = 0x40000f30)
                [!provide]                        PROVIDE (spi_flash_chip_generic_erase_block = 0x40000f3c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_page_program = 0x40000f48)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_write_protect = 0x40000f54)
                [!provide]                        PROVIDE (spi_flash_common_read_status_16b_rdsr_rdsr2 = 0x40000f60)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read_reg = 0x40000f6c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_yield = 0x40000f78)
                [!provide]                        PROVIDE (spi_flash_generic_wait_host_idle = 0x40000f84)
                [!provide]                        PROVIDE (spi_flash_chip_generic_wait_idle = 0x40000f90)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_host_io_mode = 0x40000f9c)
                [!provide]                        PROVIDE (spi_flash_chip_generic_read = 0x40000fa8)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr2 = 0x40000fb4)
                [!provide]                        PROVIDE (spi_flash_chip_generic_get_io_mode = 0x40000fc0)
                [!provide]                        PROVIDE (spi_flash_common_read_status_8b_rdsr = 0x40000fcc)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr = 0x40000fd8)
                [!provide]                        PROVIDE (spi_flash_common_write_status_8b_wrsr2 = 0x40000fe4)
                [!provide]                        PROVIDE (spi_flash_common_set_io_mode = 0x40000ff0)
                [!provide]                        PROVIDE (spi_flash_chip_generic_set_io_mode = 0x40000ffc)
                [!provide]                        PROVIDE (spi_flash_chip_gd_get_io_mode = 0x40001008)
                [!provide]                        PROVIDE (spi_flash_chip_gd_probe = 0x40001014)
                [!provide]                        PROVIDE (spi_flash_chip_gd_set_io_mode = 0x40001020)
                [!provide]                        PROVIDE (spi_flash_chip_generic_config_data = 0x3fceffe0)
                [!provide]                        PROVIDE (memspi_host_read_id_hs = 0x4000102c)
                [!provide]                        PROVIDE (memspi_host_read_status_hs = 0x40001038)
                [!provide]                        PROVIDE (memspi_host_flush_cache = 0x40001044)
                [!provide]                        PROVIDE (memspi_host_erase_chip = 0x40001050)
                [!provide]                        PROVIDE (memspi_host_erase_sector = 0x4000105c)
                [!provide]                        PROVIDE (memspi_host_erase_block = 0x40001068)
                [!provide]                        PROVIDE (memspi_host_program_page = 0x40001074)
                [!provide]                        PROVIDE (memspi_host_read = 0x40001080)
                [!provide]                        PROVIDE (memspi_host_set_write_protect = 0x4000108c)
                [!provide]                        PROVIDE (memspi_host_set_max_read_len = 0x40001098)
                [!provide]                        PROVIDE (memspi_host_read_data_slicer = 0x400010a4)
                [!provide]                        PROVIDE (memspi_host_write_data_slicer = 0x400010b0)
                [!provide]                        PROVIDE (esp_flash_chip_driver_initialized = 0x400010bc)
                [!provide]                        PROVIDE (esp_flash_read_id = 0x400010c8)
                [!provide]                        PROVIDE (esp_flash_get_size = 0x400010d4)
                [!provide]                        PROVIDE (esp_flash_erase_chip = 0x400010e0)
                [!provide]                        PROVIDE (rom_esp_flash_erase_region = 0x400010ec)
                [!provide]                        PROVIDE (esp_flash_get_chip_write_protect = 0x400010f8)
                [!provide]                        PROVIDE (esp_flash_set_chip_write_protect = 0x40001104)
                [!provide]                        PROVIDE (esp_flash_get_protectable_regions = 0x40001110)
                [!provide]                        PROVIDE (esp_flash_get_protected_region = 0x4000111c)
                [!provide]                        PROVIDE (esp_flash_set_protected_region = 0x40001128)
                [!provide]                        PROVIDE (esp_flash_read = 0x40001134)
                [!provide]                        PROVIDE (esp_flash_write = 0x40001140)
                [!provide]                        PROVIDE (esp_flash_write_encrypted = 0x4000114c)
                [!provide]                        PROVIDE (esp_flash_read_encrypted = 0x40001158)
                [!provide]                        PROVIDE (esp_flash_get_io_mode = 0x40001164)
                [!provide]                        PROVIDE (esp_flash_set_io_mode = 0x40001170)
                [!provide]                        PROVIDE (spi_flash_boot_attach = 0x4000117c)
                [!provide]                        PROVIDE (spi_flash_dump_counters = 0x40001188)
                [!provide]                        PROVIDE (spi_flash_get_counters = 0x40001194)
                [!provide]                        PROVIDE (spi_flash_op_counters_config = 0x400011a0)
                [!provide]                        PROVIDE (spi_flash_reset_counters = 0x400011ac)
                [!provide]                        PROVIDE (esp_flash_read_chip_id = 0x400011b8)
                [!provide]                        PROVIDE (detect_spi_flash_chip = 0x400011c4)
                [!provide]                        PROVIDE (esp_rom_spiflash_write_disable = 0x400011d0)
                [!provide]                        PROVIDE (esp_flash_default_chip = 0x3fceffdc)
                [!provide]                        PROVIDE (esp_flash_api_funcs = 0x3fceffd8)
                0x00000000400015fc                PROVIDE (Cache_Get_ICache_Line_Size = 0x400015fc)
                0x0000000040001608                PROVIDE (Cache_Get_DCache_Line_Size = 0x40001608)
                [!provide]                        PROVIDE (Cache_Get_Mode = 0x40001614)
                [!provide]                        PROVIDE (Cache_Set_ICache_Mode = 0x40001620)
                [!provide]                        PROVIDE (Cache_Set_DCache_Mode = 0x4000162c)
                [!provide]                        PROVIDE (Cache_Address_Through_ICache = 0x40001638)
                [!provide]                        PROVIDE (Cache_Address_Through_DCache = 0x40001644)
                [!provide]                        PROVIDE (Cache_Set_Default_Mode = 0x40001650)
                [!provide]                        PROVIDE (Cache_Enable_Defalut_ICache_Mode = 0x4000165c)
                0x0000000040001668                PROVIDE (ROM_Boot_Cache_Init = 0x40001668)
                [!provide]                        PROVIDE (Cache_Invalidate_ICache_Items = 0x40001674)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_Items = 0x40001680)
                [!provide]                        PROVIDE (Cache_Clean_Items = 0x4000168c)
                [!provide]                        PROVIDE (Cache_WriteBack_Items = 0x40001698)
                [!provide]                        PROVIDE (Cache_Op_Addr = 0x400016a4)
                0x00000000400016b0                PROVIDE (Cache_Invalidate_Addr = 0x400016b0)
                [!provide]                        PROVIDE (Cache_Clean_Addr = 0x400016bc)
                0x00000000400016c8                PROVIDE (Cache_WriteBack_Addr = 0x400016c8)
                0x00000000400016d4                PROVIDE (Cache_Invalidate_ICache_All = 0x400016d4)
                [!provide]                        PROVIDE (Cache_Invalidate_DCache_All = 0x400016e0)
                [!provide]                        PROVIDE (Cache_Clean_All = 0x400016ec)
                [!provide]                        PROVIDE (Cache_WriteBack_All = 0x400016f8)
                [!provide]                        PROVIDE (Cache_Mask_All = 0x40001704)
                [!provide]                        PROVIDE (Cache_UnMask_Dram0 = 0x40001710)
                [!provide]                        PROVIDE (Cache_Suspend_ICache_Autoload = 0x4000171c)
                [!provide]                        PROVIDE (Cache_Resume_ICache_Autoload = 0x40001728)
                [!provide]                        PROVIDE (Cache_Suspend_DCache_Autoload = 0x40001734)
                [!provide]                        PROVIDE (Cache_Resume_DCache_Autoload = 0x40001740)
                [!provide]                        PROVIDE (Cache_Start_ICache_Preload = 0x4000174c)
                [!provide]                        PROVIDE (Cache_ICache_Preload_Done = 0x40001758)
                [!provide]                        PROVIDE (Cache_End_ICache_Preload = 0x40001764)
                [!provide]                        PROVIDE (Cache_Start_DCache_Preload = 0x40001770)
                [!provide]                        PROVIDE (Cache_DCache_Preload_Done = 0x4000177c)
                [!provide]                        PROVIDE (Cache_End_DCache_Preload = 0x40001788)
                [!provide]                        PROVIDE (Cache_Config_ICache_Autoload = 0x40001794)
                [!provide]                        PROVIDE (Cache_Config_ICache_Region_Autoload = 0x400017a0)
                [!provide]                        PROVIDE (Cache_Enable_ICache_Autoload = 0x400017ac)
                [!provide]                        PROVIDE (Cache_Disable_ICache_Autoload = 0x400017b8)
                [!provide]                        PROVIDE (Cache_Config_DCache_Autoload = 0x400017c4)
                [!provide]                        PROVIDE (Cache_Config_DCache_Region_Autoload = 0x400017d0)
                [!provide]                        PROVIDE (Cache_Enable_DCache_Autoload = 0x400017dc)
                [!provide]                        PROVIDE (Cache_Disable_DCache_Autoload = 0x400017e8)
                [!provide]                        PROVIDE (Cache_Enable_ICache_PreLock = 0x400017f4)
                [!provide]                        PROVIDE (Cache_Disable_ICache_PreLock = 0x40001800)
                [!provide]                        PROVIDE (Cache_Lock_ICache_Items = 0x4000180c)
                [!provide]                        PROVIDE (Cache_Unlock_ICache_Items = 0x40001818)
                [!provide]                        PROVIDE (Cache_Enable_DCache_PreLock = 0x40001824)
                [!provide]                        PROVIDE (Cache_Disable_DCache_PreLock = 0x40001830)
                [!provide]                        PROVIDE (Cache_Lock_DCache_Items = 0x4000183c)
                [!provide]                        PROVIDE (Cache_Unlock_DCache_Items = 0x40001848)
                [!provide]                        PROVIDE (Cache_Lock_Addr = 0x40001854)
                [!provide]                        PROVIDE (Cache_Unlock_Addr = 0x40001860)
                0x000000004000186c                PROVIDE (Cache_Disable_ICache = 0x4000186c)
                0x0000000040001878                PROVIDE (Cache_Enable_ICache = 0x40001878)
                0x0000000040001884                PROVIDE (Cache_Disable_DCache = 0x40001884)
                0x0000000040001890                PROVIDE (Cache_Enable_DCache = 0x40001890)
                0x000000004000189c                PROVIDE (rom_Cache_Suspend_ICache = 0x4000189c)
                0x00000000400018a8                PROVIDE (Cache_Resume_ICache = 0x400018a8)
                0x00000000400018b4                PROVIDE (rom_Cache_Suspend_DCache = 0x400018b4)
                0x00000000400018c0                PROVIDE (Cache_Resume_DCache = 0x400018c0)
                [!provide]                        PROVIDE (Cache_Occupy_Items = 0x400018cc)
                [!provide]                        PROVIDE (Cache_Occupy_Addr = 0x400018d8)
                0x00000000400018e4                PROVIDE (rom_Cache_Freeze_ICache_Enable = 0x400018e4)
                0x00000000400018f0                PROVIDE (Cache_Freeze_ICache_Disable = 0x400018f0)
                0x00000000400018fc                PROVIDE (rom_Cache_Freeze_DCache_Enable = 0x400018fc)
                0x0000000040001908                PROVIDE (Cache_Freeze_DCache_Disable = 0x40001908)
                0x0000000040001914                PROVIDE (Cache_Set_IDROM_MMU_Size = 0x40001914)
                [!provide]                        PROVIDE (flash2spiram_instruction_offset = 0x40001920)
                [!provide]                        PROVIDE (flash2spiram_rodata_offset = 0x4000192c)
                [!provide]                        PROVIDE (flash_instr_rodata_start_page = 0x40001938)
                [!provide]                        PROVIDE (flash_instr_rodata_end_page = 0x40001944)
                0x0000000040001950                PROVIDE (Cache_Set_IDROM_MMU_Info = 0x40001950)
                [!provide]                        PROVIDE (Cache_Get_IROM_MMU_End = 0x4000195c)
                [!provide]                        PROVIDE (Cache_Get_DROM_MMU_End = 0x40001968)
                [!provide]                        PROVIDE (Cache_Owner_Init = 0x40001974)
                [!provide]                        PROVIDE (Cache_Occupy_ICache_MEMORY = 0x40001980)
                [!provide]                        PROVIDE (Cache_Occupy_DCache_MEMORY = 0x4000198c)
                [!provide]                        PROVIDE (Cache_MMU_Init = 0x40001998)
                [!provide]                        PROVIDE (Cache_Ibus_MMU_Set = 0x400019a4)
                [!provide]                        PROVIDE (Cache_Dbus_MMU_Set = 0x400019b0)
                0x00000000400019bc                PROVIDE (rom_Cache_Count_Flash_Pages = 0x400019bc)
                [!provide]                        PROVIDE (Cache_Flash_To_SPIRAM_Copy = 0x400019c8)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory = 0x400019d4)
                [!provide]                        PROVIDE (Cache_Travel_Tag_Memory2 = 0x400019e0)
                [!provide]                        PROVIDE (Cache_Get_Virtual_Addr = 0x400019ec)
                [!provide]                        PROVIDE (Cache_Get_Memory_BaseAddr = 0x400019f8)
                [!provide]                        PROVIDE (Cache_Get_Memory_Addr = 0x40001a04)
                [!provide]                        PROVIDE (Cache_Get_Memory_value = 0x40001a10)
                0x0000000040001a1c                PROVIDE (rom_config_instruction_cache_mode = 0x40001a1c)
                0x0000000040001a28                PROVIDE (rom_config_data_cache_mode = 0x40001a28)
                [!provide]                        PROVIDE (rom_cache_op_cb = 0x3fceffc8)
                [!provide]                        PROVIDE (rom_cache_internal_table_ptr = 0x3fceffc4)
                0x0000000040001a34                ets_get_apb_freq = 0x40001a34
                0x0000000040001a40                ets_get_cpu_frequency = 0x40001a40
                0x0000000040001a4c                ets_update_cpu_frequency = 0x40001a4c
                0x0000000040001a58                ets_get_printf_channel = 0x40001a58
                0x0000000040001a64                ets_get_xtal_div = 0x40001a64
                0x0000000040001a70                ets_set_xtal_div = 0x40001a70
                0x0000000040001a7c                ets_get_xtal_freq = 0x40001a7c
                0x0000000040001a88                gpio_input_get = 0x40001a88
                0x0000000040001a94                gpio_matrix_in = 0x40001a94
                0x0000000040001aa0                gpio_matrix_out = 0x40001aa0
                0x0000000040001aac                gpio_output_disable = 0x40001aac
                0x0000000040001ab8                gpio_output_enable = 0x40001ab8
                0x0000000040001ac4                gpio_output_set = 0x40001ac4
                0x0000000040001ad0                gpio_pad_hold = 0x40001ad0
                0x0000000040001adc                gpio_pad_input_disable = 0x40001adc
                0x0000000040001ae8                gpio_pad_input_enable = 0x40001ae8
                0x0000000040001af4                gpio_pad_pulldown = 0x40001af4
                0x0000000040001b00                gpio_pad_pullup = 0x40001b00
                0x0000000040001b0c                gpio_pad_select_gpio = 0x40001b0c
                0x0000000040001b18                gpio_pad_set_drv = 0x40001b18
                0x0000000040001b24                gpio_pad_unhold = 0x40001b24
                0x0000000040001b30                gpio_pin_wakeup_disable = 0x40001b30
                0x0000000040001b3c                gpio_pin_wakeup_enable = 0x40001b3c
                0x0000000040001b48                gpio_bypass_matrix_in = 0x40001b48
                0x0000000040001b54                intr_matrix_set = 0x40001b54
                0x0000000040001b60                ets_intr_lock = 0x40001b60
                0x0000000040001b6c                ets_intr_unlock = 0x40001b6c
                0x0000000040001b78                ets_isr_attach = 0x40001b78
                0x0000000040001b84                ets_isr_mask = 0x40001b84
                0x0000000040001b90                ets_isr_unmask = 0x40001b90
                0x0000000040001b9c                xthal_bcopy = 0x40001b9c
                0x0000000040001ba8                xthal_memcpy = 0x40001ba8
                0x0000000040001bb4                xthal_get_ccompare = 0x40001bb4
                0x0000000040001bc0                xthal_set_ccompare = 0x40001bc0
                0x0000000040001bcc                xthal_get_ccount = 0x40001bcc
                0x0000000040001bd8                xthal_get_interrupt = 0x40001bd8
                0x0000000040001be4                xthal_set_intclear = 0x40001be4
                0x0000000040001bf0                _xtos_ints_off = 0x40001bf0
                0x0000000040001bfc                _xtos_ints_on = 0x40001bfc
                0x0000000040001c08                _xtos_restore_intlevel = 0x40001c08
                0x0000000040001c14                _xtos_set_exception_handler = 0x40001c14
                0x0000000040001c20                _xtos_set_interrupt_handler = 0x40001c20
                0x0000000040001c2c                _xtos_set_interrupt_handler_arg = 0x40001c2c
                0x0000000040001c38                _xtos_set_intlevel = 0x40001c38
                0x0000000040001c44                _xtos_set_vpri = 0x40001c44
                0x0000000040001c50                md5_vector = 0x40001c50
                0x0000000040001c5c                MD5Init = 0x40001c5c
                0x0000000040001c68                MD5Update = 0x40001c68
                0x0000000040001c74                MD5Final = 0x40001c74
                0x0000000040001c80                hmac_md5_vector = 0x40001c80
                0x0000000040001c8c                hmac_md5 = 0x40001c8c
                0x0000000040001c98                crc32_le = 0x40001c98
                0x0000000040001ca4                crc32_be = 0x40001ca4
                0x0000000040001cb0                crc16_le = 0x40001cb0
                0x0000000040001cbc                crc16_be = 0x40001cbc
                0x0000000040001cc8                crc8_le = 0x40001cc8
                0x0000000040001cd4                crc8_be = 0x40001cd4
                0x0000000040001ce0                esp_crc8 = 0x40001ce0
                0x0000000040001cec                ets_sha_enable = 0x40001cec
                0x0000000040001cf8                ets_sha_disable = 0x40001cf8
                0x0000000040001d04                ets_sha_get_state = 0x40001d04
                0x0000000040001d10                ets_sha_init = 0x40001d10
                0x0000000040001d1c                ets_sha_process = 0x40001d1c
                0x0000000040001d28                ets_sha_starts = 0x40001d28
                0x0000000040001d34                ets_sha_update = 0x40001d34
                0x0000000040001d40                ets_sha_finish = 0x40001d40
                0x0000000040001d4c                ets_sha_clone = 0x40001d4c
                0x0000000040001d58                ets_hmac_enable = 0x40001d58
                0x0000000040001d64                ets_hmac_disable = 0x40001d64
                0x0000000040001d70                ets_hmac_calculate_message = 0x40001d70
                0x0000000040001d7c                ets_hmac_calculate_downstream = 0x40001d7c
                0x0000000040001d88                ets_hmac_invalidate_downstream = 0x40001d88
                0x0000000040001d94                ets_jtag_enable_temporarily = 0x40001d94
                0x0000000040001da0                ets_aes_enable = 0x40001da0
                0x0000000040001dac                ets_aes_disable = 0x40001dac
                0x0000000040001db8                ets_aes_setkey = 0x40001db8
                0x0000000040001dc4                ets_aes_block = 0x40001dc4
                0x0000000040001dd0                ets_bigint_enable = 0x40001dd0
                0x0000000040001ddc                ets_bigint_disable = 0x40001ddc
                0x0000000040001de8                ets_bigint_multiply = 0x40001de8
                0x0000000040001df4                ets_bigint_modmult = 0x40001df4
                0x0000000040001e00                ets_bigint_modexp = 0x40001e00
                0x0000000040001e0c                ets_bigint_wait_finish = 0x40001e0c
                0x0000000040001e18                ets_bigint_getz = 0x40001e18
                0x0000000040001e24                ets_ds_enable = 0x40001e24
                0x0000000040001e30                ets_ds_disable = 0x40001e30
                0x0000000040001e3c                ets_ds_start_sign = 0x40001e3c
                0x0000000040001e48                ets_ds_is_busy = 0x40001e48
                0x0000000040001e54                ets_ds_finish_sign = 0x40001e54
                0x0000000040001e60                ets_ds_encrypt_params = 0x40001e60
                0x0000000040001e6c                ets_aes_setkey_dec = 0x40001e6c
                0x0000000040001e78                ets_aes_setkey_enc = 0x40001e78
                0x0000000040001e84                ets_mgf1_sha256 = 0x40001e84
                0x0000000040001e90                ets_efuse_read = 0x40001e90
                0x0000000040001e9c                ets_efuse_program = 0x40001e9c
                0x0000000040001ea8                ets_efuse_clear_program_registers = 0x40001ea8
                0x0000000040001eb4                ets_efuse_write_key = 0x40001eb4
                0x0000000040001ec0                ets_efuse_get_read_register_address = 0x40001ec0
                0x0000000040001ecc                ets_efuse_get_key_purpose = 0x40001ecc
                0x0000000040001ed8                ets_efuse_key_block_unused = 0x40001ed8
                0x0000000040001ee4                ets_efuse_find_unused_key_block = 0x40001ee4
                0x0000000040001ef0                ets_efuse_rs_calculate = 0x40001ef0
                0x0000000040001efc                ets_efuse_count_unused_key_blocks = 0x40001efc
                0x0000000040001f08                ets_efuse_secure_boot_enabled = 0x40001f08
                0x0000000040001f14                ets_efuse_secure_boot_aggressive_revoke_enabled = 0x40001f14
                0x0000000040001f20                ets_efuse_cache_encryption_enabled = 0x40001f20
                0x0000000040001f2c                ets_efuse_download_modes_disabled = 0x40001f2c
                0x0000000040001f38                ets_efuse_find_purpose = 0x40001f38
                0x0000000040001f44                ets_efuse_flash_opi_5pads_power_sel_vddspi = 0x40001f44
                0x0000000040001f50                ets_efuse_force_send_resume = 0x40001f50
                0x0000000040001f5c                ets_efuse_get_flash_delay_us = 0x40001f5c
                0x0000000040001f68                ets_efuse_get_mac = 0x40001f68
                0x0000000040001f74                ets_efuse_get_spiconfig = 0x40001f74
                0x0000000040001f80                ets_efuse_usb_print_is_disabled = 0x40001f80
                0x0000000040001f8c                ets_efuse_usb_serial_jtag_print_is_disabled = 0x40001f8c
                0x0000000040001f98                ets_efuse_get_uart_print_control = 0x40001f98
                0x0000000040001fa4                ets_efuse_get_wp_pad = 0x40001fa4
                0x0000000040001fb0                ets_efuse_legacy_spi_boot_mode_disabled = 0x40001fb0
                0x0000000040001fbc                ets_efuse_security_download_modes_enabled = 0x40001fbc
                0x0000000040001fc8                ets_efuse_set_timing = 0x40001fc8
                0x0000000040001fd4                ets_efuse_jtag_disabled = 0x40001fd4
                0x0000000040001fe0                ets_efuse_usb_download_mode_disabled = 0x40001fe0
                0x0000000040001fec                ets_efuse_usb_module_disabled = 0x40001fec
                0x0000000040001ff8                ets_efuse_usb_device_disabled = 0x40001ff8
                0x0000000040002004                ets_efuse_flash_octal_mode = 0x40002004
                0x0000000040002010                ets_efuse_ecc_en = 0x40002010
                0x000000004000201c                ets_efuse_ecc_flash_page_size = 0x4000201c
                0x0000000040002028                ets_efuse_ecc_16to17_mode = 0x40002028
                0x0000000040002034                ets_ecc_flash_enable = 0x40002034
                0x0000000040002040                ets_ecc_flash_enable_all = 0x40002040
                0x000000004000204c                ets_ecc_flash_disable = 0x4000204c
                0x0000000040002058                ets_ecc_flash_disable_all = 0x40002058
                0x0000000040002064                ets_ecc_get_flash_page_size = 0x40002064
                0x0000000040002070                ets_ecc_set_flash_page_size = 0x40002070
                0x000000004000207c                ets_ecc_set_flash_byte_mode = 0x4000207c
                0x0000000040002088                ets_ecc_get_flash_byte_mode = 0x40002088
                0x0000000040002094                ets_ecc_set_flash_range = 0x40002094
                0x00000000400020a0                ets_ecc_get_flash_range = 0x400020a0
                0x00000000400020ac                ets_ecc_sram_enable = 0x400020ac
                0x00000000400020b8                ets_ecc_sram_disable = 0x400020b8
                0x00000000400020c4                ets_ecc_sram_enable_all = 0x400020c4
                0x00000000400020d0                ets_ecc_sram_disable_all = 0x400020d0
                0x00000000400020dc                ets_ecc_get_sram_page_size = 0x400020dc
                0x00000000400020e8                ets_ecc_set_sram_page_size = 0x400020e8
                0x00000000400020f4                ets_ecc_get_sram_byte_mode = 0x400020f4
                0x0000000040002100                ets_ecc_set_sram_byte_mode = 0x40002100
                0x000000004000210c                ets_ecc_set_sram_range = 0x4000210c
                0x0000000040002118                ets_ecc_get_sram_range = 0x40002118
                0x000000003fceffc0                ets_ecc_table_ptr = 0x3fceffc0
                0x0000000040002124                ets_emsa_pss_verify = 0x40002124
                0x0000000040002130                ets_rsa_pss_verify = 0x40002130
                0x000000004000213c                ets_secure_boot_verify_bootloader_with_keys = 0x4000213c
                0x0000000040002148                ets_secure_boot_verify_signature = 0x40002148
                0x0000000040002154                ets_secure_boot_read_key_digests = 0x40002154
                0x0000000040002160                ets_secure_boot_revoke_public_key_digest = 0x40002160
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char = 0x400025a4)
                [!provide]                        PROVIDE (usb_uart_otg_rx_one_char_block = 0x400025b0)
                [!provide]                        PROVIDE (usb_uart_otg_tx_flush = 0x400025bc)
                [!provide]                        PROVIDE (usb_uart_otg_tx_one_char = 0x400025c8)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char = 0x400025d4)
                [!provide]                        PROVIDE (usb_uart_device_rx_one_char_block = 0x400025e0)
                [!provide]                        PROVIDE (usb_uart_device_tx_flush = 0x400025ec)
                [!provide]                        PROVIDE (usb_uart_device_tx_one_char = 0x400025f8)
                [!provide]                        PROVIDE (Uart_Init_USB = 0x40002604)
                [!provide]                        PROVIDE (uart_acm_dev = 0x3fceffbc)
                0x000000003fceffb9                PROVIDE (g_uart_print = 0x3fceffb9)
                0x000000003fceffb8                PROVIDE (g_usb_print = 0x3fceffb8)
                0x0000000040002610                cdc_acm_class_handle_req = 0x40002610
                0x000000004000261c                cdc_acm_init = 0x4000261c
                0x0000000040002628                cdc_acm_fifo_fill = 0x40002628
                0x0000000040002634                cdc_acm_rx_fifo_cnt = 0x40002634
                0x0000000040002640                cdc_acm_fifo_read = 0x40002640
                0x000000004000264c                cdc_acm_irq_tx_enable = 0x4000264c
                0x0000000040002658                cdc_acm_irq_tx_disable = 0x40002658
                0x0000000040002664                cdc_acm_irq_state_enable = 0x40002664
                0x0000000040002670                cdc_acm_irq_state_disable = 0x40002670
                0x000000004000267c                cdc_acm_irq_tx_ready = 0x4000267c
                0x0000000040002688                cdc_acm_irq_rx_enable = 0x40002688
                0x0000000040002694                cdc_acm_irq_rx_disable = 0x40002694
                0x00000000400026a0                cdc_acm_irq_rx_ready = 0x400026a0
                0x00000000400026ac                cdc_acm_irq_is_pending = 0x400026ac
                0x00000000400026b8                cdc_acm_irq_callback_set = 0x400026b8
                0x00000000400026c4                cdc_acm_line_ctrl_set = 0x400026c4
                0x00000000400026d0                cdc_acm_line_ctrl_get = 0x400026d0
                0x00000000400026dc                cdc_acm_poll_out = 0x400026dc
                0x00000000400026e8                chip_usb_dw_did_persist = 0x400026e8
                0x00000000400026f4                chip_usb_dw_init = 0x400026f4
                0x0000000040002700                chip_usb_detach = 0x40002700
                0x000000004000270c                chip_usb_dw_prepare_persist = 0x4000270c
                0x0000000040002718                chip_usb_get_persist_flags = 0x40002718
                0x0000000040002724                chip_usb_set_persist_flags = 0x40002724
                0x0000000040002730                cpio_start = 0x40002730
                0x000000004000273c                cpio_feed = 0x4000273c
                0x0000000040002748                cpio_done = 0x40002748
                0x0000000040002754                cpio_destroy = 0x40002754
                0x0000000040002760                dfu_flash_init = 0x40002760
                0x000000004000276c                dfu_flash_erase = 0x4000276c
                0x0000000040002778                dfu_flash_program = 0x40002778
                0x0000000040002784                dfu_flash_read = 0x40002784
                0x0000000040002790                dfu_flash_attach = 0x40002790
                0x000000004000279c                dfu_cpio_callback = 0x4000279c
                0x00000000400027a8                dfu_updater_get_err = 0x400027a8
                0x00000000400027b4                dfu_updater_clear_err = 0x400027b4
                0x00000000400027c0                dfu_updater_enable = 0x400027c0
                0x00000000400027cc                dfu_updater_begin = 0x400027cc
                0x00000000400027d8                dfu_updater_feed = 0x400027d8
                0x00000000400027e4                dfu_updater_end = 0x400027e4
                0x00000000400027f0                dfu_updater_set_raw_addr = 0x400027f0
                0x00000000400027fc                dfu_updater_flash_read = 0x400027fc
                0x0000000040002808                usb_dc_prepare_persist = 0x40002808
                0x0000000040002814                usb_dw_isr_handler = 0x40002814
                0x0000000040002820                usb_dc_attach = 0x40002820
                0x000000004000282c                usb_dc_detach = 0x4000282c
                0x0000000040002838                usb_dc_reset = 0x40002838
                0x0000000040002844                usb_dc_set_address = 0x40002844
                0x0000000040002850                usb_dc_ep_check_cap = 0x40002850
                0x000000004000285c                usb_dc_ep_configure = 0x4000285c
                0x0000000040002868                usb_dc_ep_set_stall = 0x40002868
                0x0000000040002874                usb_dc_ep_clear_stall = 0x40002874
                0x0000000040002880                usb_dc_ep_halt = 0x40002880
                0x000000004000288c                usb_dc_ep_is_stalled = 0x4000288c
                0x0000000040002898                usb_dc_ep_enable = 0x40002898
                0x00000000400028a4                usb_dc_ep_disable = 0x400028a4
                0x00000000400028b0                usb_dc_ep_flush = 0x400028b0
                0x00000000400028bc                usb_dc_ep_write_would_block = 0x400028bc
                0x00000000400028c8                usb_dc_ep_write = 0x400028c8
                0x00000000400028d4                usb_dc_ep_read_wait = 0x400028d4
                0x00000000400028e0                usb_dc_ep_read_continue = 0x400028e0
                0x00000000400028ec                usb_dc_ep_read = 0x400028ec
                0x00000000400028f8                usb_dc_ep_set_callback = 0x400028f8
                0x0000000040002904                usb_dc_set_status_callback = 0x40002904
                0x0000000040002910                usb_dc_ep_mps = 0x40002910
                0x000000004000291c                usb_dc_check_poll_for_interrupts = 0x4000291c
                0x0000000040002928                mac_addr_to_serial_str_desc = 0x40002928
                0x0000000040002934                usb_set_current_descriptor = 0x40002934
                0x0000000040002940                usb_get_descriptor = 0x40002940
                0x000000004000294c                usb_dev_resume = 0x4000294c
                0x0000000040002958                usb_dev_get_configuration = 0x40002958
                0x0000000040002964                usb_set_config = 0x40002964
                0x0000000040002970                usb_deconfig = 0x40002970
                0x000000004000297c                usb_enable = 0x4000297c
                0x0000000040002988                usb_disable = 0x40002988
                0x0000000040002994                usb_write_would_block = 0x40002994
                0x00000000400029a0                usb_write = 0x400029a0
                0x00000000400029ac                usb_read = 0x400029ac
                0x00000000400029b8                usb_ep_set_stall = 0x400029b8
                0x00000000400029c4                usb_ep_clear_stall = 0x400029c4
                0x00000000400029d0                usb_ep_read_wait = 0x400029d0
                0x00000000400029dc                usb_ep_read_continue = 0x400029dc
                0x00000000400029e8                usb_transfer_ep_callback = 0x400029e8
                0x00000000400029f4                usb_transfer = 0x400029f4
                0x0000000040002a00                usb_cancel_transfer = 0x40002a00
                0x0000000040002a0c                usb_transfer_sync = 0x40002a0c
                0x0000000040002a18                usb_dfu_set_detach_cb = 0x40002a18
                0x0000000040002a24                dfu_class_handle_req = 0x40002a24
                0x0000000040002a30                dfu_status_cb = 0x40002a30
                0x0000000040002a3c                dfu_custom_handle_req = 0x40002a3c
                0x0000000040002a48                usb_dfu_init = 0x40002a48
                0x0000000040002a54                usb_dfu_force_detach = 0x40002a54
                0x0000000040002a60                usb_dev_deinit = 0x40002a60
                0x0000000040002a6c                usb_dw_ctrl_deinit = 0x40002a6c
                0x000000003fceffac                s_usb_osglue = 0x3fceffac
                0x0000000040002a78                bt_rf_coex_get_dft_cfg = 0x40002a78
                0x0000000040002a84                bt_rf_coex_hooks_p_set = 0x40002a84
                0x0000000040002a90                btdm_con_maxevtime_cal_impl = 0x40002a90
                0x0000000040002a9c                btdm_controller_get_compile_version_impl = 0x40002a9c
                0x0000000040002aa8                btdm_controller_rom_data_init = 0x40002aa8
                0x0000000040002ab4                btdm_dis_privacy_err_report_impl = 0x40002ab4
                0x0000000040002ac0                btdm_disable_adv_delay_impl = 0x40002ac0
                0x0000000040002acc                btdm_enable_scan_continue_impl = 0x40002acc
                0x0000000040002ad8                btdm_enable_scan_forever_impl = 0x40002ad8
                0x0000000040002ae4                btdm_get_power_state_impl = 0x40002ae4
                0x0000000040002af0                btdm_get_prevent_sleep_flag_impl = 0x40002af0
                0x0000000040002afc                btdm_power_state_active_impl = 0x40002afc
                0x0000000040002b08                btdm_switch_phy_coded_impl = 0x40002b08
                0x0000000040002b14                hci_acl_data_handler = 0x40002b14
                0x0000000040002b20                hci_disconnect_cmd_handler = 0x40002b20
                0x0000000040002b2c                hci_le_con_upd_cmd_handler = 0x40002b2c
                0x0000000040002b38                hci_le_ltk_req_neg_reply_cmd_handler = 0x40002b38
                0x0000000040002b44                hci_le_ltk_req_reply_cmd_handler = 0x40002b44
                0x0000000040002b50                hci_le_rd_chnl_map_cmd_handler = 0x40002b50
                0x0000000040002b5c                hci_le_rd_phy_cmd_handler = 0x40002b5c
                0x0000000040002b68                hci_le_rd_rem_feats_cmd_handler = 0x40002b68
                0x0000000040002b74                hci_le_rem_con_param_req_neg_reply_cmd_handler = 0x40002b74
                0x0000000040002b80                hci_le_rem_con_param_req_reply_cmd_handler = 0x40002b80
                0x0000000040002b8c                hci_le_set_data_len_cmd_handler = 0x40002b8c
                0x0000000040002b98                hci_le_set_phy_cmd_handler = 0x40002b98
                0x0000000040002ba4                hci_le_start_enc_cmd_handler = 0x40002ba4
                0x0000000040002bb0                hci_rd_auth_payl_to_cmd_handler = 0x40002bb0
                0x0000000040002bbc                hci_rd_rem_ver_info_cmd_handler = 0x40002bbc
                0x0000000040002bc8                hci_rd_rssi_cmd_handler = 0x40002bc8
                0x0000000040002bd4                hci_rd_tx_pwr_lvl_cmd_handler = 0x40002bd4
                0x0000000040002be0                hci_vs_set_pref_slave_evt_dur_cmd_handler = 0x40002be0
                0x0000000040002bec                hci_vs_set_pref_slave_latency_cmd_handler = 0x40002bec
                0x0000000040002bf8                hci_wr_auth_payl_to_cmd_handler = 0x40002bf8
                0x0000000040002c04                ll_channel_map_ind_handler = 0x40002c04
                0x0000000040002c10                ll_connection_param_req_handler = 0x40002c10
                0x0000000040002c1c                ll_connection_param_rsp_handler = 0x40002c1c
                0x0000000040002c28                ll_connection_update_ind_handler = 0x40002c28
                0x0000000040002c34                ll_enc_req_handler = 0x40002c34
                0x0000000040002c40                ll_enc_rsp_handler = 0x40002c40
                0x0000000040002c4c                ll_feature_req_handler = 0x40002c4c
                0x0000000040002c58                ll_feature_rsp_handler = 0x40002c58
                0x0000000040002c64                ll_length_req_handler = 0x40002c64
                0x0000000040002c70                ll_length_rsp_handler = 0x40002c70
                0x0000000040002c7c                ll_min_used_channels_ind_handler = 0x40002c7c
                0x0000000040002c88                ll_pause_enc_req_handler = 0x40002c88
                0x0000000040002c94                ll_pause_enc_rsp_handler = 0x40002c94
                0x0000000040002ca0                ll_phy_req_handler = 0x40002ca0
                0x0000000040002cac                ll_phy_rsp_handler = 0x40002cac
                0x0000000040002cb8                ll_phy_update_ind_handler = 0x40002cb8
                0x0000000040002cc4                ll_ping_req_handler = 0x40002cc4
                0x0000000040002cd0                ll_ping_rsp_handler = 0x40002cd0
                0x0000000040002cdc                ll_slave_feature_req_handler = 0x40002cdc
                0x0000000040002ce8                ll_start_enc_req_handler = 0x40002ce8
                0x0000000040002cf4                ll_start_enc_rsp_handler = 0x40002cf4
                0x0000000040002d00                ll_terminate_ind_handler = 0x40002d00
                0x0000000040002d0c                ll_version_ind_handler = 0x40002d0c
                0x0000000040002d18                llc_auth_payl_nearly_to_handler = 0x40002d18
                0x0000000040002d24                llc_auth_payl_real_to_handler = 0x40002d24
                0x0000000040002d30                llc_encrypt_ind_handler = 0x40002d30
                0x0000000040002d3c                llc_hci_command_handler_wrapper = 0x40002d3c
                0x0000000040002d48                llc_ll_connection_param_req_pdu_send = 0x40002d48
                0x0000000040002d54                llc_ll_connection_param_rsp_pdu_send = 0x40002d54
                0x0000000040002d60                llc_ll_connection_update_ind_pdu_send = 0x40002d60
                0x0000000040002d6c                llc_ll_enc_req_pdu_send = 0x40002d6c
                0x0000000040002d78                llc_ll_enc_rsp_pdu_send = 0x40002d78
                0x0000000040002d84                llc_ll_feature_req_pdu_send = 0x40002d84
                0x0000000040002d90                llc_ll_feature_rsp_pdu_send = 0x40002d90
                0x0000000040002d9c                llc_ll_length_req_pdu_send = 0x40002d9c
                0x0000000040002da8                llc_ll_length_rsp_pdu_send = 0x40002da8
                0x0000000040002db4                llc_ll_pause_enc_req_pdu_send = 0x40002db4
                0x0000000040002dc0                llc_ll_pause_enc_rsp_pdu_send = 0x40002dc0
                0x0000000040002dcc                llc_ll_phy_req_pdu_send = 0x40002dcc
                0x0000000040002dd8                llc_ll_phy_rsp_pdu_send = 0x40002dd8
                0x0000000040002de4                llc_ll_ping_req_pdu_send = 0x40002de4
                0x0000000040002df0                llc_ll_ping_rsp_pdu_send = 0x40002df0
                0x0000000040002dfc                llc_ll_start_enc_req_pdu_send = 0x40002dfc
                0x0000000040002e08                llc_ll_start_enc_rsp_pdu_send = 0x40002e08
                0x0000000040002e14                llc_ll_terminate_ind_pdu_send = 0x40002e14
                0x0000000040002e20                llc_ll_unknown_rsp_pdu_send = 0x40002e20
                0x0000000040002e2c                llc_llcp_ch_map_update_ind_pdu_send = 0x40002e2c
                0x0000000040002e38                llc_llcp_phy_upd_ind_pdu_send = 0x40002e38
                0x0000000040002e44                llc_llcp_version_ind_pdu_send = 0x40002e44
                0x0000000040002e50                llc_op_ch_map_upd_ind_handler = 0x40002e50
                0x0000000040002e5c                llc_op_con_upd_ind_handler = 0x40002e5c
                0x0000000040002e68                llc_op_disconnect_ind_handler = 0x40002e68
                0x0000000040002e74                llc_op_dl_upd_ind_handler = 0x40002e74
                0x0000000040002e80                llc_op_encrypt_ind_handler = 0x40002e80
                0x0000000040002e8c                llc_op_feats_exch_ind_handler = 0x40002e8c
                0x0000000040002e98                llc_op_le_ping_ind_handler = 0x40002e98
                0x0000000040002ea4                llc_op_phy_upd_ind_handler = 0x40002ea4
                0x0000000040002eb0                llc_op_ver_exch_ind_handler = 0x40002eb0
                0x0000000040002ebc                llc_stopped_ind_handler = 0x40002ebc
                0x0000000040002ec8                lld_acl_rx_ind_handler = 0x40002ec8
                0x0000000040002ed4                lld_acl_tx_cfm_handler = 0x40002ed4
                0x0000000040002ee0                lld_adv_end_ind_handler = 0x40002ee0
                0x0000000040002eec                lld_adv_rep_ind_handler = 0x40002eec
                0x0000000040002ef8                lld_ch_map_upd_cfm_handler = 0x40002ef8
                0x0000000040002f04                lld_con_estab_ind_handler = 0x40002f04
                0x0000000040002f10                lld_con_evt_sd_evt_time_set = 0x40002f10
                0x0000000040002f1c                lld_con_offset_upd_ind_handler = 0x40002f1c
                0x0000000040002f28                lld_con_param_upd_cfm_handler = 0x40002f28
                0x0000000040002f34                lld_disc_ind_handler = 0x40002f34
                0x0000000040002f40                lld_init_end_ind_handler = 0x40002f40
                0x0000000040002f4c                lld_llcp_rx_ind_handler_wrapper = 0x40002f4c
                0x0000000040002f58                lld_llcp_tx_cfm_handler = 0x40002f58
                0x0000000040002f64                lld_per_adv_end_ind_handler = 0x40002f64
                0x0000000040002f70                lld_per_adv_rep_ind_handler = 0x40002f70
                0x0000000040002f7c                lld_per_adv_rx_end_ind_handler = 0x40002f7c
                0x0000000040002f88                lld_phy_coded_500k_get = 0x40002f88
                0x0000000040002f94                lld_phy_upd_cfm_handler = 0x40002f94
                0x0000000040002fa0                lld_scan_end_ind_handler = 0x40002fa0
                0x0000000040002fac                lld_scan_req_ind_handler = 0x40002fac
                0x0000000040002fb8                lld_sync_start_req_handler = 0x40002fb8
                0x0000000040002fc4                lld_test_end_ind_handler = 0x40002fc4
                0x0000000040002fd0                lld_update_rxbuf_handler = 0x40002fd0
                0x0000000040002fdc                llm_ch_map_update_ind_handler = 0x40002fdc
                0x0000000040002fe8                llm_hci_command_handler_wrapper = 0x40002fe8
                0x0000000040002ff4                llm_scan_period_to_handler = 0x40002ff4
                0x0000000040003000                r_Add2SelfBigHex256 = 0x40003000
                0x000000004000300c                r_AddBigHex256 = 0x4000300c
                0x0000000040003018                r_AddBigHexModP256 = 0x40003018
                0x0000000040003024                r_AddP256 = 0x40003024
                0x0000000040003030                r_AddPdiv2_256 = 0x40003030
                0x000000004000303c                r_GF_Jacobian_Point_Addition256 = 0x4000303c
                0x0000000040003048                r_GF_Jacobian_Point_Double256 = 0x40003048
                0x0000000040003054                r_GF_Point_Jacobian_To_Affine256 = 0x40003054
                0x0000000040003060                r_MultiplyBigHexByUint32_256 = 0x40003060
                0x000000004000306c                r_MultiplyBigHexModP256 = 0x4000306c
                0x0000000040003078                r_MultiplyByU16ModP256 = 0x40003078
                0x0000000040003084                r_SubtractBigHex256 = 0x40003084
                0x0000000040003090                r_SubtractBigHexMod256 = 0x40003090
                0x000000004000309c                r_SubtractBigHexUint32_256 = 0x4000309c
                0x00000000400030a8                r_SubtractFromSelfBigHex256 = 0x400030a8
                0x00000000400030b4                r_SubtractFromSelfBigHexSign256 = 0x400030b4
                0x00000000400030c0                r_aes_alloc = 0x400030c0
                0x00000000400030cc                r_aes_ccm_continue = 0x400030cc
                0x00000000400030d8                r_aes_ccm_process_e = 0x400030d8
                0x00000000400030e4                r_aes_ccm_xor_128_lsb = 0x400030e4
                0x00000000400030f0                r_aes_ccm_xor_128_msb = 0x400030f0
                0x00000000400030fc                r_aes_cmac_continue = 0x400030fc
                0x0000000040003108                r_aes_cmac_start = 0x40003108
                0x0000000040003114                r_aes_k1_continue = 0x40003114
                0x0000000040003120                r_aes_k2_continue = 0x40003120
                0x000000004000312c                r_aes_k3_continue = 0x4000312c
                0x0000000040003138                r_aes_k4_continue = 0x40003138
                0x0000000040003144                r_aes_shift_left_128 = 0x40003144
                0x0000000040003150                r_aes_start = 0x40003150
                0x000000004000315c                r_aes_xor_128 = 0x4000315c
                0x0000000040003168                r_assert_err = 0x40003168
                0x0000000040003174                r_assert_param = 0x40003174
                0x0000000040003180                r_assert_warn = 0x40003180
                0x000000004000318c                r_bigHexInversion256 = 0x4000318c
                0x0000000040003198                r_ble_sw_cca_check_isr = 0x40003198
                0x00000000400031a4                r_ble_util_buf_acl_tx_alloc = 0x400031a4
                0x00000000400031b0                r_ble_util_buf_acl_tx_elt_get = 0x400031b0
                0x00000000400031bc                r_ble_util_buf_acl_tx_free = 0x400031bc
                0x00000000400031c8                r_ble_util_buf_acl_tx_free_in_isr = 0x400031c8
                0x00000000400031d4                r_ble_util_buf_adv_tx_alloc = 0x400031d4
                0x00000000400031e0                r_ble_util_buf_adv_tx_free = 0x400031e0
                0x00000000400031ec                r_ble_util_buf_adv_tx_free_in_isr = 0x400031ec
                0x00000000400031f8                r_ble_util_buf_env_deinit = 0x400031f8
                0x0000000040003204                r_ble_util_buf_env_init = 0x40003204
                0x0000000040003210                r_ble_util_buf_get_rx_buf_nb = 0x40003210
                0x000000004000321c                r_ble_util_buf_get_rx_buf_size = 0x4000321c
                0x0000000040003228                r_ble_util_buf_llcp_tx_alloc = 0x40003228
                0x0000000040003234                r_ble_util_buf_llcp_tx_free = 0x40003234
                0x0000000040003240                r_ble_util_buf_rx_alloc = 0x40003240
                0x000000004000324c                r_ble_util_buf_rx_alloc_in_isr = 0x4000324c
                0x0000000040003258                r_ble_util_buf_rx_free = 0x40003258
                0x0000000040003264                r_ble_util_buf_rx_free_in_isr = 0x40003264
                0x0000000040003270                r_ble_util_buf_set_rx_buf_nb = 0x40003270
                0x000000004000327c                r_ble_util_buf_set_rx_buf_size = 0x4000327c
                0x0000000040003288                r_ble_util_data_rx_buf_reset = 0x40003288
                0x0000000040003294                r_bt_bb_get_intr_mask = 0x40003294
                0x00000000400032a0                r_bt_bb_intr_clear = 0x400032a0
                0x00000000400032ac                r_bt_bb_intr_mask_set = 0x400032ac
                0x00000000400032c4                r_bt_rf_coex_cfg_set = 0x400032c4
                0x00000000400032d0                r_bt_rf_coex_conn_dynamic_pti_en_get = 0x400032d0
                0x00000000400032e8                r_bt_rf_coex_ext_adv_dynamic_pti_en_get = 0x400032e8
                0x00000000400032f4                r_bt_rf_coex_ext_scan_dynamic_pti_en_get = 0x400032f4
                0x0000000040003300                r_bt_rf_coex_legacy_adv_dynamic_pti_en_get = 0x40003300
                0x000000004000330c                r_bt_rf_coex_per_adv_dynamic_pti_en_get = 0x4000330c
                0x0000000040003318                r_bt_rf_coex_pti_table_get = 0x40003318
                0x0000000040003324                r_bt_rf_coex_st_param_get = 0x40003324
                0x0000000040003330                r_bt_rf_coex_st_param_set = 0x40003330
                0x000000004000333c                r_bt_rf_coex_sync_scan_dynamic_pti_en_get = 0x4000333c
                0x0000000040003348                r_bt_rma_apply_rule_cs_fmt = 0x40003348
                0x0000000040003354                r_bt_rma_apply_rule_cs_idx = 0x40003354
                0x0000000040003360                r_bt_rma_configure = 0x40003360
                0x000000004000336c                r_bt_rma_deregister_rule_cs_fmt = 0x4000336c
                0x0000000040003378                r_bt_rma_deregister_rule_cs_idx = 0x40003378
                0x0000000040003384                r_bt_rma_get_ant_by_act = 0x40003384
                0x0000000040003390                r_bt_rma_init = 0x40003390
                0x000000004000339c                r_bt_rma_register_rule_cs_fmt = 0x4000339c
                0x00000000400033a8                r_bt_rma_register_rule_cs_idx = 0x400033a8
                0x00000000400033b4                r_bt_rtp_apply_rule_cs_fmt = 0x400033b4
                0x00000000400033c0                r_bt_rtp_apply_rule_cs_idx = 0x400033c0
                0x00000000400033cc                r_bt_rtp_deregister_rule_cs_fmt = 0x400033cc
                0x00000000400033d8                r_bt_rtp_deregister_rule_cs_idx = 0x400033d8
                0x00000000400033f0                r_bt_rtp_init = 0x400033f0
                0x00000000400033fc                r_bt_rtp_register_rule_cs_fmt = 0x400033fc
                0x0000000040003408                r_bt_rtp_register_rule_cs_idx = 0x40003408
                0x0000000040003414                r_btdm_isr = 0x40003414
                0x0000000040003444                r_cali_phase_match_p = 0x40003444
                0x0000000040003450                r_cmp_abs_time = 0x40003450
                0x000000004000345c                r_cmp_dest_id = 0x4000345c
                0x0000000040003468                r_cmp_timer_id = 0x40003468
                0x0000000040003474                r_co_bdaddr_compare = 0x40003474
                0x0000000040003480                r_co_ble_pkt_dur_in_us = 0x40003480
                0x000000004000348c                r_co_list_extract = 0x4000348c
                0x0000000040003498                r_co_list_extract_after = 0x40003498
                0x00000000400034a4                r_co_list_extract_sublist = 0x400034a4
                0x00000000400034b0                r_co_list_find = 0x400034b0
                0x00000000400034bc                r_co_list_init = 0x400034bc
                0x00000000400034c8                r_co_list_insert_after = 0x400034c8
                0x00000000400034d4                r_co_list_insert_before = 0x400034d4
                0x00000000400034e0                r_co_list_merge = 0x400034e0
                0x00000000400034ec                r_co_list_pool_init = 0x400034ec
                0x00000000400034f8                r_co_list_pop_front = 0x400034f8
                0x0000000040003504                r_co_list_push_back = 0x40003504
                0x0000000040003510                r_co_list_push_back_sublist = 0x40003510
                0x000000004000351c                r_co_list_push_front = 0x4000351c
                0x0000000040003528                r_co_list_size = 0x40003528
                0x0000000040003534                r_co_nb_good_le_channels = 0x40003534
                0x0000000040003540                r_co_util_pack = 0x40003540
                0x000000004000354c                r_co_util_read_array_size = 0x4000354c
                0x0000000040003558                r_co_util_unpack = 0x40003558
                0x0000000040003564                r_dbg_env_deinit = 0x40003564
                0x0000000040003570                r_dbg_env_init = 0x40003570
                0x000000004000357c                r_dbg_platform_reset_complete = 0x4000357c
                0x0000000040003588                r_dl_upd_proc_start = 0x40003588
                0x0000000040003594                r_dump_data = 0x40003594
                0x00000000400035a0                r_ecc_abort_key256_generation = 0x400035a0
                0x00000000400035ac                r_ecc_gen_new_public_key = 0x400035ac
                0x00000000400035b8                r_ecc_gen_new_secret_key = 0x400035b8
                0x00000000400035c4                r_ecc_generate_key256 = 0x400035c4
                0x00000000400035d0                r_ecc_get_debug_Keys = 0x400035d0
                0x00000000400035dc                r_ecc_init = 0x400035dc
                0x00000000400035e8                r_ecc_is_valid_point = 0x400035e8
                0x00000000400035f4                r_ecc_multiplication_event_handler = 0x400035f4
                0x0000000040003600                r_ecc_point_multiplication_win_256 = 0x40003600
                0x000000004000360c                r_emi_alloc_em_mapping_by_offset = 0x4000360c
                0x0000000040003618                r_emi_base_reg_lut_show = 0x40003618
                0x0000000040003624                r_emi_em_base_reg_show = 0x40003624
                0x0000000040003630                r_emi_free_em_mapping_by_offset = 0x40003630
                0x000000004000363c                r_emi_get_em_mapping_idx_by_offset = 0x4000363c
                0x0000000040003648                r_emi_get_mem_addr_by_offset = 0x40003648
                0x0000000040003654                r_emi_overwrite_em_mapping_by_offset = 0x40003654
                0x0000000040003660                r_esp_vendor_hci_command_handler = 0x40003660
                0x000000004000366c                r_get_stack_usage = 0x4000366c
                0x0000000040003678                r_h4tl_acl_hdr_rx_evt_handler = 0x40003678
                0x0000000040003684                r_h4tl_cmd_hdr_rx_evt_handler = 0x40003684
                0x0000000040003690                r_h4tl_cmd_pld_rx_evt_handler = 0x40003690
                0x000000004000369c                r_h4tl_eif_io_event_post = 0x4000369c
                0x00000000400036a8                r_h4tl_eif_register = 0x400036a8
                0x00000000400036b4                r_h4tl_init = 0x400036b4
                0x00000000400036c0                r_h4tl_out_of_sync = 0x400036c0
                0x00000000400036cc                r_h4tl_out_of_sync_check = 0x400036cc
                0x00000000400036d8                r_h4tl_read_hdr = 0x400036d8
                0x00000000400036e4                r_h4tl_read_next_out_of_sync = 0x400036e4
                0x00000000400036f0                r_h4tl_read_payl = 0x400036f0
                0x00000000400036fc                r_h4tl_read_start = 0x400036fc
                0x0000000040003708                r_h4tl_rx_acl_hdr_extract = 0x40003708
                0x0000000040003714                r_h4tl_rx_cmd_hdr_extract = 0x40003714
                0x0000000040003720                r_h4tl_rx_done = 0x40003720
                0x000000004000372c                r_h4tl_start = 0x4000372c
                0x0000000040003738                r_h4tl_stop = 0x40003738
                0x0000000040003744                r_h4tl_tx_done = 0x40003744
                0x0000000040003750                r_h4tl_tx_evt_handler = 0x40003750
                0x000000004000375c                r_h4tl_write = 0x4000375c
                0x0000000040003768                r_hci_acl_tx_data_alloc = 0x40003768
                0x0000000040003774                r_hci_acl_tx_data_received = 0x40003774
                0x0000000040003780                r_hci_basic_cmd_send_2_controller = 0x40003780
                0x000000004000378c                r_hci_ble_adv_report_filter_check = 0x4000378c
                0x0000000040003798                r_hci_ble_adv_report_tx_check = 0x40003798
                0x00000000400037a4                r_hci_ble_conhdl_register = 0x400037a4
                0x00000000400037b0                r_hci_ble_conhdl_unregister = 0x400037b0
                0x00000000400037bc                r_hci_build_acl_data = 0x400037bc
                0x00000000400037c8                r_hci_build_cc_evt = 0x400037c8
                0x00000000400037d4                r_hci_build_cs_evt = 0x400037d4
                0x00000000400037e0                r_hci_build_evt = 0x400037e0
                0x00000000400037ec                r_hci_build_le_evt = 0x400037ec
                0x00000000400037f8                r_hci_cmd_get_max_param_size = 0x400037f8
                0x0000000040003804                r_hci_cmd_received = 0x40003804
                0x0000000040003810                r_hci_cmd_reject = 0x40003810
                0x000000004000381c                r_hci_evt_mask_check = 0x4000381c
                0x0000000040003828                r_hci_evt_mask_set = 0x40003828
                0x0000000040003834                r_hci_fc_acl_buf_size_set = 0x40003834
                0x0000000040003840                r_hci_fc_acl_en = 0x40003840
                0x000000004000384c                r_hci_fc_acl_packet_sent = 0x4000384c
                0x0000000040003858                r_hci_fc_check_host_available_nb_acl_packets = 0x40003858
                0x0000000040003864                r_hci_fc_host_nb_acl_pkts_complete = 0x40003864
                0x0000000040003870                r_hci_fc_init = 0x40003870
                0x000000004000387c                r_hci_look_for_cmd_desc = 0x4000387c
                0x0000000040003888                r_hci_look_for_evt_desc = 0x40003888
                0x0000000040003894                r_hci_look_for_le_evt_desc = 0x40003894
                0x00000000400038a0                r_hci_look_for_le_evt_desc_esp = 0x400038a0
                0x00000000400038ac                r_hci_pack_bytes = 0x400038ac
                0x00000000400038c4                r_hci_send_2_controller = 0x400038c4
                0x00000000400038d0                r_hci_send_2_host = 0x400038d0
                0x00000000400038dc                r_hci_tl_c2h_data_flow_on = 0x400038dc
                0x00000000400038e8                r_hci_tl_cmd_hdr_rx_evt_handler = 0x400038e8
                0x00000000400038f4                r_hci_tl_cmd_pld_rx_evt_handler = 0x400038f4
                0x0000000040003900                r_hci_tl_get_pkt = 0x40003900
                0x000000004000390c                r_hci_tl_hci_pkt_handler = 0x4000390c
                0x0000000040003918                r_hci_tl_hci_tx_done_evt_handler = 0x40003918
                0x0000000040003924                r_hci_tl_inc_nb_h2c_cmd_pkts = 0x40003924
                0x0000000040003930                r_hci_tl_save_pkt = 0x40003930
                0x000000004000393c                r_hci_tl_send = 0x4000393c
                0x0000000040003948                r_hci_tx_done = 0x40003948
                0x0000000040003954                r_hci_tx_start = 0x40003954
                0x0000000040003960                r_hci_tx_trigger = 0x40003960
                0x000000004000396c                r_isValidSecretKey_256 = 0x4000396c
                0x0000000040003978                r_ke_check_malloc = 0x40003978
                0x0000000040003984                r_ke_event_callback_set = 0x40003984
                0x0000000040003990                r_ke_event_clear = 0x40003990
                0x000000004000399c                r_ke_event_flush = 0x4000399c
                0x00000000400039a8                r_ke_event_get = 0x400039a8
                0x00000000400039b4                r_ke_event_get_all = 0x400039b4
                0x00000000400039c0                r_ke_event_init = 0x400039c0
                0x00000000400039cc                r_ke_event_schedule = 0x400039cc
                0x00000000400039d8                r_ke_event_set = 0x400039d8
                0x00000000400039e4                r_ke_flush = 0x400039e4
                0x00000000400039f0                r_ke_free = 0x400039f0
                0x00000000400039fc                r_ke_handler_search = 0x400039fc
                0x0000000040003a08                r_ke_init = 0x40003a08
                0x0000000040003a14                r_ke_is_free = 0x40003a14
                0x0000000040003a20                r_ke_malloc = 0x40003a20
                0x0000000040003a2c                r_ke_mem_init = 0x40003a2c
                0x0000000040003a38                r_ke_mem_is_empty = 0x40003a38
                0x0000000040003a44                r_ke_mem_is_in_heap = 0x40003a44
                0x0000000040003a50                r_ke_msg_alloc = 0x40003a50
                0x0000000040003a5c                r_ke_msg_dest_id_get = 0x40003a5c
                0x0000000040003a68                r_ke_msg_discard = 0x40003a68
                0x0000000040003a74                r_ke_msg_forward = 0x40003a74
                0x0000000040003a80                r_ke_msg_forward_new_id = 0x40003a80
                0x0000000040003a8c                r_ke_msg_free = 0x40003a8c
                0x0000000040003a98                r_ke_msg_in_queue = 0x40003a98
                0x0000000040003aa4                r_ke_msg_save = 0x40003aa4
                0x0000000040003ab0                r_ke_msg_send = 0x40003ab0
                0x0000000040003abc                r_ke_msg_send_basic = 0x40003abc
                0x0000000040003ac8                r_ke_msg_src_id_get = 0x40003ac8
                0x0000000040003ad4                r_ke_queue_extract = 0x40003ad4
                0x0000000040003ae0                r_ke_queue_insert = 0x40003ae0
                0x0000000040003aec                r_ke_sleep_check = 0x40003aec
                0x0000000040003af8                r_ke_state_get = 0x40003af8
                0x0000000040003b04                r_ke_state_set = 0x40003b04
                0x0000000040003b10                r_ke_task_check = 0x40003b10
                0x0000000040003b1c                r_ke_task_create = 0x40003b1c
                0x0000000040003b28                r_ke_task_delete = 0x40003b28
                0x0000000040003b34                r_ke_task_handler_get = 0x40003b34
                0x0000000040003b40                r_ke_task_init = 0x40003b40
                0x0000000040003b4c                r_ke_task_msg_flush = 0x40003b4c
                0x0000000040003b58                r_ke_task_saved_update = 0x40003b58
                0x0000000040003b70                r_ke_time = 0x40003b70
                0x0000000040003b7c                r_ke_time_cmp = 0x40003b7c
                0x0000000040003b88                r_ke_time_past = 0x40003b88
                0x0000000040003b94                r_ke_timer_active = 0x40003b94
                0x0000000040003ba0                r_ke_timer_adjust_all = 0x40003ba0
                0x0000000040003bac                r_ke_timer_clear = 0x40003bac
                0x0000000040003bb8                r_ke_timer_init = 0x40003bb8
                0x0000000040003bc4                r_ke_timer_schedule = 0x40003bc4
                0x0000000040003bd0                r_ke_timer_set = 0x40003bd0
                0x0000000040003bdc                r_led_init = 0x40003bdc
                0x0000000040003be8                r_led_set_all = 0x40003be8
                0x0000000040003bf4                r_llc_aes_res_cb = 0x40003bf4
                0x0000000040003c00                r_llc_ch_map_up_proc_err_cb = 0x40003c00
                0x0000000040003c0c                r_llc_cleanup = 0x40003c0c
                0x0000000040003c18                r_llc_cmd_cmp_send = 0x40003c18
                0x0000000040003c24                r_llc_cmd_stat_send = 0x40003c24
                0x0000000040003c30                r_llc_con_move_cbk = 0x40003c30
                0x0000000040003c3c                r_llc_con_plan_set_update = 0x40003c3c
                0x0000000040003c48                r_llc_con_upd_param_in_range = 0x40003c48
                0x0000000040003c54                r_llc_disconnect = 0x40003c54
                0x0000000040003c60                r_llc_disconnect_end = 0x40003c60
                0x0000000040003c6c                r_llc_disconnect_proc_continue = 0x40003c6c
                0x0000000040003c78                r_llc_disconnect_proc_err_cb = 0x40003c78
                0x0000000040003c84                r_llc_dl_chg_check = 0x40003c84
                0x0000000040003c90                r_llc_dle_proc_err_cb = 0x40003c90
                0x0000000040003c9c                r_llc_feats_exch_proc_err_cb = 0x40003c9c
                0x0000000040003ca8                r_llc_hci_cmd_handler_tab_p_get = 0x40003ca8
                0x0000000040003cc0                r_llc_hci_con_param_req_evt_send = 0x40003cc0
                0x0000000040003ccc                r_llc_hci_con_upd_info_send = 0x40003ccc
                0x0000000040003cd8                r_llc_hci_disconnected_dis = 0x40003cd8
                0x0000000040003ce4                r_llc_hci_dl_upd_info_send = 0x40003ce4
                0x0000000040003cf0                r_llc_hci_enc_evt_send = 0x40003cf0
                0x0000000040003cfc                r_llc_hci_feats_info_send = 0x40003cfc
                0x0000000040003d08                r_llc_hci_le_phy_upd_cmp_evt_send = 0x40003d08
                0x0000000040003d14                r_llc_hci_ltk_request_evt_send = 0x40003d14
                0x0000000040003d20                r_llc_hci_nb_cmp_pkts_evt_send = 0x40003d20
                0x0000000040003d2c                r_llc_hci_version_info_send = 0x40003d2c
                0x0000000040003d38                r_llc_init_term_proc = 0x40003d38
                0x0000000040003d44                r_llc_iv_skd_rand_gen = 0x40003d44
                0x0000000040003d50                r_llc_le_ping_proc_continue = 0x40003d50
                0x0000000040003d5c                r_llc_le_ping_proc_err_cb = 0x40003d5c
                0x0000000040003d68                r_llc_le_ping_restart = 0x40003d68
                0x0000000040003d74                r_llc_le_ping_set = 0x40003d74
                0x0000000040003d80                r_llc_ll_pause_enc_rsp_ack_handler = 0x40003d80
                0x0000000040003d8c                r_llc_ll_reject_ind_ack_handler = 0x40003d8c
                0x0000000040003d98                r_llc_ll_reject_ind_pdu_send = 0x40003d98
                0x0000000040003da4                r_llc_ll_start_enc_rsp_ack_handler = 0x40003da4
                0x0000000040003db0                r_llc_ll_terminate_ind_ack = 0x40003db0
                0x0000000040003dbc                r_llc_ll_unknown_ind_handler = 0x40003dbc
                0x0000000040003dc8                r_llc_llcp_send = 0x40003dc8
                0x0000000040003dd4                r_llc_llcp_state_set = 0x40003dd4
                0x0000000040003de0                r_llc_llcp_trans_timer_set = 0x40003de0
                0x0000000040003dec                r_llc_llcp_tx_check = 0x40003dec
                0x0000000040003df8                r_llc_loc_ch_map_proc_continue = 0x40003df8
                0x0000000040003e10                r_llc_loc_con_upd_proc_err_cb = 0x40003e10
                0x0000000040003e1c                r_llc_loc_dl_upd_proc_continue = 0x40003e1c
                0x0000000040003e28                r_llc_loc_encrypt_proc_continue = 0x40003e28
                0x0000000040003e34                r_llc_loc_encrypt_proc_err_cb = 0x40003e34
                0x0000000040003e40                r_llc_loc_feats_exch_proc_continue = 0x40003e40
                0x0000000040003e4c                r_llc_loc_phy_upd_proc_continue = 0x40003e4c
                0x0000000040003e58                r_llc_loc_phy_upd_proc_err_cb = 0x40003e58
                0x0000000040003e64                r_llc_msg_handler_tab_p_get = 0x40003e64
                0x0000000040003e70                r_llc_pref_param_compute = 0x40003e70
                0x0000000040003e7c                r_llc_proc_collision_check = 0x40003e7c
                0x0000000040003e88                r_llc_proc_err_ind = 0x40003e88
                0x0000000040003e94                r_llc_proc_get = 0x40003e94
                0x0000000040003ea0                r_llc_proc_id_get = 0x40003ea0
                0x0000000040003eac                r_llc_proc_reg = 0x40003eac
                0x0000000040003eb8                r_llc_proc_state_get = 0x40003eb8
                0x0000000040003ec4                r_llc_proc_state_set = 0x40003ec4
                0x0000000040003ed0                r_llc_proc_timer_pause_set = 0x40003ed0
                0x0000000040003edc                r_llc_proc_timer_set = 0x40003edc
                0x0000000040003ee8                r_llc_proc_unreg = 0x40003ee8
                0x0000000040003ef4                r_llc_rem_ch_map_proc_continue = 0x40003ef4
                0x0000000040003f0c                r_llc_rem_con_upd_proc_err_cb = 0x40003f0c
                0x0000000040003f18                r_llc_rem_dl_upd_proc = 0x40003f18
                0x0000000040003f24                r_llc_rem_encrypt_proc_continue = 0x40003f24
                0x0000000040003f30                r_llc_rem_encrypt_proc_err_cb = 0x40003f30
                0x0000000040003f3c                r_llc_rem_phy_upd_proc_continue = 0x40003f3c
                0x0000000040003f48                r_llc_rem_phy_upd_proc_err_cb = 0x40003f48
                0x0000000040003f54                r_llc_role_get = 0x40003f54
                0x0000000040003f60                r_llc_sk_gen = 0x40003f60
                0x0000000040003f6c                r_llc_start = 0x40003f6c
                0x0000000040003f78                r_llc_stop = 0x40003f78
                0x0000000040003f84                r_llc_ver_exch_loc_proc_continue = 0x40003f84
                0x0000000040003f90                r_llc_ver_proc_err_cb = 0x40003f90
                0x0000000040003f9c                r_llcp_pdu_handler_tab_p_get = 0x40003f9c
                0x0000000040003fa8                r_lld_aa_gen = 0x40003fa8
                0x0000000040003fb4                r_lld_adv_adv_data_set = 0x40003fb4
                0x0000000040003fc0                r_lld_adv_adv_data_update = 0x40003fc0
                0x0000000040003fcc                r_lld_adv_aux_ch_idx_set = 0x40003fcc
                0x0000000040003fd8                r_lld_adv_aux_evt_canceled_cbk = 0x40003fd8
                0x0000000040003fe4                r_lld_adv_aux_evt_start_cbk = 0x40003fe4
                0x0000000040003ff0                r_lld_adv_coex_check_ext_adv_synced = 0x40003ff0
                0x0000000040003ffc                r_lld_adv_coex_env_reset = 0x40003ffc
                0x0000000040004008                r_lld_adv_duration_update = 0x40004008
                0x0000000040004014                r_lld_adv_dynamic_pti_process = 0x40004014
                0x0000000040004020                r_lld_adv_end = 0x40004020
                0x000000004000402c                r_lld_adv_evt_canceled_cbk = 0x4000402c
                0x0000000040004038                r_lld_adv_evt_start_cbk = 0x40004038
                0x0000000040004044                r_lld_adv_ext_chain_construct = 0x40004044
                0x0000000040004050                r_lld_adv_ext_pkt_prepare = 0x40004050
                0x000000004000405c                r_lld_adv_frm_cbk = 0x4000405c
                0x0000000040004068                r_lld_adv_frm_isr = 0x40004068
                0x0000000040004074                r_lld_adv_frm_skip_isr = 0x40004074
                0x0000000040004080                r_lld_adv_init = 0x40004080
                0x000000004000408c                r_lld_adv_pkt_rx = 0x4000408c
                0x0000000040004098                r_lld_adv_pkt_rx_connect_ind = 0x40004098
                0x00000000400040a4                r_lld_adv_pkt_rx_send_scan_req_evt = 0x400040a4
                0x00000000400040b0                r_lld_adv_rand_addr_update = 0x400040b0
                0x00000000400040bc                r_lld_adv_restart = 0x400040bc
                0x00000000400040c8                r_lld_adv_scan_rsp_data_set = 0x400040c8
                0x00000000400040d4                r_lld_adv_scan_rsp_data_update = 0x400040d4
                0x00000000400040e0                r_lld_adv_set_tx_power = 0x400040e0
                0x00000000400040ec                r_lld_adv_start = 0x400040ec
                0x00000000400040f8                r_lld_adv_stop = 0x400040f8
                0x0000000040004104                r_lld_adv_sync_info_set = 0x40004104
                0x0000000040004110                r_lld_adv_sync_info_update = 0x40004110
                0x000000004000411c                r_lld_calc_aux_rx = 0x4000411c
                0x0000000040004128                r_lld_cca_alloc = 0x40004128
                0x0000000040004134                r_lld_cca_data_reset = 0x40004134
                0x0000000040004140                r_lld_cca_free = 0x40004140
                0x000000004000414c                r_lld_ch_assess_data_get = 0x4000414c
                0x0000000040004158                r_lld_ch_idx_get = 0x40004158
                0x0000000040004164                r_lld_ch_map_set = 0x40004164
                0x0000000040004170                r_lld_channel_assess = 0x40004170
                0x000000004000417c                r_lld_con_activity_act_offset_compute = 0x4000417c
                0x0000000040004188                r_lld_con_activity_offset_compute = 0x40004188
                0x0000000040004194                r_lld_con_ch_map_update = 0x40004194
                0x00000000400041a0                r_lld_con_cleanup = 0x400041a0
                0x00000000400041ac                r_lld_con_current_tx_power_get = 0x400041ac
                0x00000000400041b8                r_lld_con_data_flow_set = 0x400041b8
                0x00000000400041c4                r_lld_con_data_len_update = 0x400041c4
                0x00000000400041d0                r_lld_con_data_tx = 0x400041d0
                0x00000000400041dc                r_lld_con_enc_key_load = 0x400041dc
                0x00000000400041e8                r_lld_con_event_counter_get = 0x400041e8
                0x00000000400041f4                r_lld_con_evt_canceled_cbk = 0x400041f4
                0x0000000040004200                r_lld_con_evt_duration_min_get = 0x40004200
                0x000000004000420c                r_lld_con_evt_max_eff_time_cal = 0x4000420c
                0x0000000040004218                r_lld_con_evt_sd_evt_time_get = 0x40004218
                0x0000000040004224                r_lld_con_evt_start_cbk = 0x40004224
                0x0000000040004230                r_lld_con_evt_time_update = 0x40004230
                0x000000004000423c                r_lld_con_free_all_tx_buf = 0x4000423c
                0x0000000040004248                r_lld_con_frm_cbk = 0x40004248
                0x0000000040004254                r_lld_con_frm_isr = 0x40004254
                0x0000000040004260                r_lld_con_frm_skip_isr = 0x40004260
                0x000000004000426c                r_lld_con_init = 0x4000426c
                0x0000000040004278                r_lld_con_llcp_tx = 0x40004278
                0x0000000040004284                r_lld_con_max_lat_calc = 0x40004284
                0x0000000040004290                r_lld_con_offset_get = 0x40004290
                0x000000004000429c                r_lld_con_param_update = 0x4000429c
                0x00000000400042a8                r_lld_con_phys_update = 0x400042a8
                0x00000000400042b4                r_lld_con_pref_slave_evt_dur_set = 0x400042b4
                0x00000000400042c0                r_lld_con_pref_slave_latency_set = 0x400042c0
                0x00000000400042cc                r_lld_con_rssi_get = 0x400042cc
                0x00000000400042d8                r_lld_con_rx = 0x400042d8
                0x00000000400042e4                r_lld_con_rx_channel_assess = 0x400042e4
                0x00000000400042f0                r_lld_con_rx_enc = 0x400042f0
                0x00000000400042fc                r_lld_con_rx_isr = 0x400042fc
                0x0000000040004308                r_lld_con_rx_link_info_check = 0x40004308
                0x0000000040004314                r_lld_con_rx_llcp_check = 0x40004314
                0x0000000040004320                r_lld_con_rx_sync_time_update = 0x40004320
                0x0000000040004338                r_lld_con_set_tx_power = 0x40004338
                0x0000000040004344                r_lld_con_start = 0x40004344
                0x000000004000435c                r_lld_con_tx = 0x4000435c
                0x0000000040004368                r_lld_con_tx_enc = 0x40004368
                0x0000000040004374                r_lld_con_tx_isr = 0x40004374
                0x0000000040004380                r_lld_con_tx_len_update = 0x40004380
                0x000000004000438c                r_lld_con_tx_len_update_for_intv = 0x4000438c
                0x0000000040004398                r_lld_con_tx_len_update_for_rate = 0x40004398
                0x00000000400043a4                r_lld_con_tx_prog = 0x400043a4
                0x00000000400043b0                r_lld_conn_dynamic_pti_process = 0x400043b0
                0x00000000400043bc                r_lld_continue_scan_rx_isr_end_process = 0x400043bc
                0x00000000400043c8                r_lld_ext_scan_dynamic_pti_process = 0x400043c8
                0x00000000400043d4                r_lld_hw_cca_end_isr = 0x400043d4
                0x00000000400043e0                r_lld_hw_cca_evt_handler = 0x400043e0
                0x00000000400043ec                r_lld_hw_cca_isr = 0x400043ec
                0x00000000400043f8                r_lld_init_cal_anchor_point = 0x400043f8
                0x0000000040004404                r_lld_init_compute_winoffset = 0x40004404
                0x0000000040004410                r_lld_init_connect_req_pack = 0x40004410
                0x000000004000441c                r_lld_init_end = 0x4000441c
                0x0000000040004428                r_lld_init_evt_canceled_cbk = 0x40004428
                0x0000000040004434                r_lld_init_evt_start_cbk = 0x40004434
                0x0000000040004440                r_lld_init_frm_cbk = 0x40004440
                0x000000004000444c                r_lld_init_frm_eof_isr = 0x4000444c
                0x0000000040004458                r_lld_init_frm_skip_isr = 0x40004458
                0x0000000040004464                r_lld_init_init = 0x40004464
                0x0000000040004470                r_lld_init_process_pkt_rx = 0x40004470
                0x000000004000447c                r_lld_init_process_pkt_rx_adv_ext_ind = 0x4000447c
                0x0000000040004488                r_lld_init_process_pkt_rx_adv_ind_or_direct_ind = 0x40004488
                0x0000000040004494                r_lld_init_process_pkt_rx_aux_connect_rsp = 0x40004494
                0x00000000400044a0                r_lld_init_process_pkt_tx = 0x400044a0
                0x00000000400044ac                r_lld_init_process_pkt_tx_cal_con_timestamp = 0x400044ac
                0x00000000400044b8                r_lld_init_sched = 0x400044b8
                0x00000000400044c4                r_lld_init_set_tx_power = 0x400044c4
                0x00000000400044d0                r_lld_init_start = 0x400044d0
                0x00000000400044dc                r_lld_init_stop = 0x400044dc
                0x00000000400044e8                r_lld_instant_proc_end = 0x400044e8
                0x0000000040004500                r_lld_per_adv_ch_map_update = 0x40004500
                0x000000004000450c                r_lld_per_adv_chain_construct = 0x4000450c
                0x0000000040004518                r_lld_per_adv_cleanup = 0x40004518
                0x0000000040004524                r_lld_per_adv_coex_env_reset = 0x40004524
                0x0000000040004530                r_lld_per_adv_data_set = 0x40004530
                0x000000004000453c                r_lld_per_adv_data_update = 0x4000453c
                0x0000000040004548                r_lld_per_adv_dynamic_pti_process = 0x40004548
                0x0000000040004554                r_lld_per_adv_evt_canceled_cbk = 0x40004554
                0x0000000040004560                r_lld_per_adv_evt_start_cbk = 0x40004560
                0x000000004000456c                r_lld_per_adv_ext_pkt_prepare = 0x4000456c
                0x0000000040004578                r_lld_per_adv_frm_cbk = 0x40004578
                0x0000000040004584                r_lld_per_adv_frm_isr = 0x40004584
                0x0000000040004590                r_lld_per_adv_frm_skip_isr = 0x40004590
                0x000000004000459c                r_lld_per_adv_init = 0x4000459c
                0x00000000400045a8                r_lld_per_adv_init_info_get = 0x400045a8
                0x00000000400045b4                r_lld_per_adv_list_add = 0x400045b4
                0x00000000400045c0                r_lld_per_adv_list_rem = 0x400045c0
                0x00000000400045d8                r_lld_per_adv_set_tx_power = 0x400045d8
                0x00000000400045e4                r_lld_per_adv_start = 0x400045e4
                0x00000000400045f0                r_lld_per_adv_stop = 0x400045f0
                0x00000000400045fc                r_lld_per_adv_sync_info_get = 0x400045fc
                0x0000000040004608                r_lld_process_cca_data = 0x40004608
                0x0000000040004614                r_lld_ral_search = 0x40004614
                0x0000000040004620                r_lld_read_clock = 0x40004620
                0x000000004000462c                r_lld_res_list_add = 0x4000462c
                0x0000000040004638                r_lld_res_list_clear = 0x40004638
                0x0000000040004644                r_lld_res_list_is_empty = 0x40004644
                0x0000000040004650                r_lld_res_list_local_rpa_get = 0x40004650
                0x000000004000465c                r_lld_res_list_peer_rpa_get = 0x4000465c
                0x0000000040004668                r_lld_res_list_peer_update = 0x40004668
                0x0000000040004674                r_lld_res_list_priv_mode_update = 0x40004674
                0x0000000040004680                r_lld_res_list_rem = 0x40004680
                0x000000004000468c                r_lld_reset_reg = 0x4000468c
                0x0000000040004698                r_lld_rpa_renew = 0x40004698
                0x00000000400046a4                r_lld_rpa_renew_evt_canceled_cbk = 0x400046a4
                0x00000000400046b0                r_lld_rpa_renew_evt_start_cbk = 0x400046b0
                0x00000000400046bc                r_lld_rpa_renew_instant_cbk = 0x400046bc
                0x00000000400046c8                r_lld_rxdesc_check = 0x400046c8
                0x00000000400046d4                r_lld_rxdesc_free = 0x400046d4
                0x00000000400046e0                r_lld_scan_create_sync = 0x400046e0
                0x00000000400046ec                r_lld_scan_create_sync_cancel = 0x400046ec
                0x00000000400046f8                r_lld_scan_end = 0x400046f8
                0x0000000040004704                r_lld_scan_evt_canceled_cbk = 0x40004704
                0x0000000040004710                r_lld_scan_evt_start_cbk = 0x40004710
                0x000000004000471c                r_lld_scan_frm_cbk = 0x4000471c
                0x0000000040004728                r_lld_scan_frm_eof_isr = 0x40004728
                0x0000000040004734                r_lld_scan_frm_rx_isr = 0x40004734
                0x0000000040004740                r_lld_scan_frm_skip_isr = 0x40004740
                0x000000004000474c                r_lld_scan_init = 0x4000474c
                0x0000000040004758                r_lld_scan_params_update = 0x40004758
                0x000000004000477c                r_lld_scan_process_pkt_rx_aux_adv_ind = 0x4000477c
                0x0000000040004788                r_lld_scan_process_pkt_rx_aux_chain_ind = 0x40004788
                0x0000000040004794                r_lld_scan_process_pkt_rx_aux_scan_rsp = 0x40004794
                0x00000000400047a0                r_lld_scan_process_pkt_rx_ext_adv = 0x400047a0
                0x00000000400047ac                r_lld_scan_process_pkt_rx_ext_adv_ind = 0x400047ac
                0x00000000400047b8                r_lld_scan_process_pkt_rx_legacy_adv = 0x400047b8
                0x00000000400047c4                r_lld_scan_restart = 0x400047c4
                0x00000000400047d0                r_lld_scan_sched = 0x400047d0
                0x00000000400047dc                r_lld_scan_set_tx_power = 0x400047dc
                0x00000000400047e8                r_lld_scan_start = 0x400047e8
                0x00000000400047f4                r_lld_scan_stop = 0x400047f4
                0x0000000040004800                r_lld_scan_sync_accept = 0x40004800
                0x000000004000480c                r_lld_scan_sync_info_unpack = 0x4000480c
                0x0000000040004818                r_lld_scan_trunc_ind = 0x40004818
                0x0000000040004824                r_lld_sw_cca_evt_handler = 0x40004824
                0x0000000040004830                r_lld_sw_cca_isr = 0x40004830
                0x000000004000483c                r_lld_sync_ch_map_update = 0x4000483c
                0x0000000040004848                r_lld_sync_cleanup = 0x40004848
                0x0000000040004854                r_lld_sync_evt_canceled_cbk = 0x40004854
                0x0000000040004860                r_lld_sync_evt_start_cbk = 0x40004860
                0x000000004000486c                r_lld_sync_frm_cbk = 0x4000486c
                0x0000000040004878                r_lld_sync_frm_eof_isr = 0x40004878
                0x0000000040004884                r_lld_sync_frm_rx_isr = 0x40004884
                0x0000000040004890                r_lld_sync_frm_skip_isr = 0x40004890
                0x000000004000489c                r_lld_sync_init = 0x4000489c
                0x00000000400048a8                r_lld_sync_process_pkt_rx = 0x400048a8
                0x00000000400048b4                r_lld_sync_process_pkt_rx_aux_sync_ind = 0x400048b4
                0x00000000400048c0                r_lld_sync_process_pkt_rx_pkt_check = 0x400048c0
                0x00000000400048cc                r_lld_sync_scan_dynamic_pti_process = 0x400048cc
                0x00000000400048d8                r_lld_sync_sched = 0x400048d8
                0x00000000400048e4                r_lld_sync_start = 0x400048e4
                0x00000000400048f0                r_lld_sync_stop = 0x400048f0
                0x00000000400048fc                r_lld_sync_trunc_ind = 0x400048fc
                0x0000000040004908                r_lld_test_cleanup = 0x40004908
                0x0000000040004914                r_lld_test_evt_canceled_cbk = 0x40004914
                0x0000000040004920                r_lld_test_evt_start_cbk = 0x40004920
                0x000000004000492c                r_lld_test_freq2chnl = 0x4000492c
                0x0000000040004938                r_lld_test_frm_cbk = 0x40004938
                0x0000000040004944                r_lld_test_frm_isr = 0x40004944
                0x0000000040004950                r_lld_test_init = 0x40004950
                0x000000004000495c                r_lld_test_rx_isr = 0x4000495c
                0x0000000040004968                r_lld_test_set_tx_power = 0x40004968
                0x0000000040004974                r_lld_test_start = 0x40004974
                0x0000000040004980                r_lld_test_stop = 0x40004980
                0x000000004000498c                r_lld_update_rxbuf = 0x4000498c
                0x0000000040004998                r_lld_update_rxbuf_isr = 0x40004998
                0x00000000400049a4                r_lld_white_list_add = 0x400049a4
                0x00000000400049b0                r_lld_white_list_rem = 0x400049b0
                0x00000000400049bc                r_llm_activity_free_get = 0x400049bc
                0x00000000400049c8                r_llm_activity_free_set = 0x400049c8
                0x00000000400049d4                r_llm_activity_syncing_get = 0x400049d4
                0x00000000400049e0                r_llm_adv_con_len_check = 0x400049e0
                0x00000000400049ec                r_llm_adv_hdl_to_id = 0x400049ec
                0x00000000400049f8                r_llm_adv_rep_flow_control_check = 0x400049f8
                0x0000000040004a04                r_llm_adv_rep_flow_control_update = 0x40004a04
                0x0000000040004a10                r_llm_adv_reports_list_check = 0x40004a10
                0x0000000040004a1c                r_llm_adv_set_all_release = 0x40004a1c
                0x0000000040004a28                r_llm_adv_set_dft_params = 0x40004a28
                0x0000000040004a34                r_llm_adv_set_release = 0x40004a34
                0x0000000040004a40                r_llm_aes_res_cb = 0x40004a40
                0x0000000040004a4c                r_llm_ble_update_adv_flow_control = 0x40004a4c
                0x0000000040004a58                r_llm_ch_map_update = 0x40004a58
                0x0000000040004a64                r_llm_cmd_cmp_send = 0x40004a64
                0x0000000040004a70                r_llm_cmd_stat_send = 0x40004a70
                0x0000000040004a7c                r_llm_dev_list_empty_entry = 0x40004a7c
                0x0000000040004a88                r_llm_dev_list_search = 0x40004a88
                0x0000000040004a94                r_llm_env_adv_dup_filt_deinit = 0x40004a94
                0x0000000040004aa0                r_llm_env_adv_dup_filt_init = 0x40004aa0
                0x0000000040004aac                r_llm_init_ble_adv_report_flow_contol = 0x40004aac
                0x0000000040004ab8                r_llm_is_dev_connected = 0x40004ab8
                0x0000000040004ac4                r_llm_is_dev_synced = 0x40004ac4
                0x0000000040004ad0                r_llm_is_non_con_act_ongoing_check = 0x40004ad0
                0x0000000040004adc                r_llm_is_wl_accessible = 0x40004adc
                0x0000000040004ae8                r_llm_le_evt_mask_check = 0x40004ae8
                0x0000000040004b00                r_llm_link_disc = 0x40004b00
                0x0000000040004b0c                r_llm_master_ch_map_get = 0x40004b0c
                0x0000000040004b18                r_llm_msg_handler_tab_p_get = 0x40004b18
                0x0000000040004b24                r_llm_no_activity = 0x40004b24
                0x0000000040004b30                r_llm_per_adv_slot_dur = 0x40004b30
                0x0000000040004b3c                r_llm_plan_elt_get = 0x40004b3c
                0x0000000040004b48                r_llm_rx_path_comp_get = 0x40004b48
                0x0000000040004b54                r_llm_scan_start = 0x40004b54
                0x0000000040004b60                r_llm_scan_sync_acad_attach = 0x40004b60
                0x0000000040004b6c                r_llm_scan_sync_acad_detach = 0x40004b6c
                0x0000000040004b78                r_llm_send_adv_lost_event_to_host = 0x40004b78
                0x0000000040004b84                r_llm_tx_path_comp_get = 0x40004b84
                0x0000000040004b90                r_misc_deinit = 0x40004b90
                0x0000000040004b9c                r_misc_free_em_buf_in_isr = 0x40004b9c
                0x0000000040004ba8                r_misc_init = 0x40004ba8
                0x0000000040004bb4                r_misc_msg_handler_tab_p_get = 0x40004bb4
                0x0000000040004bc0                r_notEqual256 = 0x40004bc0
                0x0000000040004bcc                r_phy_upd_proc_start = 0x40004bcc
                0x0000000040004bd8                r_platform_reset = 0x40004bd8
                0x0000000040004bf0                r_rf_em_init = 0x40004bf0
                0x0000000040004bfc                r_rf_force_agc_enable = 0x40004bfc
                0x0000000040004c08                r_rf_reg_rd = 0x40004c08
                0x0000000040004c14                r_rf_reg_wr = 0x40004c14
                0x0000000040004c20                r_rf_reset = 0x40004c20
                0x0000000040004c2c                r_rf_rssi_convert = 0x40004c2c
                0x0000000040004c38                r_rf_rw_v9_le_disable = 0x40004c38
                0x0000000040004c44                r_rf_rw_v9_le_enable = 0x40004c44
                0x0000000040004c50                r_rf_sleep = 0x40004c50
                0x0000000040004c74                r_rf_util_cs_fmt_convert = 0x40004c74
                0x0000000040004c80                r_rw_crypto_aes_ccm = 0x40004c80
                0x0000000040004c8c                r_rw_crypto_aes_encrypt = 0x40004c8c
                0x0000000040004c98                r_rw_crypto_aes_init = 0x40004c98
                0x0000000040004ca4                r_rw_crypto_aes_k1 = 0x40004ca4
                0x0000000040004cb0                r_rw_crypto_aes_k2 = 0x40004cb0
                0x0000000040004cbc                r_rw_crypto_aes_k3 = 0x40004cbc
                0x0000000040004cc8                r_rw_crypto_aes_k4 = 0x40004cc8
                0x0000000040004cd4                r_rw_crypto_aes_rand = 0x40004cd4
                0x0000000040004ce0                r_rw_crypto_aes_result_handler = 0x40004ce0
                0x0000000040004cec                r_rw_crypto_aes_s1 = 0x40004cec
                0x0000000040004cf8                r_rw_cryto_aes_cmac = 0x40004cf8
                0x0000000040004d04                r_rw_v9_init_em_radio_table = 0x40004d04
                0x0000000040004d1c                r_rwble_sleep_enter = 0x40004d1c
                0x0000000040004d28                r_rwble_sleep_wakeup_end = 0x40004d28
                0x0000000040004d34                r_rwbtdm_isr_wrapper = 0x40004d34
                0x0000000040004d40                r_rwip_active_check = 0x40004d40
                0x0000000040004d4c                r_rwip_aes_encrypt = 0x40004d4c
                0x0000000040004d58                r_rwip_assert = 0x40004d58
                0x0000000040004d64                r_rwip_crypt_evt_handler = 0x40004d64
                0x0000000040004d70                r_rwip_crypt_isr_handler = 0x40004d70
                0x0000000040004d7c                r_rwip_eif_get = 0x40004d7c
                0x0000000040004d88                r_rwip_half_slot_2_lpcycles = 0x40004d88
                0x0000000040004d94                r_rwip_hus_2_lpcycles = 0x40004d94
                0x0000000040004da0                r_rwip_isr = 0x40004da0
                0x0000000040004dac                r_rwip_lpcycles_2_hus = 0x40004dac
                0x0000000040004db8                r_rwip_prevent_sleep_clear = 0x40004db8
                0x0000000040004dc4                r_rwip_prevent_sleep_set = 0x40004dc4
                0x0000000040004dd0                r_rwip_schedule = 0x40004dd0
                0x0000000040004ddc                r_rwip_sleep = 0x40004ddc
                0x0000000040004de8                r_rwip_sw_int_handler = 0x40004de8
                0x0000000040004df4                r_rwip_sw_int_req = 0x40004df4
                0x0000000040004e00                r_rwip_time_get = 0x40004e00
                0x0000000040004e0c                r_rwip_timer_10ms_handler = 0x40004e0c
                0x0000000040004e18                r_rwip_timer_10ms_set = 0x40004e18
                0x0000000040004e24                r_rwip_timer_hs_handler = 0x40004e24
                0x0000000040004e30                r_rwip_timer_hs_set = 0x40004e30
                0x0000000040004e3c                r_rwip_timer_hus_handler = 0x40004e3c
                0x0000000040004e48                r_rwip_timer_hus_set = 0x40004e48
                0x0000000040004e54                r_rwip_wakeup = 0x40004e54
                0x0000000040004e60                r_rwip_wakeup_end = 0x40004e60
                0x0000000040004e6c                r_rwip_wlcoex_set = 0x40004e6c
                0x0000000040004e78                r_sch_alarm_clear = 0x40004e78
                0x0000000040004e84                r_sch_alarm_init = 0x40004e84
                0x0000000040004e90                r_sch_alarm_prog = 0x40004e90
                0x0000000040004e9c                r_sch_alarm_set = 0x40004e9c
                0x0000000040004ea8                r_sch_alarm_timer_isr = 0x40004ea8
                0x0000000040004eb4                r_sch_arb_conflict_check = 0x40004eb4
                0x0000000040004ec0                r_sch_arb_elt_cancel = 0x40004ec0
                0x0000000040004ed8                r_sch_arb_init = 0x40004ed8
                0x0000000040004ee4                r_sch_arb_insert = 0x40004ee4
                0x0000000040004ef0                r_sch_arb_prog_timer = 0x40004ef0
                0x0000000040004efc                r_sch_arb_remove = 0x40004efc
                0x0000000040004f08                r_sch_arb_sw_isr = 0x40004f08
                0x0000000040004f14                r_sch_plan_chk = 0x40004f14
                0x0000000040004f20                r_sch_plan_clock_wrap_offset_update = 0x40004f20
                0x0000000040004f2c                r_sch_plan_init = 0x40004f2c
                0x0000000040004f38                r_sch_plan_interval_req = 0x40004f38
                0x0000000040004f44                r_sch_plan_offset_max_calc = 0x40004f44
                0x0000000040004f50                r_sch_plan_offset_req = 0x40004f50
                0x0000000040004f5c                r_sch_plan_position_range_compute = 0x40004f5c
                0x0000000040004f68                r_sch_plan_rem = 0x40004f68
                0x0000000040004f74                r_sch_plan_req = 0x40004f74
                0x0000000040004f98                r_sch_prog_init = 0x40004f98
                0x0000000040004fa4                r_sch_prog_push = 0x40004fa4
                0x0000000040004fb0                r_sch_prog_rx_isr = 0x40004fb0
                0x0000000040004fbc                r_sch_prog_skip_isr = 0x40004fbc
                0x0000000040004fc8                r_sch_prog_tx_isr = 0x40004fc8
                0x0000000040004fd4                r_sch_slice_bg_add = 0x40004fd4
                0x0000000040004fe0                r_sch_slice_bg_remove = 0x40004fe0
                0x0000000040004fec                r_sch_slice_compute = 0x40004fec
                0x0000000040004ff8                r_sch_slice_fg_add = 0x40004ff8
                0x0000000040005004                r_sch_slice_fg_remove = 0x40005004
                0x0000000040005010                r_sch_slice_init = 0x40005010
                0x000000004000501c                r_sch_slice_per_add = 0x4000501c
                0x0000000040005028                r_sch_slice_per_remove = 0x40005028
                0x0000000040005034                r_sdk_config_get_bt_sleep_enable = 0x40005034
                0x0000000040005040                r_sdk_config_get_hl_derived_opts = 0x40005040
                0x000000004000504c                r_sdk_config_get_opts = 0x4000504c
                0x0000000040005058                r_sdk_config_get_priv_opts = 0x40005058
                0x0000000040005064                r_sdk_config_set_bt_sleep_enable = 0x40005064
                0x0000000040005070                r_sdk_config_set_hl_derived_opts = 0x40005070
                0x000000004000507c                r_sdk_config_set_opts = 0x4000507c
                0x0000000040005088                r_specialModP256 = 0x40005088
                0x0000000040005094                r_unloaded_area_init = 0x40005094
                0x00000000400050a0                r_vhci_flow_off = 0x400050a0
                0x00000000400050ac                r_vhci_flow_on = 0x400050ac
                0x00000000400050b8                r_vhci_notify_host_send_available = 0x400050b8
                0x00000000400050c4                r_vhci_send_to_host = 0x400050c4
                0x00000000400050d0                r_vnd_hci_command_handler = 0x400050d0
                0x00000000400050dc                r_vshci_init = 0x400050dc
                0x00000000400050e8                vnd_hci_command_handler_wrapper = 0x400050e8
                0x00000000400050f4                r_lld_legacy_adv_dynamic_pti_get = 0x400050f4
                0x0000000040005100                r_lld_legacy_adv_dynamic_pti_process = 0x40005100
                0x000000004000510c                r_lld_ext_adv_dynamic_pti_get = 0x4000510c
                0x0000000040005118                r_lld_ext_adv_dynamic_aux_pti_process = 0x40005118
                0x0000000040005124                r_lld_ext_adv_dynamic_pti_process = 0x40005124
                0x0000000040005130                r_lld_adv_ext_pkt_prepare_set = 0x40005130
                0x0000000040005148                r_lld_adv_ext_chain_connectable_construct = 0x40005148
                0x0000000040005160                r_lld_adv_pkt_rx_connect_post = 0x40005160
                0x000000004000516c                r_lld_adv_start_init_evt_param = 0x4000516c
                0x0000000040005178                r_lld_adv_start_set_cs = 0x40005178
                0x0000000040005184                r_lld_adv_start_update_filter_policy = 0x40005184
                0x0000000040005190                r_lld_adv_start_schedule_asap = 0x40005190
                0x000000004000519c                r_lld_con_tx_prog_new_packet_coex = 0x4000519c
                0x00000000400051b4                r_lld_per_adv_dynamic_pti_get = 0x400051b4
                0x00000000400051c0                r_lld_per_adv_evt_start_chm_upd = 0x400051c0
                0x00000000400051cc                r_lld_ext_scan_dynamic_pti_get = 0x400051cc
                0x00000000400051d8                r_lld_scan_try_sched = 0x400051d8
                0x00000000400051e4                r_lld_sync_insert = 0x400051e4
                0x00000000400051f0                r_sch_prog_ble_push = 0x400051f0
                0x00000000400051fc                r_sch_prog_bt_push = 0x400051fc
                0x0000000040005208                r_lld_init_evt_end_type_set = 0x40005208
                0x0000000040005214                r_lld_init_evt_end_type_get = 0x40005214
                0x0000000040005220                r_lld_adv_direct_adv_use_rpa_addr_state_set = 0x40005220
                0x000000004000522c                r_lld_adv_direct_adv_use_rpa_addr_state_get = 0x4000522c
                0x0000000040005238                r_lld_init_evt_end_type_check_state_set = 0x40005238
                0x0000000040005244                r_lld_init_evt_end_type_check_state_get = 0x40005244
                0x000000003fceffa8                bt_rf_coex_cfg_p = 0x3fceffa8
                0x000000003fceffa4                bt_rf_coex_hooks_p = 0x3fceffa4
                0x000000003fceffa0                btdm_env_p = 0x3fceffa0
                0x000000003fceff9c                g_rw_controller_task_handle = 0x3fceff9c
                0x000000003fceff98                g_rw_init_sem = 0x3fceff98
                0x000000003fceff94                g_rw_schd_queue = 0x3fceff94
                0x000000003fceff90                lld_init_env = 0x3fceff90
                0x000000003fceff8c                lld_rpa_renew_env = 0x3fceff8c
                0x000000003fceff88                lld_scan_env = 0x3fceff88
                0x000000003fceff84                lld_scan_sync_env = 0x3fceff84
                0x000000003fceff80                lld_test_env = 0x3fceff80
                0x000000003fceff7c                p_ble_util_buf_env = 0x3fceff7c
                0x000000003fceff78                p_lld_env = 0x3fceff78
                0x000000003fceff74                p_llm_env = 0x3fceff74
                0x000000003fceff70                r_h4tl_eif_p = 0x3fceff70
                0x000000003fceff6c                r_hli_funcs_p = 0x3fceff6c
                0x000000003fceff68                r_ip_funcs_p = 0x3fceff68
                0x000000003fceff64                r_modules_funcs_p = 0x3fceff64
                0x000000003fceff60                r_osi_funcs_p = 0x3fceff60
                0x000000003fceff5c                r_plf_funcs_p = 0x3fceff5c
                0x000000003fceff58                vhci_env_p = 0x3fceff58
                0x000000003fceff54                aa_gen = 0x3fceff54
                0x000000003fceff48                aes_env = 0x3fceff48
                0x000000003fcefef8                bt_rf_coex_cfg_cb = 0x3fcefef8
                0x000000003fcefef4                btdm_pwr_state = 0x3fcefef4
                0x000000003fcefef0                btdm_slp_err = 0x3fcefef0
                0x000000003fcefee8                ecc_env = 0x3fcefee8
                0x000000003fcefee0                esp_handler = 0x3fcefee0
                0x000000003fcefed8                esp_vendor_cmd = 0x3fcefed8
                0x000000003fcefed4                g_adv_delay_dis = 0x3fcefed4
                0x000000003fcefed0                g_conflict_elt = 0x3fcefed0
                0x000000003fcefec0                g_eif_api = 0x3fcefec0
                0x000000003fcefeb4                g_event_empty = 0x3fcefeb4
                0x000000003fcefeaa                g_llc_state = 0x3fcefeaa
                0x000000003fcefea9                g_llm_state = 0x3fcefea9
                0x000000003fcefea7                g_max_evt_env = 0x3fcefea7
                0x000000003fcefea6                g_misc_state = 0x3fcefea6
                0x000000003fcefe8a                g_rma_rule_db = 0x3fcefe8a
                0x000000003fcefe6e                g_rtp_rule_db = 0x3fcefe6e
                0x000000003fcefe6d                g_scan_forever = 0x3fcefe6d
                0x000000003fcefe6c                g_time_msb = 0x3fcefe6c
                0x000000003fcefe44                h4tl_env = 0x3fcefe44
                0x000000003fcefe21                hci_env = 0x3fcefe21
                0x000000003fcefe20                hci_ext_host = 0x3fcefe20
                0x000000003fcefe18                hci_fc_env = 0x3fcefe18
                0x000000003fcefdec                hci_tl_env = 0x3fcefdec
                0x000000003fcefdbc                ke_env = 0x3fcefdbc
                0x000000003fcefd7c                ke_event_env = 0x3fcefd7c
                0x000000003fcefd00                ke_task_env = 0x3fcefd00
                0x000000003fcefcd8                llc_env = 0x3fcefcd8
                0x000000003fcefcb0                lld_adv_env = 0x3fcefcb0
                0x000000003fcefc88                lld_con_env = 0x3fcefc88
                0x000000003fcefc80                lld_exp_sync_pos_tab = 0x3fcefc80
                0x000000003fcefc58                lld_per_adv_env = 0x3fcefc58
                0x000000003fcefc30                lld_sync_env = 0x3fcefc30
                0x000000003fcefc24                llm_le_adv_flow_env = 0x3fcefc24
                0x000000003fcefc20                rw_sleep_enable = 0x3fcefc20
                0x000000003fcefc18                rwble_env = 0x3fcefc18
                0x000000003fcefbfc                rwip_env = 0x3fcefbfc
                0x000000003fcefbf0                rwip_param = 0x3fcefbf0
                0x000000003fcefbec                rwip_prog_delay = 0x3fcefbec
                0x000000003fcefbb4                rwip_rf = 0x3fcefbb4
                0x000000003fcefbac                sch_alarm_env = 0x3fcefbac
                0x000000003fcefb98                sch_arb_env = 0x3fcefb98
                0x000000003fcefb90                sch_plan_env = 0x3fcefb90
                0x000000003fcefa8c                sch_prog_env = 0x3fcefa8c
                0x000000003fcefa2c                sch_slice_env = 0x3fcefa2c
                0x000000003fcefa24                sch_slice_params = 0x3fcefa24
                0x000000003fcefa1c                timer_env = 0x3fcefa1c
                0x000000003fcefa18                unloaded_area = 0x3fcefa18
                0x000000003fcefa14                vshci_state = 0x3fcefa14
                0x000000003fcefa08                TASK_DESC_LLC = 0x3fcefa08
                0x000000003fcef9fc                TASK_DESC_LLM = 0x3fcef9fc
                0x000000003fcef9f0                TASK_DESC_VSHCI = 0x3fcef9f0
                0x000000003fcef9e8                co_default_bdaddr = 0x3fcef9e8
                0x000000003fcef9e4                dbg_assert_block = 0x3fcef9e4
                0x000000003fcef9e0                g_bt_plf_log_level = 0x3fcef9e0
                0x000000003fcef9bc                hci_cmd_desc_tab_vs_esp = 0x3fcef9bc
                0x000000003fcef9a4                hci_command_handler_tab_esp = 0x3fcef9a4
                0x000000003fcef9a0                privacy_en = 0x3fcef9a0
                0x000000003fcef958                sdk_cfg_priv_opts = 0x3fcef958
                0x000000003ff1ffdc                BasePoint_x_256 = 0x3ff1ffdc
                0x000000003ff1ffbc                BasePoint_y_256 = 0x3ff1ffbc
                0x000000003ff1ff9c                DebugE256PublicKey_x = 0x3ff1ff9c
                0x000000003ff1ff7c                DebugE256PublicKey_y = 0x3ff1ff7c
                0x000000003ff1ff5c                DebugE256SecretKey = 0x3ff1ff5c
                0x000000003ff1f7a0                ECC_4Win_Look_up_table = 0x3ff1f7a0
                0x000000003ff1f79a                LLM_AA_CT1 = 0x3ff1f79a
                0x000000003ff1f798                LLM_AA_CT2 = 0x3ff1f798
                0x000000003ff1f790                RF_TX_PW_CONV_TBL = 0x3ff1f790
                0x000000003ff1f784                TASK_DESC_MISC = 0x3ff1f784
                0x000000003ff1f766                adv_evt_prop2type = 0x3ff1f766
                0x000000003ff1f761                adv_evt_type2prop = 0x3ff1f761
                0x000000003ff1f751                aes_cmac_zero = 0x3ff1f751
                0x000000003ff1f741                aes_k2_salt = 0x3ff1f741
                0x000000003ff1f73c                aes_k3_id64 = 0x3ff1f73c
                0x000000003ff1f72c                aes_k3_salt = 0x3ff1f72c
                0x000000003ff1f728                aes_k4_id6 = 0x3ff1f728
                0x000000003ff1f718                aes_k4_salt = 0x3ff1f718
                0x000000003ff1f6ec                bigHexP256 = 0x3ff1f6ec
                0x000000003ff1f6e2                byte_tx_time = 0x3ff1f6e2
                0x000000003ff1f6dc                co_null_bdaddr = 0x3ff1f6dc
                0x000000003ff1f6d7                co_phy_mask_to_rate = 0x3ff1f6d7
                0x000000003ff1f6d2                co_phy_mask_to_value = 0x3ff1f6d2
                0x000000003ff1f6ce                co_phy_to_rate = 0x3ff1f6ce
                0x000000003ff1f6ca                co_phy_value_to_mask = 0x3ff1f6ca
                0x000000003ff1f6c5                co_rate_to_byte_dur_us = 0x3ff1f6c5
                0x000000003ff1f6c0                co_rate_to_phy = 0x3ff1f6c0
                0x000000003ff1f6bc                co_rate_to_phy_mask = 0x3ff1f6bc
                0x000000003ff1f6ac                co_sca2ppm = 0x3ff1f6ac
                0x000000003ff1f680                coef_B = 0x3ff1f680
                0x000000003ff1f678                connect_req_dur_tab = 0x3ff1f678
                0x000000003ff1f5f4                ecc_Jacobian_InfinityPoint256 = 0x3ff1f5f4
                0x000000003ff1f526                em_base_reg_lut = 0x3ff1f526
                0x000000003ff1f51e                fixed_tx_time = 0x3ff1f51e
                0x000000003ff1f518                h4tl_msgtype2hdrlen = 0x3ff1f518
                0x000000003ff1f4e8                hci_cmd_desc_root_tab = 0x3ff1f4e8
                0x000000003ff1f47c                hci_cmd_desc_tab_ctrl_bb = 0x3ff1f47c
                0x000000003ff1f44c                hci_cmd_desc_tab_info_par = 0x3ff1f44c
                0x000000003ff1f0b0                hci_cmd_desc_tab_le = 0x3ff1f0b0
                0x000000003ff1f098                hci_cmd_desc_tab_lk_ctrl = 0x3ff1f098
                0x000000003ff1f08c                hci_cmd_desc_tab_stat_par = 0x3ff1f08c
                0x000000003ff1f050                hci_cmd_desc_tab_vs = 0x3ff1f050
                0x000000003ff1f008                hci_evt_desc_tab = 0x3ff1f008
                0x000000003ff1ef68                hci_evt_le_desc_tab = 0x3ff1ef68
                0x000000003ff1ef60                hci_evt_le_desc_tab_esp = 0x3ff1ef60
                0x000000003ff1ef57                hci_rsvd_evt_msk = 0x3ff1ef57
                0x000000003ff1ef54                lld_aux_phy_to_rate = 0x3ff1ef54
                0x000000003ff1ef4c                lld_init_max_aux_dur_tab = 0x3ff1ef4c
                0x000000003ff1ef44                lld_scan_map_legacy_pdu_to_evt_type = 0x3ff1ef44
                0x000000003ff1ef3c                lld_scan_max_aux_dur_tab = 0x3ff1ef3c
                0x000000003ff1ef34                lld_sync_max_aux_dur_tab = 0x3ff1ef34
                0x000000003ff1ef2c                llm_local_le_feats = 0x3ff1ef2c
                0x000000003ff1ef24                llm_local_le_states = 0x3ff1ef24
                0x000000003ff1eefc                llm_local_supp_cmds = 0x3ff1eefc
                0x000000003ff1eedc                maxSecretKey_256 = 0x3ff1eedc
                0x000000003ff1eed4                max_data_tx_time = 0x3ff1eed4
                0x000000003ff1eec3                one_bits = 0x3ff1eec3
                0x000000003ff1eebe                rwip_coex_cfg = 0x3ff1eebe
                0x000000003ff1eea8                rwip_priority = 0x3ff1eea8
                0x000000003ff1ee5c                veryBigHexP256 = 0x3ff1ee5c
                0x0000000040001c60                r_llc_loc_encrypt_proc_continue_hook = 0x40001c60
                0x0000000040001c64                r_llc_loc_phy_upd_proc_continue_hook = 0x40001c64
                0x0000000040001c68                r_llc_rem_phy_upd_proc_continue_hook = 0x40001c68
                0x0000000040001c6c                r_lld_scan_frm_eof_isr_hook = 0x40001c6c
                0x0000000040001c70                r_lld_scan_evt_start_cbk_hook = 0x40001c70
                0x0000000040001c78                r_lld_scan_process_pkt_rx_ext_adv_hook = 0x40001c78
                0x0000000040001c7c                r_lld_scan_sched_hook = 0x40001c7c
                0x0000000040001c84                r_lld_adv_evt_start_cbk_hook = 0x40001c84
                0x0000000040001c88                r_lld_adv_aux_evt_start_cbk_hook = 0x40001c88
                0x0000000040001c8c                r_lld_adv_frm_isr_hook = 0x40001c8c
                0x0000000040001c90                r_lld_adv_start_init_evt_param_hook = 0x40001c90
                0x0000000040001c94                r_lld_con_evt_canceled_cbk_hook = 0x40001c94
                0x0000000040001c98                r_lld_con_frm_isr_hook = 0x40001c98
                0x0000000040001c9c                r_lld_con_tx_hook = 0x40001c9c
                0x0000000040001ca0                r_lld_con_rx_hook = 0x40001ca0
                0x0000000040001ca4                r_lld_con_evt_start_cbk_hook = 0x40001ca4
                0x0000000040001cac                r_lld_con_tx_prog_new_packet_hook = 0x40001cac
                0x0000000040001cb0                r_lld_init_frm_eof_isr_hook = 0x40001cb0
                0x0000000040001cb4                r_lld_init_evt_start_cbk_hook = 0x40001cb4
                0x0000000040001cbc                r_lld_init_sched_hook = 0x40001cbc
                0x0000000040001cc0                r_lld_init_process_pkt_tx_hook = 0x40001cc0
                0x0000000040001cc4                r_lld_per_adv_evt_start_cbk_hook = 0x40001cc4
                0x0000000040001cc8                r_lld_per_adv_frm_isr_hook = 0x40001cc8
                0x0000000040001ccc                r_lld_per_adv_start_hook = 0x40001ccc
                0x0000000040001cd0                r_lld_sync_frm_eof_isr_hook = 0x40001cd0
                0x0000000040001cd4                r_lld_sync_evt_start_cbk_hook = 0x40001cd4
                0x0000000040001cd8                r_lld_sync_start_hook = 0x40001cd8
                0x0000000040001cdc                r_lld_sync_process_pkt_rx_pkt_check_hook = 0x40001cdc
                0x0000000040001ce0                r_sch_arb_insert_hook = 0x40001ce0
                0x0000000040001ce4                r_sch_plan_offset_req_hook = 0x40001ce4
                0x0000000040005250                esp_pp_rom_version_get = 0x40005250
                0x000000004000525c                RC_GetBlockAckTime = 0x4000525c
                0x0000000040005268                ebuf_list_remove = 0x40005268
                0x0000000040005274                esf_buf_alloc = 0x40005274
                0x0000000040005280                esf_buf_alloc_dynamic = 0x40005280
                0x0000000040005298                GetAccess = 0x40005298
                0x00000000400052a4                hal_mac_is_low_rate_enabled = 0x400052a4
                0x00000000400052b0                hal_mac_tx_get_blockack = 0x400052b0
                0x00000000400052c8                ic_get_trc = 0x400052c8
                0x00000000400052e0                ic_mac_init = 0x400052e0
                0x00000000400052ec                ic_interface_enabled = 0x400052ec
                0x00000000400052f8                is_lmac_idle = 0x400052f8
                0x0000000040005304                lmacAdjustTimestamp = 0x40005304
                0x0000000040005310                lmacDiscardAgedMSDU = 0x40005310
                0x0000000040005328                lmacEndFrameExchangeSequence = 0x40005328
                0x0000000040005334                lmacIsIdle = 0x40005334
                0x0000000040005340                lmacIsLongFrame = 0x40005340
                0x000000004000534c                lmacMSDUAged = 0x4000534c
                0x0000000040005358                lmacPostTxComplete = 0x40005358
                0x0000000040005364                lmacProcessAllTxTimeout = 0x40005364
                0x0000000040005370                lmacProcessCollisions = 0x40005370
                0x000000004000537c                lmacProcessRxSucData = 0x4000537c
                0x0000000040005388                lmacReachLongLimit = 0x40005388
                0x0000000040005394                lmacReachShortLimit = 0x40005394
                0x00000000400053a0                lmacRecycleMPDU = 0x400053a0
                0x00000000400053ac                lmacRxDone = 0x400053ac
                0x00000000400053c4                lmacTxDone = 0x400053c4
                0x00000000400053dc                mac_tx_set_duration = 0x400053dc
                0x00000000400053f4                mac_tx_set_plcp0 = 0x400053f4
                0x000000004000540c                mac_tx_set_plcp2 = 0x4000540c
                0x0000000040005418                pm_check_state = 0x40005418
                0x0000000040005424                pm_disable_dream_timer = 0x40005424
                0x0000000040005430                pm_disable_sleep_delay_timer = 0x40005430
                0x000000004000543c                pm_dream = 0x4000543c
                0x0000000040005448                pm_mac_wakeup = 0x40005448
                0x0000000040005454                pm_mac_sleep = 0x40005454
                0x0000000040005460                pm_enable_active_timer = 0x40005460
                0x000000004000546c                pm_enable_sleep_delay_timer = 0x4000546c
                0x0000000040005478                pm_local_tsf_process = 0x40005478
                0x0000000040005484                pm_set_beacon_filter = 0x40005484
                0x0000000040005490                pm_is_in_wifi_slice_threshold = 0x40005490
                0x000000004000549c                pm_is_waked = 0x4000549c
                0x00000000400054a8                pm_keep_alive = 0x400054a8
                0x00000000400054c0                pm_on_data_rx = 0x400054c0
                0x00000000400054cc                pm_on_tbtt = 0x400054cc
                0x0000000040005514                pm_sleep_for = 0x40005514
                0x000000004000552c                ppAMPDU2Normal = 0x4000552c
                0x0000000040005538                ppAssembleAMPDU = 0x40005538
                0x0000000040005544                ppCalFrameTimes = 0x40005544
                0x0000000040005550                ppCalSubFrameLength = 0x40005550
                0x000000004000555c                ppCalTxAMPDULength = 0x4000555c
                0x0000000040005568                ppCheckTxAMPDUlength = 0x40005568
                0x0000000040005574                ppDequeueRxq_Locked = 0x40005574
                0x0000000040005580                ppDequeueTxQ = 0x40005580
                0x000000004000558c                ppEmptyDelimiterLength = 0x4000558c
                0x0000000040005598                ppEnqueueRxq = 0x40005598
                0x00000000400055a4                ppEnqueueTxDone = 0x400055a4
                0x00000000400055b0                ppGetTxQFirstAvail_Locked = 0x400055b0
                0x00000000400055bc                ppGetTxframe = 0x400055bc
                0x00000000400055e0                ppProcessRxPktHdr = 0x400055e0
                0x00000000400055ec                ppProcessTxQ = 0x400055ec
                0x00000000400055f8                ppRecordBarRRC = 0x400055f8
                0x0000000040005604                lmacRequestTxopQueue = 0x40005604
                0x0000000040005610                lmacReleaseTxopQueue = 0x40005610
                0x000000004000561c                ppRecycleAmpdu = 0x4000561c
                0x0000000040005628                ppRecycleRxPkt = 0x40005628
                0x0000000040005634                ppResortTxAMPDU = 0x40005634
                0x0000000040005640                ppResumeTxAMPDU = 0x40005640
                0x0000000040005658                ppRxPkt = 0x40005658
                0x0000000040005664                ppRxProtoProc = 0x40005664
                0x0000000040005670                ppSearchTxQueue = 0x40005670
                0x000000004000567c                ppSearchTxframe = 0x4000567c
                0x0000000040005688                ppSelectNextQueue = 0x40005688
                0x0000000040005694                ppSubFromAMPDU = 0x40005694
                0x00000000400056ac                ppTxPkt = 0x400056ac
                0x00000000400056b8                ppTxProtoProc = 0x400056b8
                0x00000000400056c4                ppTxqUpdateBitmap = 0x400056c4
                0x00000000400056d0                pp_coex_tx_request = 0x400056d0
                0x00000000400056dc                pp_hdrsize = 0x400056dc
                0x00000000400056e8                pp_post = 0x400056e8
                0x00000000400056f4                pp_process_hmac_waiting_txq = 0x400056f4
                0x0000000040005700                rcGetAmpduSched = 0x40005700
                0x000000004000570c                rcUpdateRxDone = 0x4000570c
                0x0000000040005718                rc_get_trc = 0x40005718
                0x0000000040005724                rc_get_trc_by_index = 0x40005724
                0x0000000040005730                rcAmpduLowerRate = 0x40005730
                0x000000004000573c                rcampduuprate = 0x4000573c
                0x0000000040005748                rcClearCurAMPDUSched = 0x40005748
                0x0000000040005754                rcClearCurSched = 0x40005754
                0x0000000040005760                rcClearCurStat = 0x40005760
                0x000000004000576c                rcGetSched = 0x4000576c
                0x0000000040005778                rcLowerSched = 0x40005778
                0x0000000040005784                rcSetTxAmpduLimit = 0x40005784
                0x000000004000579c                rcUpdateAckSnr = 0x4000579c
                0x00000000400057a8                rcUpdateRate = 0x400057a8
                0x00000000400057c0                rcUpdateTxDoneAmpdu2 = 0x400057c0
                0x00000000400057cc                rcUpSched = 0x400057cc
                0x00000000400057d8                rssi_margin = 0x400057d8
                0x00000000400057e4                rx11NRate2AMPDULimit = 0x400057e4
                0x00000000400057f0                TRC_AMPDU_PER_DOWN_THRESHOLD = 0x400057f0
                0x00000000400057fc                TRC_AMPDU_PER_UP_THRESHOLD = 0x400057fc
                0x0000000040005808                trc_calc_duration = 0x40005808
                0x0000000040005814                trc_isTxAmpduOperational = 0x40005814
                0x0000000040005820                trc_onAmpduOp = 0x40005820
                0x000000004000582c                TRC_PER_IS_GOOD = 0x4000582c
                0x0000000040005838                trc_SetTxAmpduState = 0x40005838
                0x0000000040005844                trc_tid_isTxAmpduOperational = 0x40005844
                0x0000000040005850                trcAmpduSetState = 0x40005850
                0x000000004000585c                wDevCheckBlockError = 0x4000585c
                0x0000000040005868                wDev_AppendRxBlocks = 0x40005868
                0x0000000040005874                wDev_DiscardFrame = 0x40005874
                0x0000000040005880                wDev_GetNoiseFloor = 0x40005880
                0x000000004000588c                wDev_IndicateAmpdu = 0x4000588c
                0x0000000040005898                wDev_IndicateFrame = 0x40005898
                0x00000000400058a4                wdev_bank_store = 0x400058a4
                0x00000000400058b0                wdev_bank_load = 0x400058b0
                0x00000000400058bc                wdev_mac_reg_load = 0x400058bc
                0x00000000400058c8                wdev_mac_reg_store = 0x400058c8
                0x00000000400058d4                wdev_mac_special_reg_load = 0x400058d4
                0x00000000400058e0                wdev_mac_special_reg_store = 0x400058e0
                0x00000000400058ec                wdev_mac_wakeup = 0x400058ec
                0x00000000400058f8                wdev_mac_sleep = 0x400058f8
                0x0000000040005904                hal_mac_is_dma_enable = 0x40005904
                0x000000004000591c                wDev_ProcessRxSucData = 0x4000591c
                0x0000000040005928                wdevProcessRxSucDataAll = 0x40005928
                0x0000000040005934                wdev_csi_len_align = 0x40005934
                0x0000000040005940                ppDequeueTxDone_Locked = 0x40005940
                0x0000000040005964                config_is_cache_tx_buf_enabled = 0x40005964
                0x0000000040005970                ppMapWaitTxq = 0x40005970
                0x000000004000597c                ppProcessWaitingQueue = 0x4000597c
                0x0000000040005988                ppDisableQueue = 0x40005988
                0x0000000040005994                pm_allow_tx = 0x40005994
                0x00000000400059a0                wdev_is_data_in_rxlist = 0x400059a0
                0x00000000400059ac                ppProcTxCallback = 0x400059ac
                0x000000003ff1ee58                our_instances_ptr = 0x3ff1ee58
                0x000000003fcef954                pTxRx = 0x3fcef954
                0x000000003fcef950                lmacConfMib_ptr = 0x3fcef950
                0x000000003fcef94c                our_wait_eb = 0x3fcef94c
                0x000000003fcef948                our_tx_eb = 0x3fcef948
                0x000000003fcef944                pp_wdev_funcs = 0x3fcef944
                0x000000003fcef940                g_osi_funcs_p = 0x3fcef940
                0x000000003fcef93c                wDevCtrl_ptr = 0x3fcef93c
                0x000000003ff1ee54                g_wdev_last_desc_reset_ptr = 0x3ff1ee54
                0x000000003fcef938                wDevMacSleep_ptr = 0x3fcef938
                0x000000003fcef934                g_lmac_cnt_ptr = 0x3fcef934
                0x000000003ff1ee50                our_controls_ptr = 0x3ff1ee50
                0x000000003fcef930                pp_sig_cnt_ptr = 0x3fcef930
                0x000000003fcef92c                g_eb_list_desc_ptr = 0x3fcef92c
                0x000000003fcef928                s_fragment_ptr = 0x3fcef928
                0x000000003fcef924                if_ctrl_ptr = 0x3fcef924
                0x000000003fcef920                g_intr_lock_mux = 0x3fcef920
                0x000000003fcef91c                g_wifi_global_lock = 0x3fcef91c
                0x000000003fcef918                s_wifi_queue = 0x3fcef918
                0x000000003fcef914                pp_task_hdl = 0x3fcef914
                0x000000003fcef910                s_pp_task_create_sem = 0x3fcef910
                0x000000003fcef90c                s_pp_task_del_sem = 0x3fcef90c
                0x000000003fcef908                g_wifi_menuconfig_ptr = 0x3fcef908
                0x000000003fcef904                xphyQueue = 0x3fcef904
                0x000000003fcef900                ap_no_lr_ptr = 0x3fcef900
                0x000000003fcef8fc                rc11BSchedTbl_ptr = 0x3fcef8fc
                0x000000003fcef8f8                rc11NSchedTbl_ptr = 0x3fcef8f8
                0x000000003fcef8f4                rcLoRaSchedTbl_ptr = 0x3fcef8f4
                0x000000003fcef8f0                BasicOFDMSched_ptr = 0x3fcef8f0
                0x000000003fcef8ec                trc_ctl_ptr = 0x3fcef8ec
                0x000000003fcef8e8                g_pm_cnt_ptr = 0x3fcef8e8
                0x000000003fcef8e4                g_pm_ptr = 0x3fcef8e4
                0x000000003fcef8e0                g_pm_cfg_ptr = 0x3fcef8e0
                0x000000003fcef8dc                g_esp_mesh_quick_funcs_ptr = 0x3fcef8dc
                0x000000003fcef8d8                g_txop_queue_status_ptr = 0x3fcef8d8
                0x000000003fcef8d4                g_mac_sleep_en_ptr = 0x3fcef8d4
                0x000000003fcef8d0                g_mesh_is_root_ptr = 0x3fcef8d0
                0x000000003fcef8cc                g_mesh_topology_ptr = 0x3fcef8cc
                0x000000003fcef8c8                g_mesh_init_ps_type_ptr = 0x3fcef8c8
                0x000000003fcef8c4                g_mesh_is_started_ptr = 0x3fcef8c4
                0x000000003fcef8c0                g_config_func = 0x3fcef8c0
                0x000000003fcef8bc                g_net80211_tx_func = 0x3fcef8bc
                0x000000003fcef8b8                g_timer_func = 0x3fcef8b8
                0x000000003fcef8b4                s_michael_mic_failure_cb = 0x3fcef8b4
                0x000000003fcef8b0                wifi_sta_rx_probe_req = 0x3fcef8b0
                0x000000003fcef8ac                g_tx_done_cb_func = 0x3fcef8ac
                0x000000003fcef860                g_per_conn_trc = 0x3fcef860
                0x000000003fcef85c                s_encap_amsdu_func = 0x3fcef85c
                0x00000000400059b8                esp_net80211_rom_version_get = 0x400059b8
                0x00000000400059c4                ampdu_dispatch = 0x400059c4
                0x00000000400059d0                ampdu_dispatch_all = 0x400059d0
                0x00000000400059dc                ampdu_dispatch_as_many_as_possible = 0x400059dc
                0x00000000400059e8                ampdu_dispatch_movement = 0x400059e8
                0x00000000400059f4                ampdu_dispatch_upto = 0x400059f4
                0x0000000040005a00                chm_is_at_home_channel = 0x40005a00
                0x0000000040005a0c                cnx_node_is_existing = 0x40005a0c
                0x0000000040005a18                cnx_node_search = 0x40005a18
                0x0000000040005a24                ic_ebuf_recycle_rx = 0x40005a24
                0x0000000040005a30                ic_ebuf_recycle_tx = 0x40005a30
                0x0000000040005a3c                ic_reset_rx_ba = 0x40005a3c
                0x0000000040005a48                ieee80211_align_eb = 0x40005a48
                0x0000000040005a54                ieee80211_ampdu_reorder = 0x40005a54
                0x0000000040005a60                ieee80211_ampdu_start_age_timer = 0x40005a60
                0x0000000040005a78                ieee80211_is_tx_allowed = 0x40005a78
                0x0000000040005a84                ieee80211_output_pending_eb = 0x40005a84
                0x0000000040005a90                ieee80211_output_process = 0x40005a90
                0x0000000040005a9c                ieee80211_set_tx_desc = 0x40005a9c
                0x0000000040005ab4                wifi_get_macaddr = 0x40005ab4
                0x0000000040005ac0                wifi_rf_phy_disable = 0x40005ac0
                0x0000000040005acc                wifi_rf_phy_enable = 0x40005acc
                0x0000000040005ad8                ic_ebuf_alloc = 0x40005ad8
                0x0000000040005ae4                ieee80211_classify = 0x40005ae4
                0x0000000040005af0                ieee80211_copy_eb_header = 0x40005af0
                0x0000000040005afc                ieee80211_recycle_cache_eb = 0x40005afc
                0x0000000040005b08                ieee80211_search_node = 0x40005b08
                0x0000000040005b14                roundup2 = 0x40005b14
                0x0000000040005b20                ieee80211_crypto_encap = 0x40005b20
                0x0000000040005b44                ieee80211_set_tx_pti = 0x40005b44
                0x0000000040005b50                wifi_is_started = 0x40005b50
                0x0000000040005b5c                ieee80211_gettid = 0x40005b5c
                0x000000003fcef858                net80211_funcs = 0x3fcef858
                0x000000003fcef854                g_scan = 0x3fcef854
                0x000000003fcef850                g_chm = 0x3fcef850
                0x000000003fcef84c                g_ic_ptr = 0x3fcef84c
                0x000000003fcef848                g_hmac_cnt_ptr = 0x3fcef848
                0x000000003fcef844                g_tx_cacheq_ptr = 0x3fcef844
                0x000000003fcef840                s_netstack_free = 0x3fcef840
                0x000000003fcef83c                mesh_rxcb = 0x3fcef83c
                0x000000003fcef838                sta_rxcb = 0x3fcef838
                0x0000000040005b68                esp_coex_rom_version_get = 0x40005b68
                0x0000000040005b74                coex_bt_release = 0x40005b74
                0x0000000040005b80                coex_bt_request = 0x40005b80
                0x0000000040005b8c                coex_core_ble_conn_dyn_prio_get = 0x40005b8c
                0x0000000040005b98                coex_core_event_duration_get = 0x40005b98
                0x0000000040005ba4                coex_core_pti_get = 0x40005ba4
                0x0000000040005bb0                coex_core_release = 0x40005bb0
                0x0000000040005bbc                coex_core_request = 0x40005bbc
                0x0000000040005bc8                coex_core_status_get = 0x40005bc8
                0x0000000040005be0                coex_event_duration_get = 0x40005be0
                0x0000000040005bec                coex_hw_timer_disable = 0x40005bec
                0x0000000040005bf8                coex_hw_timer_enable = 0x40005bf8
                0x0000000040005c04                coex_hw_timer_set = 0x40005c04
                0x0000000040005c10                coex_schm_interval_set = 0x40005c10
                0x0000000040005c1c                coex_schm_lock = 0x40005c1c
                0x0000000040005c28                coex_schm_unlock = 0x40005c28
                0x0000000040005c34                coex_status_get = 0x40005c34
                0x0000000040005c40                coex_wifi_release = 0x40005c40
                0x0000000040005c4c                esp_coex_ble_conn_dynamic_prio_get = 0x40005c4c
                0x000000003fcef834                coex_env_ptr = 0x3fcef834
                0x000000003fcef830                coex_pti_tab_ptr = 0x3fcef830
                0x000000003fcef82c                coex_schm_env_ptr = 0x3fcef82c
                0x000000003fcef828                coexist_funcs = 0x3fcef828
                0x000000003fcef824                g_coa_funcs_p = 0x3fcef824
                0x000000003fcef820                g_coex_param_ptr = 0x3fcef820
                0x0000000040005c58                phy_get_romfuncs = 0x40005c58
                0x0000000040005c64                rom_abs_temp = 0x40005c64
                0x0000000040005c70                rom_bb_bss_cbw40_dig = 0x40005c70
                0x0000000040005c7c                rom_bb_wdg_test_en = 0x40005c7c
                0x0000000040005c88                rom_bb_wdt_get_status = 0x40005c88
                0x0000000040005c94                rom_bb_wdt_int_enable = 0x40005c94
                0x0000000040005ca0                rom_bb_wdt_rst_enable = 0x40005ca0
                0x0000000040005cac                rom_bb_wdt_timeout_clear = 0x40005cac
                0x0000000040005cb8                rom_cbw2040_cfg = 0x40005cb8
                0x0000000040005cc4                rom_check_noise_floor = 0x40005cc4
                0x0000000040005cd0                rom_chip_i2c_readReg = 0x40005cd0
                0x0000000040005cdc                rom_chip_i2c_writeReg = 0x40005cdc
                0x0000000040005ce8                rom_dc_iq_est = 0x40005ce8
                0x0000000040005cf4                rom_disable_agc = 0x40005cf4
                0x0000000040005d00                rom_en_pwdet = 0x40005d00
                0x0000000040005d0c                rom_enable_agc = 0x40005d0c
                0x0000000040005d18                rom_get_bbgain_db = 0x40005d18
                0x0000000040005d24                rom_get_data_sat = 0x40005d24
                0x0000000040005d30                rom_get_i2c_read_mask = 0x40005d30
                0x0000000040005d3c                rom_get_pwctrl_correct = 0x40005d3c
                0x0000000040005d48                rom_i2c_readReg = 0x40005d48
                0x0000000040005d54                rom_i2c_readReg_Mask = 0x40005d54
                0x0000000040005d60                rom_i2c_writeReg = 0x40005d60
                0x0000000040005d6c                rom_i2c_writeReg_Mask = 0x40005d6c
                0x0000000040005d78                rom_index_to_txbbgain = 0x40005d78
                0x0000000040005d84                rom_iq_est_disable = 0x40005d84
                0x0000000040005d90                rom_iq_est_enable = 0x40005d90
                0x0000000040005d9c                rom_linear_to_db = 0x40005d9c
                0x0000000040005da8                rom_loopback_mode_en = 0x40005da8
                0x0000000040005db4                rom_mhz2ieee = 0x40005db4
                0x0000000040005dc0                rom_noise_floor_auto_set = 0x40005dc0
                0x0000000040005dcc                rom_pbus_debugmode = 0x40005dcc
                0x0000000040005dd8                rom_pbus_force_mode = 0x40005dd8
                0x0000000040005de4                rom_pbus_force_test = 0x40005de4
                0x0000000040005df0                rom_pbus_rd = 0x40005df0
                0x0000000040005dfc                rom_pbus_rd_addr = 0x40005dfc
                0x0000000040005e08                rom_pbus_rd_shift = 0x40005e08
                0x0000000040005e14                rom_pbus_set_dco = 0x40005e14
                0x0000000040005e20                rom_pbus_set_rxgain = 0x40005e20
                0x0000000040005e2c                rom_pbus_workmode = 0x40005e2c
                0x0000000040005e38                rom_pbus_xpd_rx_off = 0x40005e38
                0x0000000040005e44                rom_pbus_xpd_rx_on = 0x40005e44
                0x0000000040005e50                rom_pbus_xpd_tx_off = 0x40005e50
                0x0000000040005e5c                rom_pbus_xpd_tx_on = 0x40005e5c
                0x0000000040005e68                rom_phy_byte_to_word = 0x40005e68
                0x0000000040005e74                rom_phy_disable_cca = 0x40005e74
                0x0000000040005e80                rom_phy_enable_cca = 0x40005e80
                0x0000000040005e8c                rom_phy_get_noisefloor = 0x40005e8c
                0x0000000040005e98                rom_phy_get_rx_freq = 0x40005e98
                0x0000000040005ea4                rom_phy_set_bbfreq_init = 0x40005ea4
                0x0000000040005eb0                rom_pow_usr = 0x40005eb0
                0x0000000040005ebc                rom_pwdet_sar2_init = 0x40005ebc
                0x0000000040005ec8                rom_read_hw_noisefloor = 0x40005ec8
                0x0000000040005ed4                rom_read_sar_dout = 0x40005ed4
                0x0000000040005ee0                rom_set_cal_rxdc = 0x40005ee0
                0x0000000040005eec                rom_set_chan_cal_interp = 0x40005eec
                0x0000000040005ef8                rom_set_loopback_gain = 0x40005ef8
                0x0000000040005f04                rom_set_noise_floor = 0x40005f04
                0x0000000040005f10                rom_set_rxclk_en = 0x40005f10
                0x0000000040005f1c                rom_set_tx_dig_gain = 0x40005f1c
                0x0000000040005f28                rom_set_txcap_reg = 0x40005f28
                0x0000000040005f34                rom_set_txclk_en = 0x40005f34
                0x0000000040005f40                rom_spur_cal = 0x40005f40
                0x0000000040005f4c                rom_spur_reg_write_one_tone = 0x40005f4c
                0x0000000040005f58                rom_target_power_add_backoff = 0x40005f58
                0x0000000040005f64                rom_tx_pwctrl_bg_init = 0x40005f64
                0x0000000040005f70                rom_txbbgain_to_index = 0x40005f70
                0x0000000040005f7c                rom_wifi_11g_rate_chg = 0x40005f7c
                0x0000000040005f88                rom_write_gain_mem = 0x40005f88
                0x0000000040005f94                chip728_phyrom_version = 0x40005f94
                0x0000000040005fa0                rom_disable_wifi_agc = 0x40005fa0
                0x0000000040005fac                rom_enable_wifi_agc = 0x40005fac
                0x0000000040005fb8                rom_bt_index_to_bb = 0x40005fb8
                0x0000000040005fc4                rom_bt_bb_to_index = 0x40005fc4
                0x0000000040005fd0                rom_spur_coef_cfg = 0x40005fd0
                0x0000000040005fdc                rom_bb_bss_cbw40 = 0x40005fdc
                0x0000000040005fe8                rom_set_cca = 0x40005fe8
                0x0000000040005ff4                rom_tx_paon_set = 0x40005ff4
                0x0000000040006000                rom_i2cmst_reg_init = 0x40006000
                0x000000004000600c                rom_iq_corr_enable = 0x4000600c
                0x0000000040006018                rom_fe_reg_init = 0x40006018
                0x0000000040006024                rom_agc_reg_init = 0x40006024
                0x0000000040006030                rom_bb_reg_init = 0x40006030
                0x000000004000603c                rom_mac_enable_bb = 0x4000603c
                0x0000000040006048                rom_bb_wdg_cfg = 0x40006048
                0x0000000040006054                rom_force_txon = 0x40006054
                0x0000000040006060                rom_fe_txrx_reset = 0x40006060
                0x000000004000606c                rom_set_rx_comp = 0x4000606c
                0x0000000040006078                rom_set_pbus_reg = 0x40006078
                0x0000000040006084                rom_write_chan_freq = 0x40006084
                0x0000000040006090                rom_phy_xpd_rf = 0x40006090
                0x000000004000609c                rom_set_xpd_sar = 0x4000609c
                0x00000000400060a8                rom_get_target_power_offset = 0x400060a8
                0x00000000400060b4                rom_write_txrate_power_offset = 0x400060b4
                0x00000000400060c0                rom_get_rate_fcc_index = 0x400060c0
                0x00000000400060cc                rom_get_rate_target_power = 0x400060cc
                0x00000000400060d8                rom_pkdet_vol_start = 0x400060d8
                0x00000000400060e4                rom_read_sar2_code = 0x400060e4
                0x00000000400060f0                rom_get_sar2_vol = 0x400060f0
                0x00000000400060fc                rom_get_pll_vol = 0x400060fc
                0x0000000040006108                rom_get_phy_target_power = 0x40006108
                0x0000000040006114                rom_temp_to_power = 0x40006114
                0x0000000040006120                rom_phy_track_pll_cap = 0x40006120
                0x000000004000612c                rom_phy_pwdet_always_en = 0x4000612c
                0x0000000040006138                rom_phy_pwdet_onetime_en = 0x40006138
                0x0000000040006144                rom_get_i2c_mst0_mask = 0x40006144
                0x0000000040006150                rom_get_i2c_hostid = 0x40006150
                0x000000004000615c                rom_enter_critical_phy = 0x4000615c
                0x0000000040006168                rom_exit_critical_phy = 0x40006168
                0x0000000040006174                rom_chip_i2c_readReg_org = 0x40006174
                0x0000000040006180                rom_i2c_paral_set_mst0 = 0x40006180
                0x000000004000618c                rom_i2c_paral_set_read = 0x4000618c
                0x0000000040006198                rom_i2c_paral_read = 0x40006198
                0x00000000400061a4                rom_i2c_paral_write = 0x400061a4
                0x00000000400061b0                rom_i2c_paral_write_num = 0x400061b0
                0x00000000400061bc                rom_i2c_paral_write_mask = 0x400061bc
                0x00000000400061c8                rom_bb_bss_cbw40_ana = 0x400061c8
                0x00000000400061d4                rom_chan_to_freq = 0x400061d4
                0x00000000400061e0                rom_open_i2c_xpd = 0x400061e0
                0x00000000400061ec                rom_dac_rate_set = 0x400061ec
                0x00000000400061f8                rom_tsens_read_init = 0x400061f8
                0x0000000040006204                rom_tsens_code_read = 0x40006204
                0x0000000040006210                rom_tsens_index_to_dac = 0x40006210
                0x000000004000621c                rom_tsens_index_to_offset = 0x4000621c
                0x0000000040006228                rom_tsens_dac_cal = 0x40006228
                0x0000000040006234                rom_code_to_temp = 0x40006234
                0x0000000040006240                rom_write_pll_cap_mem = 0x40006240
                0x000000004000624c                rom_pll_correct_dcap = 0x4000624c
                0x0000000040006258                rom_phy_en_hw_set_freq = 0x40006258
                0x0000000040006264                rom_phy_dis_hw_set_freq = 0x40006264
                0x0000000040006270                rom_pll_vol_cal = 0x40006270
                0x000000004000627c                rom_wrtie_pll_cap = 0x4000627c
                0x0000000040006288                rom_set_tx_gain_mem = 0x40006288
                0x0000000040006294                rom_bt_tx_dig_gain = 0x40006294
                0x00000000400062a0                rom_bt_get_tx_gain = 0x400062a0
                0x00000000400062ac                rom_get_chan_target_power = 0x400062ac
                0x00000000400062b8                rom_get_tx_gain_value = 0x400062b8
                0x00000000400062c4                rom_wifi_tx_dig_gain = 0x400062c4
                0x00000000400062d0                rom_wifi_get_tx_gain = 0x400062d0
                0x00000000400062dc                rom_fe_i2c_reg_renew = 0x400062dc
                0x00000000400062e8                rom_wifi_agc_sat_gain = 0x400062e8
                0x00000000400062f4                rom_i2c_master_reset = 0x400062f4
                0x0000000040006300                rom_bt_filter_reg = 0x40006300
                0x000000004000630c                rom_phy_bbpll_cal = 0x4000630c
                0x0000000040006318                rom_i2c_sar2_init_code = 0x40006318
                0x0000000040006324                rom_phy_param_addr = 0x40006324
                0x0000000040006330                rom_phy_reg_init = 0x40006330
                0x000000004000633c                rom_set_chan_reg = 0x4000633c
                0x0000000040006348                rom_phy_wakeup_init = 0x40006348
                0x0000000040006354                rom_phy_i2c_init1 = 0x40006354
                0x0000000040006360                rom_tsens_temp_read = 0x40006360
                0x000000004000636c                rom_bt_track_pll_cap = 0x4000636c
                0x0000000040006378                rom_wifi_track_pll_cap = 0x40006378
                0x0000000040006384                rom_wifi_set_tx_gain = 0x40006384
                0x0000000040006390                rom_txpwr_cal_track = 0x40006390
                0x000000004000639c                rom_tx_pwctrl_background = 0x4000639c
                0x00000000400063a8                rom_bt_set_tx_gain = 0x400063a8
                0x00000000400063b4                rom_noise_check_loop = 0x400063b4
                0x00000000400063c0                rom_phy_close_rf = 0x400063c0
                0x00000000400063cc                rom_phy_xpd_tsens = 0x400063cc
                0x00000000400063d8                rom_phy_freq_mem_backup = 0x400063d8
                0x00000000400063e4                rom_phy_ant_init = 0x400063e4
                0x00000000400063f0                rom_bt_track_tx_power = 0x400063f0
                0x00000000400063fc                rom_wifi_track_tx_power = 0x400063fc
                0x0000000040006408                rom_phy_dig_reg_backup = 0x40006408
                0x0000000040006414                chip728_phyrom_version_num = 0x40006414
                0x0000000040006420                rom_mac_tx_chan_offset = 0x40006420
                0x000000004000642c                rom_rx_gain_force = 0x4000642c
                0x000000003fcef81c                phy_param_rom = 0x3fcef81c
                0x0000000040001c98                PROVIDE (esp_rom_crc32_le = crc32_le)
                [!provide]                        PROVIDE (esp_rom_crc16_le = crc16_le)
                [!provide]                        PROVIDE (esp_rom_crc8_le = crc8_le)
                [!provide]                        PROVIDE (esp_rom_crc32_be = crc32_be)
                [!provide]                        PROVIDE (esp_rom_crc16_be = crc16_be)
                [!provide]                        PROVIDE (esp_rom_crc8_be = crc8_be)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_select_gpio = gpio_pad_select_gpio)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_pullup_only = gpio_pad_pullup)
                0x0000000040001b18                PROVIDE (esp_rom_gpio_pad_set_drv = gpio_pad_set_drv)
                [!provide]                        PROVIDE (esp_rom_gpio_pad_unhold = gpio_pad_unhold)
                0x0000000040001a94                PROVIDE (esp_rom_gpio_connect_in_signal = gpio_matrix_in)
                0x0000000040001aa0                PROVIDE (esp_rom_gpio_connect_out_signal = gpio_matrix_out)
                [!provide]                        PROVIDE (esp_rom_efuse_mac_address_crc8 = esp_crc8)
                0x0000000040001f74                PROVIDE (esp_rom_efuse_get_flash_gpio_info = ets_efuse_get_spiconfig)
                0x0000000040001fa4                PROVIDE (esp_rom_efuse_get_flash_wp_gpio = ets_efuse_get_wp_pad)
                [!provide]                        PROVIDE (esp_rom_efuse_is_secure_boot_enabled = ets_efuse_secure_boot_enabled)
                [!provide]                        PROVIDE (esp_rom_uart_flush_tx = uart_tx_flush)
                0x0000000040000648                PROVIDE (esp_rom_uart_tx_one_char = uart_tx_one_char)
                0x000000004000069c                PROVIDE (esp_rom_uart_tx_wait_idle = uart_tx_wait_idle)
                [!provide]                        PROVIDE (esp_rom_uart_rx_one_char = uart_rx_one_char)
                [!provide]                        PROVIDE (esp_rom_uart_rx_string = UartRxString)
                [!provide]                        PROVIDE (esp_rom_uart_set_as_console = uart_tx_switch)
                [!provide]                        PROVIDE (esp_rom_uart_usb_acm_init = Uart_Init_USB)
                [!provide]                        PROVIDE (esp_rom_uart_putc = ets_write_char_uart)
                [!provide]                        PROVIDE (esp_rom_md5_init = MD5Init)
                [!provide]                        PROVIDE (esp_rom_md5_update = MD5Update)
                [!provide]                        PROVIDE (esp_rom_md5_final = MD5Final)
                [!provide]                        PROVIDE (esp_rom_software_reset_system = software_reset)
                0x00000000400006e4                PROVIDE (esp_rom_software_reset_cpu = software_reset_cpu)
                0x00000000400005d0                PROVIDE (esp_rom_printf = ets_printf)
                0x0000000040000600                PROVIDE (esp_rom_delay_us = ets_delay_us)
                [!provide]                        PROVIDE (esp_rom_install_uart_printf = ets_install_uart_printf)
                0x000000004000057c                PROVIDE (esp_rom_get_reset_reason = rtc_get_reset_reason)
                0x0000000040001b54                PROVIDE (esp_rom_route_intr_matrix = intr_matrix_set)
                0x0000000040001a40                PROVIDE (esp_rom_get_cpu_ticks_per_us = ets_get_cpu_frequency)
                0x0000000040001a4c                PROVIDE (esp_rom_set_cpu_ticks_per_us = ets_update_cpu_frequency)
                [!provide]                        PROVIDE (esp_rom_spiflash_attach = spi_flash_attach)
                [!provide]                        PROVIDE (esp_rom_spiflash_clear_bp = esp_rom_spiflash_unlock)
                0x0000000040000a44                PROVIDE (esp_rom_spiflash_write_enable = SPI_write_enable)
                [!provide]                        PROVIDE (esp_rom_spiflash_erase_area = SPIEraseArea)
                [!provide]                        PROVIDE (esp_rom_spiflash_fix_dummylen = spi_dummy_len_fix)
                [!provide]                        PROVIDE (esp_rom_spiflash_set_drvs = SetSpiDrvs)
                [!provide]                        PROVIDE (esp_rom_spiflash_select_padsfunc = SelectSpiFunction)
                [!provide]                        PROVIDE (esp_rom_spiflash_common_cmd = SPI_Common_Command)
                0x0000000040005d48                PROVIDE (esp_rom_regi2c_read = rom_i2c_readReg)
                0x0000000040005d54                PROVIDE (esp_rom_regi2c_read_mask = rom_i2c_readReg_Mask)
                0x0000000040005d60                PROVIDE (esp_rom_regi2c_write = rom_i2c_writeReg)
                0x0000000040005d6c                PROVIDE (esp_rom_regi2c_write_mask = rom_i2c_writeReg_Mask)
                0x000000004000216c                __absvdi2 = 0x4000216c
                0x0000000040002178                __absvsi2 = 0x40002178
                0x0000000040002184                __adddf3 = 0x40002184
                0x0000000040002190                __addsf3 = 0x40002190
                0x000000004000219c                __addvdi3 = 0x4000219c
                0x00000000400021a8                __addvsi3 = 0x400021a8
                0x00000000400021b4                __ashldi3 = 0x400021b4
                0x00000000400021c0                __ashrdi3 = 0x400021c0
                0x00000000400021cc                __bswapdi2 = 0x400021cc
                0x00000000400021d8                __bswapsi2 = 0x400021d8
                0x00000000400021e4                __clear_cache = 0x400021e4
                0x00000000400021f0                __clrsbdi2 = 0x400021f0
                0x00000000400021fc                __clrsbsi2 = 0x400021fc
                0x0000000040002208                __clzdi2 = 0x40002208
                0x0000000040002214                __clzsi2 = 0x40002214
                0x0000000040002220                __cmpdi2 = 0x40002220
                0x000000004000222c                __ctzdi2 = 0x4000222c
                0x0000000040002238                __ctzsi2 = 0x40002238
                0x0000000040002244                __divdc3 = 0x40002244
                0x0000000040002250                __divdf3 = 0x40002250
                0x000000004000225c                __divdi3 = 0x4000225c
                0x0000000040002268                __divsc3 = 0x40002268
                0x0000000040002274                __divsf3 = 0x40002274
                0x0000000040002280                __divsi3 = 0x40002280
                0x000000004000228c                __eqdf2 = 0x4000228c
                0x0000000040002298                __eqsf2 = 0x40002298
                0x00000000400022a4                __extendsfdf2 = 0x400022a4
                0x00000000400022b0                __ffsdi2 = 0x400022b0
                0x00000000400022bc                __ffssi2 = 0x400022bc
                0x00000000400022c8                __fixdfdi = 0x400022c8
                0x00000000400022d4                __fixdfsi = 0x400022d4
                0x00000000400022e0                __fixsfdi = 0x400022e0
                0x00000000400022ec                __fixsfsi = 0x400022ec
                0x00000000400022f8                __fixunsdfsi = 0x400022f8
                0x0000000040002304                __fixunssfdi = 0x40002304
                0x0000000040002310                __fixunssfsi = 0x40002310
                0x000000004000231c                __floatdidf = 0x4000231c
                0x0000000040002328                __floatdisf = 0x40002328
                0x0000000040002334                __floatsidf = 0x40002334
                0x0000000040002340                __floatsisf = 0x40002340
                0x000000004000234c                __floatundidf = 0x4000234c
                0x0000000040002358                __floatundisf = 0x40002358
                0x0000000040002364                __floatunsidf = 0x40002364
                0x0000000040002370                __floatunsisf = 0x40002370
                0x000000004000237c                __gcc_bcmp = 0x4000237c
                0x0000000040002388                __gedf2 = 0x40002388
                0x0000000040002394                __gesf2 = 0x40002394
                0x00000000400023a0                __gtdf2 = 0x400023a0
                0x00000000400023ac                __gtsf2 = 0x400023ac
                0x00000000400023b8                __ledf2 = 0x400023b8
                0x00000000400023c4                __lesf2 = 0x400023c4
                0x00000000400023d0                __lshrdi3 = 0x400023d0
                0x00000000400023dc                __ltdf2 = 0x400023dc
                0x00000000400023e8                __ltsf2 = 0x400023e8
                0x00000000400023f4                __moddi3 = 0x400023f4
                0x0000000040002400                __modsi3 = 0x40002400
                0x000000004000240c                __muldc3 = 0x4000240c
                0x0000000040002418                __muldf3 = 0x40002418
                0x0000000040002424                __muldi3 = 0x40002424
                0x0000000040002430                __mulsc3 = 0x40002430
                0x000000004000243c                __mulsf3 = 0x4000243c
                0x0000000040002448                __mulsi3 = 0x40002448
                0x0000000040002454                __mulvdi3 = 0x40002454
                0x0000000040002460                __mulvsi3 = 0x40002460
                0x000000004000246c                __nedf2 = 0x4000246c
                0x0000000040002478                __negdf2 = 0x40002478
                0x0000000040002484                __negdi2 = 0x40002484
                0x0000000040002490                __negsf2 = 0x40002490
                0x000000004000249c                __negvdi2 = 0x4000249c
                0x00000000400024a8                __negvsi2 = 0x400024a8
                0x00000000400024b4                __nesf2 = 0x400024b4
                0x00000000400024c0                __paritysi2 = 0x400024c0
                0x00000000400024cc                __popcountdi2 = 0x400024cc
                0x00000000400024d8                __popcountsi2 = 0x400024d8
                0x00000000400024e4                __powidf2 = 0x400024e4
                0x00000000400024f0                __powisf2 = 0x400024f0
                0x00000000400024fc                __subdf3 = 0x400024fc
                0x0000000040002508                __subsf3 = 0x40002508
                0x0000000040002514                __subvdi3 = 0x40002514
                0x0000000040002520                __subvsi3 = 0x40002520
                0x000000004000252c                __truncdfsf2 = 0x4000252c
                0x0000000040002538                __ucmpdi2 = 0x40002538
                0x0000000040002544                __udivdi3 = 0x40002544
                0x0000000040002550                __udivmoddi4 = 0x40002550
                0x000000004000255c                __udivsi3 = 0x4000255c
                0x0000000040002568                __udiv_w_sdiv = 0x40002568
                0x0000000040002574                __umoddi3 = 0x40002574
                0x0000000040002580                __umodsi3 = 0x40002580
                0x000000004000258c                __unorddf2 = 0x4000258c
                0x0000000040002598                __unordsf2 = 0x40002598
                0x00000000400011dc                esp_rom_newlib_init_common_mutexes = 0x400011dc
                0x00000000400011e8                memset = 0x400011e8
                0x00000000400011f4                memcpy = 0x400011f4
                0x0000000040001200                memmove = 0x40001200
                0x000000004000120c                memcmp = 0x4000120c
                0x0000000040001218                strcpy = 0x40001218
                0x0000000040001224                strncpy = 0x40001224
                0x0000000040001230                strcmp = 0x40001230
                0x000000004000123c                strncmp = 0x4000123c
                0x0000000040001248                strlen = 0x40001248
                0x0000000040001254                strstr = 0x40001254
                0x0000000040001260                bzero = 0x40001260
                0x0000000040001278                sbrk = 0x40001278
                0x0000000040001284                isalnum = 0x40001284
                0x0000000040001290                isalpha = 0x40001290
                0x000000004000129c                isascii = 0x4000129c
                0x00000000400012a8                isblank = 0x400012a8
                0x00000000400012b4                iscntrl = 0x400012b4
                0x00000000400012c0                isdigit = 0x400012c0
                0x00000000400012cc                islower = 0x400012cc
                0x00000000400012d8                isgraph = 0x400012d8
                0x00000000400012e4                isprint = 0x400012e4
                0x00000000400012f0                ispunct = 0x400012f0
                0x00000000400012fc                isspace = 0x400012fc
                0x0000000040001308                isupper = 0x40001308
                0x0000000040001314                toupper = 0x40001314
                0x0000000040001320                tolower = 0x40001320
                0x000000004000132c                toascii = 0x4000132c
                0x0000000040001338                memccpy = 0x40001338
                0x0000000040001344                memchr = 0x40001344
                0x0000000040001350                memrchr = 0x40001350
                0x000000004000135c                strcasecmp = 0x4000135c
                0x0000000040001368                strcasestr = 0x40001368
                0x0000000040001374                strcat = 0x40001374
                0x000000004000138c                strchr = 0x4000138c
                0x0000000040001398                strcspn = 0x40001398
                0x00000000400013a4                strcoll = 0x400013a4
                0x00000000400013b0                strlcat = 0x400013b0
                0x00000000400013bc                strlcpy = 0x400013bc
                0x00000000400013c8                strlwr = 0x400013c8
                0x00000000400013d4                strncasecmp = 0x400013d4
                0x00000000400013e0                strncat = 0x400013e0
                0x00000000400013f8                strnlen = 0x400013f8
                0x0000000040001404                strrchr = 0x40001404
                0x0000000040001410                strsep = 0x40001410
                0x000000004000141c                strspn = 0x4000141c
                0x0000000040001428                strtok_r = 0x40001428
                0x0000000040001434                strupr = 0x40001434
                0x0000000040001440                longjmp = 0x40001440
                0x000000004000144c                setjmp = 0x4000144c
                0x0000000040001458                abs = 0x40001458
                0x0000000040001464                div = 0x40001464
                0x0000000040001470                labs = 0x40001470
                0x000000004000147c                ldiv = 0x4000147c
                0x0000000040001488                qsort = 0x40001488
                0x00000000400014b8                utoa = 0x400014b8
                0x00000000400014c4                itoa = 0x400014c4
                [!provide]                        PROVIDE (atoi = 0x400014d0)
                [!provide]                        PROVIDE (atol = 0x400014dc)
                [!provide]                        PROVIDE (strdup = 0x40001380)
                [!provide]                        PROVIDE (strndup = 0x400013ec)
                [!provide]                        PROVIDE (rand_r = 0x40001494)
                [!provide]                        PROVIDE (rand = 0x400014a0)
                [!provide]                        PROVIDE (srand = 0x400014ac)
                [!provide]                        PROVIDE (strtol = 0x400014e8)
                [!provide]                        PROVIDE (strtoul = 0x400014f4)
                [!provide]                        PROVIDE (fflush = 0x40001500)
                [!provide]                        PROVIDE (_fflush_r = 0x4000150c)
                [!provide]                        PROVIDE (_fwalk = 0x40001518)
                [!provide]                        PROVIDE (_fwalk_reent = 0x40001524)
                [!provide]                        PROVIDE (__swbuf_r = 0x40001548)
                0x0000000040001554                __swbuf = 0x40001554
                0x000000003fceffd4                syscall_table_ptr = 0x3fceffd4
                0x000000003fceffd0                _global_impure_ptr = 0x3fceffd0
                0x0000000040000570                _rom_chip_id = 0x40000570
                0x0000000040000574                _rom_eco_version = 0x40000574
                0x0000000060000000                PROVIDE (UART0 = 0x60000000)
                0x0000000060002000                PROVIDE (SPIMEM1 = 0x60002000)
                0x0000000060003000                PROVIDE (SPIMEM0 = 0x60003000)
                0x0000000060004000                PROVIDE (GPIO = 0x60004000)
                [!provide]                        PROVIDE (SDM = 0x60004f00)
                0x0000000060007000                PROVIDE (EFUSE = 0x60007000)
                0x0000000060008000                PROVIDE (RTCCNTL = 0x60008000)
                0x0000000060008400                PROVIDE (RTCIO = 0x60008400)
                0x0000000060008800                PROVIDE (SENS = 0x60008800)
                [!provide]                        PROVIDE (RTC_I2C = 0x60008c00)
                [!provide]                        PROVIDE (HINF = 0x6000b000)
                [!provide]                        PROVIDE (I2S0 = 0x6000f000)
                [!provide]                        PROVIDE (I2S1 = 0x6002d000)
                0x0000000060010000                PROVIDE (UART1 = 0x60010000)
                [!provide]                        PROVIDE (I2C0 = 0x60013000)
                [!provide]                        PROVIDE (UHCI0 = 0x60014000)
                [!provide]                        PROVIDE (UHCI1 = 0x60014000)
                [!provide]                        PROVIDE (HOST = 0x60015000)
                [!provide]                        PROVIDE (RMT = 0x60016000)
                [!provide]                        PROVIDE (RMTMEM = 0x60016800)
                [!provide]                        PROVIDE (PCNT = 0x60017000)
                [!provide]                        PROVIDE (SLC = 0x60018000)
                0x0000000060019000                PROVIDE (LEDC = 0x60019000)
                [!provide]                        PROVIDE (MCPWM0 = 0x6001e000)
                [!provide]                        PROVIDE (MCPWM1 = 0x6002c000)
                [!provide]                        PROVIDE (MCP = 0x600c3000)
                0x000000006001f000                PROVIDE (TIMERG0 = 0x6001f000)
                0x0000000060020000                PROVIDE (TIMERG1 = 0x60020000)
                0x0000000060023000                PROVIDE (SYSTIMER = 0x60023000)
                0x0000000060024000                PROVIDE (GPSPI2 = 0x60024000)
                0x0000000060025000                PROVIDE (GPSPI3 = 0x60025000)
                [!provide]                        PROVIDE (SYSCON = 0x60026000)
                [!provide]                        PROVIDE (I2C1 = 0x60027000)
                [!provide]                        PROVIDE (SDMMC = 0x60028000)
                [!provide]                        PROVIDE (TWAI = 0x6002b000)
                [!provide]                        PROVIDE (GPSPI4 = 0x60037000)
                [!provide]                        PROVIDE (GDMA = 0x6003f000)
                0x000000006002e000                PROVIDE (UART2 = 0x6002e000)
                [!provide]                        PROVIDE (DMA = 0x6003f000)
                0x0000000060040000                PROVIDE (APB_SARADC = 0x60040000)
                [!provide]                        PROVIDE (LCD_CAM = 0x60041000)
                0x0000000060038000                PROVIDE (USB_SERIAL_JTAG = 0x60038000)
                [!provide]                        PROVIDE (USB0 = 0x60080000)
                [!provide]                        PROVIDE (USB_DWC = 0x60080000)
                [!provide]                        PROVIDE (USB_WRAP = 0x60039000)
                [!provide]                        PROVIDE (WORLD_CONTROLLER = 0x600d0000)
OUTPUT(zephyr_pre0.elf elf32-xtensa-le)
